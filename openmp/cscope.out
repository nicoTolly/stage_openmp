cscope 15 $HOME/stage/openmp               0000513925
	@NaN/src/covm_mex.cpp

43 #ifde‡
__GNUC__


44 
	~<°döt.h
>

46 
	~<m©h.h
>

47 
	~"mex.h
"

55 
	#ISNAN
(
a
Ë◊!˜)

	)

57 #i‚de‡
ty≥of


58 
	#ty≥of
 
__ty≥of__


	)

61 
	$mexFun˘i⁄
(
POuçutCou¡
, 
mxAºay
* 
POuçut
[], 
PI≈utCou¡
, c⁄° mxAºay *
PI≈uts
[])

63 *
X0
=
NULL
, *
Y0
=NULL, *
W
=NULL;

64 *
CC
;

65 *
NN
 = 
NULL
;

67 
size_t
 
rX
,
cX
,
rY
,
cY
;

68 
size_t
 
i
;

69 
Êag_isNaN
 = 0;

70 
ACC_LEVEL
;

75 i‡((
PI≈utCou¡
 <= 0) || (PInputCount > 5)) {

76 
	`mexPrötf
("usage: [CC,NN] = covm_mex(X [,Y [,flag [,W [,'E']]]])\n\n");

77 
	`mexPrötf
("DoÇot use COVM_MEX directly, use COVM instead. \n");

90 i‡(
POuçutCou¡
 > 2)

91 
	`mexEºMsgTxt
("covm.MEX has 1Åo 2 outputárguments.");

95 if(
	`mxIsDoubÀ
(
PI≈uts
[0]Ë&& !
	`mxIsCom∂ex
(PI≈uts[0]Ë&& !
	`mxIsS∑r£
(PInputs[0]) )

96 
X0
 = 
	`mxGëPr
(
PI≈uts
[0]);

98 
	`mexEºMsgTxt
("Firstárgument must beÇon-sparse REAL/DOUBLE.");

99 
rX
 = 
	`mxGëM
(
PI≈uts
[0]);

100 
cX
 = 
	`mxGëN
(
PI≈uts
[0]);

103 i‡(
PI≈utCou¡
 > 1) {

104 i‡(!
	`mxGëNumbîOfEÀmíts
(
PI≈uts
[1]))

107 i‡(
	`mxIsDoubÀ
(
PI≈uts
[1]Ë&& !
	`mxIsCom∂ex
(PInputs[1]))

108 
Y0
 = 
	`mxGëPr
(
PI≈uts
[1]);

111 
	`mexEºMsgTxt
("Secondárgument must be REAL/DOUBLE.");

116 i‡(
PI≈utCou¡
 > 3) {

118 
size_t
 
nW
 = 
	`mxGëNumbîOfEÀmíts
(
PI≈uts
[3]);

119 i‡(!
nW
)

121 i‡(
nW
 =
rX
)

122 
W
 = 
	`mxGëPr
(
PI≈uts
[3]);

124 
	`mexEºMsgTxt
("number ofÉlements in W must matchÇumbers ofÑows in X");

127 #ifde‡
__GNUC__


128 
ACC_LEVEL
 = 0;

130 
mxAºay
 *
LEVEL
 = 
NULL
;

131 
s
 = 
	`mexCÆlMATLAB
(1, &
LEVEL
, 0, 
NULL
, "flag_accuracy_level");

132 i‡(!
s
) {

133 
ACC_LEVEL
 = (Ë
	`mxGëSˇœr
(
LEVEL
);

135 
	`mxDe°royAºay
(
LEVEL
);

139 i‡(
Y0
==
NULL
) {

140 
Y0
 = 
X0
;

141 
rY
 = 
rX
;

142 
cY
 = 
cX
;

145 
rY
 = 
	`mxGëM
(
PI≈uts
[1]);

146 
cY
 = 
	`mxGëN
(
PI≈uts
[1]);

148 i‡(
rX
 !
rY
)

149 
	`mexEºMsgTxt
("number ofÑows in Xánd Y doÇot match");

153 
POuçut
[0] = 
	`mxCª©eDoubÀM©rix
(
cX
, 
cY
, 
mxREAL
);

154 
CC
 = 
	`mxGëPr
(
POuçut
[0]);

156 i‡(
POuçutCou¡
 > 1) {

157 
POuçut
[1] = 
	`mxCª©eDoubÀM©rix
(
cX
, 
cY
, 
mxREAL
);

158 
NN
 = 
	`mxGëPr
(
POuçut
[1]);

169 
k
=0; k<
rX
; k++) {

170 
w
;

171 i‡(
W
) {

172 
w
 = 
W
[
k
];

173 
i
=0; i<
cX
; i++) {

174 
x
 = 
X0
[
k
+
i
*
rX
];

175 i‡(
	`ISNAN
(
x
)) {

176 #i‚de‡
NO_FLAG


177 
Êag_isNaN
 = 1;

181 
j
=0; j<
cY
; j++) {

182 
y
 = 
Y0
[
k
+
j
*
rY
];

183 i‡(
	`ISNAN
(
y
)) {

184 #i‚de‡
NO_FLAG


185 
Êag_isNaN
 = 1;

189 
CC
[
i
+
j
*
cX
] +
x
*
y
*
w
;

190 i‡(
NN
 !
NULL
)

191 
NN
[
i
+
j
*
cX
] +
w
;

195 
i
=0; i<
cX
; i++) {

196 
x
 = 
X0
[
k
+
i
*
rX
];

197 i‡(
	`ISNAN
(
x
)) {

198 #i‚de‡
NO_FLAG


199 
Êag_isNaN
 = 1;

203 
j
=0; j<
cY
; j++) {

204 
y
 = 
Y0
[
k
+
j
*
rY
];

205 i‡(
	`ISNAN
(
y
)) {

206 #i‚de‡
NO_FLAG


207 
Êag_isNaN
 = 1;

211 
CC
[
i
+
j
*
cX
] +
x
*
y
;

212 i‡(
NN
 !
NULL
)

213 
NN
[
i
+
j
*
cX
] += 1.0;

220 #¥agm®
omp
 
∑øŒñ


222 #ifde‡
__GNUC__


223 i‡(
ACC_LEVEL
 == 0)

229 i‡–(
X0
 !
Y0
Ë|| (
cX
 !
cY
) )

231 i‡(
W
)

232 #¥agm®
omp
 
	`scheduÀ
(
dy«mic
Ë
nowaô


233 
i
 = 0; i < 
cX
 * 
cY
; i++)

235 *
X
 = 
X0
 + (
i
%
cX
Ë* 
rX
;

236 *
Y
 = 
Y0
 + (
i
/
cX
Ë* 
rY
;

237 
cc
 = 0.0;

238 
nw
 = 0.0;

239 
size_t
 
k
;

240 
k
=0; k<
rX
; k++) {

241 
z
 = 
X
[
k
]*
Y
[k];

242 i‡(
	`ISNAN
(
z
)) {

243 #i‚de‡
NO_FLAG


244 
Êag_isNaN
 = 1;

248 
cc
 +
z
*
W
[
k
];

249 
nw
 +
W
[
k
];

251 
CC
[
i
] = 
cc
;

252 i‡(
NN
 !
NULL
)

253 
NN
[
i
] = 
nw
;

256 #¥agm®
omp
 
	`scheduÀ
(
dy«mic
Ë
nowaô


257 
i
 = 0; i < 
cX
 * 
cY
; i++)

259 *
X
 = 
X0
 + (
i
%
cX
Ë* 
rX
;

260 *
Y
 = 
Y0
 + (
i
/
cX
Ë* 
rY
;

261 
cc
 = 0.0;

262 
size_t
 
¬
 = 0;

263 
size_t
 
k
;

264 
k
=0; k<
rX
; k++) {

265 
z
 = 
X
[
k
]*
Y
[k];

266 i‡(
	`ISNAN
(
z
)) {

267 #i‚de‡
NO_FLAG


268 
Êag_isNaN
 = 1;

272 
cc
 +
z
;

273 
¬
++;

275 
CC
[
i
] = 
cc
;

276 i‡(
NN
 !
NULL
)

277 
NN
[
i
] = ()
¬
;

281 i‡(
W
)

282 #¥agm®
omp
 
	`scheduÀ
(
dy«mic
Ë
nowaô


283 
i
 = 0; i < 
cX
 * 
cY
; i++)

285 
size_t
 
ii
 = 
i
%
cX
;

286 
size_t
 
jj
 = 
i
/
cX
;

287 i‡(
ii
 < 
jj
) ;

288 *
X
 = 
X0
 + 
ii
 * 
rX
;

289 *
Y
 = 
Y0
 + 
jj
 * 
rY
;

290 
cc
 = 0.0;

291 
nw
 = 0.0;

292 
size_t
 
k
;

293 
k
=0; k<
rX
; k++) {

294 
z
 = 
X
[
k
]*
Y
[k];

295 i‡(
	`ISNAN
(
z
)) {

296 #i‚de‡
NO_FLAG


297 
Êag_isNaN
 = 1;

301 
cc
 +
z
*
W
[
k
];

302 
nw
 +
W
[
k
];

304 
size_t
 
j
 = 
jj
 + 
ii
*
cX
;

305 
CC
[
i
] = 
cc
;

306 
CC
[
j
] = 
cc
;

307 i‡(
NN
 !
NULL
) {

308 
NN
[
i
] = 
nw
;

309 
NN
[
j
] = 
nw
;

313 #¥agm®
omp
 
	`scheduÀ
(
dy«mic
Ë
nowaô


314 
i
 = 0; i < 
cX
 * 
cY
; i++)

316 
size_t
 
ii
 = 
i
%
cX
;

317 
size_t
 
jj
 = 
i
/
cX
;

318 i‡(
ii
 < 
jj
) ;

319 *
X
 = 
X0
 + 
ii
 * 
rX
;

320 *
Y
 = 
Y0
 + 
jj
 * 
rY
;

321 
cc
 = 0.0;

322 
size_t
 
¬
 = 0;

323 
size_t
 
k
;

324 
k
=0; k<
rX
; k++) {

325 
z
 = 
X
[
k
]*
Y
[k];

326 i‡(
	`ISNAN
(
z
)) {

327 #i‚de‡
NO_FLAG


328 
Êag_isNaN
 = 1;

332 
cc
 +
z
;

333 
¬
++;

335 
size_t
 
j
 = 
jj
 + 
ii
*
cX
;

336 
CC
[
i
] = 
cc
;

337 
CC
[
j
] = 
cc
;

338 i‡(
NN
 !
NULL
) {

339 
NN
[
i
] = ()
¬
;

340 
NN
[
j
] = ()
¬
;

346 #ifde‡
__GNUC__


348 i‡(
ACC_LEVEL
 == 1) {

352 i‡–(
X0
 !
Y0
Ë|| (
cX
 !
cY
) )

354 i‡(
W
)

355 #¥agm®
omp
 
	`scheduÀ
(
dy«mic
Ë
nowaô


356 
i
 = 0; i < 
cX
 * 
cY
; i++)

358 *
X
 = 
X0
 + (
i
%
cX
Ë* 
rX
;

359 *
Y
 = 
Y0
 + (
i
/
cX
Ë* 
rY
;

360 
cc
=0.0;

361 
¬
=0.0;

362 
size_t
 
k
;

363 
k
=0; k<
rX
; k++) {

364 
z
 = (()
X
[
k
])*
Y
[k];

365 i‡(
	`ISNAN
(
z
)) {

366 #i‚de‡
NO_FLAG


367 
Êag_isNaN
 = 1;

371 
cc
 +
z
*
W
[
k
];

372 
¬
 +
W
[
k
];

374 
CC
[
i
] = (
	`ty≥of
(*CC))
cc
;

375 i‡(
NN
 !
NULL
)

376 
NN
[
i
] = (
	`ty≥of
(*NN))
¬
;

379 #¥agm®
omp
 
	`scheduÀ
(
dy«mic
Ë
nowaô


380 
i
 = 0; i < 
cX
 * 
cY
; i++)

382 *
X
 = 
X0
 + (
i
%
cX
Ë* 
rX
;

383 *
Y
 = 
Y0
 + (
i
/
cX
Ë* 
rY
;

384 
cc
=0.0;

385 
size_t
 
¬
=0;

386 
size_t
 
k
;

387 
k
=0; k<
rX
; k++) {

388 
z
 = (()
X
[
k
])*
Y
[k];

389 i‡(
	`ISNAN
(
z
)) {

390 #i‚de‡
NO_FLAG


391 
Êag_isNaN
 = 1;

395 
cc
 +
z
;

396 
¬
++;

398 
CC
[
i
] = (
	`ty≥of
(*CC))
cc
;

399 i‡(
NN
 !
NULL
)

400 
NN
[
i
] = (
	`ty≥of
(*NN))
¬
;

404 i‡(
W
)

405 #¥agm®
omp
 
	`scheduÀ
(
dy«mic
Ë
nowaô


406 
i
 = 0; i < 
cX
 * 
cY
; i++)

408 
size_t
 
ii
 = 
i
%
cX
;

409 
size_t
 
jj
 = 
i
/
cX
;

410 i‡(
ii
 < 
jj
) ;

411 *
X
 = 
X0
 + 
ii
 * 
rX
;

412 *
Y
 = 
Y0
 + 
jj
 * 
rY
;

413 
cc
=0.0;

414 
¬
=0.0;

415 
size_t
 
k
;

416 
k
=0; k<
rX
; k++) {

417 
z
 = (()
X
[
k
])*
Y
[k];

418 i‡(
	`ISNAN
(
z
)) {

419 #i‚de‡
NO_FLAG


420 
Êag_isNaN
 = 1;

424 
cc
 +
z
*
W
[
k
];

425 
¬
 +
W
[
k
];

427 
size_t
 
j
 = 
jj
 + 
ii
*
cX
;

428 
CC
[
i
] = (
	`ty≥of
(*CC))
cc
;

429 
CC
[
j
] = (
	`ty≥of
(*CC))
cc
;

430 i‡(
NN
 !
NULL
) {

431 
NN
[
i
] = (
	`ty≥of
(*NN))
¬
;

432 
NN
[
j
] = (
	`ty≥of
(*NN))
¬
;

436 #¥agm®
omp
 
	`scheduÀ
(
dy«mic
Ë
nowaô


437 
i
 = 0; i < 
cX
 * 
cY
; i++)

439 
size_t
 
ii
 = 
i
%
cX
;

440 
size_t
 
jj
 = 
i
/
cX
;

441 i‡(
ii
 < 
jj
) ;

442 *
X
 = 
X0
 + 
ii
 * 
rX
;

443 *
Y
 = 
Y0
 + 
jj
 * 
rY
;

444 
cc
=0.0;

445 
size_t
 
¬
=0;

446 
size_t
 
k
;

447 
k
=0; k<
rX
; k++) {

448 
z
 = (()
X
[
k
])*
Y
[k];

449 i‡(
	`ISNAN
(
z
)) {

450 #i‚de‡
NO_FLAG


451 
Êag_isNaN
 = 1;

455 
cc
 +
z
;

456 
¬
++;

458 
size_t
 
j
 = 
jj
 + 
ii
*
cX
;

459 
CC
[
i
] = (
	`ty≥of
(*CC))
cc
;

460 
CC
[
j
] = (
	`ty≥of
(*CC))
cc
;

461 i‡(
NN
 !
NULL
) {

462 
NN
[
i
] = (
	`ty≥of
(*NN))
¬
;

463 
NN
[
j
] = (
	`ty≥of
(*NN))
¬
;

468 i‡(
ACC_LEVEL
 == 3) {

478 i‡–(
X0
 !
Y0
Ë|| (
cX
 !
cY
) )

480 i‡(
W
)

481 #¥agm®
omp
 
	`scheduÀ
(
dy«mic
Ë
nowaô


482 
i
 = 0; i < 
cX
 * 
cY
; i++)

484 *
X
 = 
X0
 + (
i
%
cX
Ë* 
rX
;

485 *
Y
 = 
Y0
 + (
i
/
cX
Ë* 
rY
;

486 
cc
=0.0;

487 
¬
=0.0;

488 
rc
=0.0;

489 
∫
=0.0;

490 
size_t
 
k
;

491 
k
=0; k<
rX
; k++) {

492 
t
,
y
;

493 
z
 = (()
X
[
k
])*
Y
[k];

494 i‡(
	`ISNAN
(
z
)) {

495 #i‚de‡
NO_FLAG


496 
Êag_isNaN
 = 1;

501 
y
 = 
z
*
W
[
k
]-
rc
;

502 
t
 = 
cc
+
y
;

503 
rc
(
t
-
cc
)-
y
;

504 
cc

t
;

507 
y
 = 
z
*
W
[
k
]-
∫
;

508 
t
 = 
¬
+
y
;

509 
∫
(
t
-
¬
)-
y
;

510 
¬

t
;

512 
CC
[
i
] = (
	`ty≥of
(*CC))
cc
;

513 i‡(
NN
 !
NULL
)

514 
NN
[
i
] = (
	`ty≥of
(*NN))
¬
;

517 #¥agm®
omp
 
	`scheduÀ
(
dy«mic
Ë
nowaô


518 
i
 = 0; i < 
cX
 * 
cY
; i++)

520 *
X
 = 
X0
 + (
i
%
cX
Ë* 
rX
;

521 *
Y
 = 
Y0
 + (
i
/
cX
Ë* 
rY
;

522 
cc
=0.0;

523 
rc
=0.0;

524 
size_t
 
¬
=0;

525 
size_t
 
k
;

526 
k
=0; k<
rX
; k++) {

527 
t
,
y
;

528 
z
 = (()
X
[
k
])*
Y
[k];

529 i‡(
	`ISNAN
(
z
)) {

530 #i‚de‡
NO_FLAG


531 
Êag_isNaN
 = 1;

536 
y
 = 
z
-
rc
;

537 
t
 = 
cc
+
y
;

538 
rc
(
t
-
cc
)-
y
;

539 
cc

t
;

541 
¬
++;

543 
CC
[
i
] = (
	`ty≥of
(*CC))
cc
;

544 i‡(
NN
 !
NULL
)

545 
NN
[
i
] = (
	`ty≥of
(*NN))
¬
;

549 i‡(
W
)

550 #¥agm®
omp
 
	`scheduÀ
(
dy«mic
Ë
nowaô


551 
i
 = 0; i < 
cX
 * 
cY
; i++)

553 
size_t
 
ii
 = 
i
%
cX
;

554 
size_t
 
jj
 = 
i
/
cX
;

555 i‡(
ii
 < 
jj
) ;

556 *
X
 = 
X0
 + 
ii
 * 
rX
;

557 *
Y
 = 
Y0
 + 
jj
 * 
rY
;

558 
cc
=0.0;

559 
¬
=0.0;

560 
rc
=0.0;

561 
∫
=0.0;

562 
size_t
 
k
;

563 
k
=0; k<
rX
; k++) {

564 
t
,
y
;

565 
z
 = (()
X
[
k
])*
Y
[k];

566 i‡(
	`ISNAN
(
z
)) {

567 #i‚de‡
NO_FLAG


568 
Êag_isNaN
 = 1;

573 
y
 = 
z
*
W
[
k
]-
rc
;

574 
t
 = 
cc
+
y
;

575 
rc
(
t
-
cc
)-
y
;

576 
cc

t
;

579 
y
 = 
z
*
W
[
k
]-
∫
;

580 
t
 = 
¬
+
y
;

581 
∫
(
t
-
¬
)-
y
;

582 
¬

t
;

584 
size_t
 
j
 = 
jj
 + 
ii
*
cX
;

585 
CC
[
i
] = (
	`ty≥of
(*CC))
cc
;

586 
CC
[
j
] = (
	`ty≥of
(*CC))
cc
;

587 i‡(
NN
 !
NULL
) {

588 
NN
[
i
] = (
	`ty≥of
(*NN))
¬
;

589 
NN
[
j
] = (
	`ty≥of
(*NN))
¬
;

593 #¥agm®
omp
 
	`scheduÀ
(
dy«mic
Ë
nowaô


594 
i
 = 0; i < 
cX
 * 
cY
; i++)

596 
size_t
 
ii
 = 
i
%
cX
;

597 
size_t
 
jj
 = 
i
/
cX
;

598 i‡(
ii
 < 
jj
) ;

599 *
X
 = 
X0
 + 
ii
 * 
rX
;

600 *
Y
 = 
Y0
 + 
jj
 * 
rY
;

601 
cc
=0.0;

602 
rc
=0.0;

603 
size_t
 
¬
=0;

604 
size_t
 
k
;

605 
k
=0; k<
rX
; k++) {

606 
t
,
y
;

607 
z
 = (()
X
[
k
])*
Y
[k];

608 i‡(
	`ISNAN
(
z
)) {

609 #i‚de‡
NO_FLAG


610 
Êag_isNaN
 = 1;

615 
y
 = 
z
-
rc
;

616 
t
 = 
cc
+
y
;

617 
rc
(
t
-
cc
)-
y
;

618 
cc

t
;

620 
¬
++;

622 
size_t
 
j
 = 
jj
 + 
ii
*
cX
;

623 
CC
[
i
] = (
	`ty≥of
(*CC))
cc
;

624 
CC
[
j
] = (
	`ty≥of
(*CC))
cc
;

625 i‡(
NN
 !
NULL
) {

626 
NN
[
i
] = (
	`ty≥of
(*NN))
¬
;

627 
NN
[
j
] = (
	`ty≥of
(*NN))
¬
;

631 i‡(
ACC_LEVEL
 == 2) {

641 i‡–(
X0
 !
Y0
Ë|| (
cX
 !
cY
) )

643 i‡(
W
)

644 #¥agm®
omp
 
	`scheduÀ
(
dy«mic
Ë
nowaô


645 
i
 = 0; i < 
cX
 * 
cY
; i++)

647 *
X
 = 
X0
 + (
i
%
cX
Ë* 
rX
;

648 *
Y
 = 
Y0
 + (
i
/
cX
Ë* 
rY
;

649 
cc
=0.0;

650 
¬
=0.0;

651 
rc
=0.0;

652 
∫
=0.0;

653 
size_t
 
k
;

654 
k
=0; k<
rX
; k++) {

655 
t
,
y
;

656 
z
 = 
X
[
k
]*
Y
[k];

657 i‡(
	`ISNAN
(
z
)) {

658 #i‚de‡
NO_FLAG


659 
Êag_isNaN
 = 1;

664 
y
 = 
z
*
W
[
k
]-
rc
;

665 
t
 = 
cc
+
y
;

666 
rc
(
t
-
cc
)-
y
;

667 
cc

t
;

670 
y
 = 
z
*
W
[
k
]-
∫
;

671 
t
 = 
¬
+
y
;

672 
∫
(
t
-
¬
)-
y
;

673 
¬

t
;

675 
CC
[
i
] = 
cc
;

676 i‡(
NN
 !
NULL
)

677 
NN
[
i
] = 
¬
;

680 #¥agm®
omp
 
	`scheduÀ
(
dy«mic
Ë
nowaô


681 
i
 = 0; i < 
cX
 * 
cY
; i++)

683 *
X
 = 
X0
 + (
i
%
cX
Ë* 
rX
;

684 *
Y
 = 
Y0
 + (
i
/
cX
Ë* 
rY
;

685 
cc
=0.0;

686 
rc
=0.0;

687 
size_t
 
¬
=0;

688 
size_t
 
k
;

689 
k
=0; k<
rX
; k++) {

690 
t
,
y
;

691 
z
 = 
X
[
k
]*
Y
[k];

692 i‡(
	`ISNAN
(
z
)) {

693 #i‚de‡
NO_FLAG


694 
Êag_isNaN
 = 1;

699 
y
 = 
z
-
rc
;

700 
t
 = 
cc
+
y
;

701 
rc
(
t
-
cc
)-
y
;

702 
cc

t
;

704 
¬
++;

706 
CC
[
i
] = 
cc
;

707 i‡(
NN
 !
NULL
)

708 
NN
[
i
] = ()
¬
;

712 i‡(
W
)

713 #¥agm®
omp
 
	`scheduÀ
(
dy«mic
Ë
nowaô


714 
i
 = 0; i < 
cX
 * 
cY
; i++)

716 
size_t
 
ii
 = 
i
%
cX
;

717 
size_t
 
jj
 = 
i
/
cX
;

718 i‡(
ii
 < 
jj
) ;

719 *
X
 = 
X0
 + 
ii
 * 
rX
;

720 *
Y
 = 
Y0
 + 
jj
 * 
rY
;

721 
cc
=0.0;

722 
¬
=0.0;

723 
rc
=0.0;

724 
∫
=0.0;

725 
size_t
 
k
;

726 
k
=0; k<
rX
; k++) {

727 
t
,
y
;

728 
z
 = 
X
[
k
]*
Y
[k];

729 i‡(
	`ISNAN
(
z
)) {

730 #i‚de‡
NO_FLAG


731 
Êag_isNaN
 = 1;

736 
y
 = 
z
*
W
[
k
]-
rc
;

737 
t
 = 
cc
+
y
;

738 
rc
(
t
-
cc
)-
y
;

739 
cc

t
;

742 
y
 = 
z
*
W
[
k
]-
∫
;

743 
t
 = 
¬
+
y
;

744 
∫
(
t
-
¬
)-
y
;

745 
¬

t
;

747 
size_t
 
j
 = 
jj
 + 
ii
*
cX
;

748 
CC
[
i
] = 
cc
;

749 
CC
[
j
] = 
cc
;

750 i‡(
NN
 !
NULL
) {

751 
NN
[
i
] = 
¬
;

752 
NN
[
j
] = 
¬
;

756 #¥agm®
omp
 
	`scheduÀ
(
dy«mic
Ë
nowaô


757 
i
 = 0; i < 
cX
 * 
cY
; i++)

759 
size_t
 
ii
 = 
i
%
cX
;

760 
size_t
 
jj
 = 
i
/
cX
;

761 i‡(
ii
 < 
jj
) ;

762 *
X
 = 
X0
 + 
ii
 * 
rX
;

763 *
Y
 = 
Y0
 + 
jj
 * 
rY
;

764 
cc
=0.0;

765 
rc
=0.0;

766 
size_t
 
¬
=0;

767 
size_t
 
k
;

768 
k
=0; k<
rX
; k++) {

769 
t
,
y
;

770 
z
 = 
X
[
k
]*
Y
[k];

771 i‡(
	`ISNAN
(
z
)) {

772 #i‚de‡
NO_FLAG


773 
Êag_isNaN
 = 1;

778 
y
 = 
z
-
rc
;

779 
t
 = 
cc
+
y
;

780 
rc
(
t
-
cc
)-
y
;

781 
cc

t
;

783 
¬
++;

785 
size_t
 
j
 = 
jj
 + 
ii
*
cX
;

786 
CC
[
i
] = 
cc
;

787 
CC
[
j
] = 
cc
;

788 i‡(
NN
 !
NULL
) {

789 
NN
[
i
] = ()
¬
;

790 
NN
[
j
] = ()
¬
;

798 #i‚de‡
NO_FLAG


803 i‡(
Êag_isNaN
 && (
PI≈utCou¡
 > 2Ë&& 
	`mxGëNumbîOfEÀmíts
(
PI≈uts
[2])) {

805 
	`mxGëCœssID
(
PI≈uts
[2])) {

806 
mxDOUBLE_CLASS
:

807 *(*)
	`mxGëD©a
(
PI≈uts
[2]) = 1.0;

809 
mxSINGLE_CLASS
:

810 *(*)
	`mxGëD©a
(
PI≈uts
[2]) = 1.0;

812 
mxLOGICAL_CLASS
:

813 
mxCHAR_CLASS
:

814 
mxINT8_CLASS
:

815 
mxUINT8_CLASS
:

816 *(*)
	`mxGëD©a
(
PI≈uts
[2]) = 1;

818 #ifde‡
__GNUC__


819 
mxINT16_CLASS
:

820 
mxUINT16_CLASS
:

821 *(
uöt16_t
*)
	`mxGëD©a
(
PI≈uts
[2]) = 1;

823 
mxINT32_CLASS
:

824 
mxUINT32_CLASS
:

825 *(
uöt32_t
*)
	`mxGëD©a
(
PI≈uts
[2])= 1;

827 
mxINT64_CLASS
:

828 
mxUINT64_CLASS
:

829 *(
uöt64_t
*)
	`mxGëD©a
(
PI≈uts
[2]) = 1;

831 
mxFUNCTION_CLASS
:

832 
mxUNKNOWN_CLASS
:

833 
mxCELL_CLASS
:

834 
mxSTRUCT_CLASS
:

837 
	`mexPrötf
("Type of 3rd inputárgument cannot be usedÅoÑeturn status of NaN occurrence.");

842 
	}
}

	@NaN/src/histo_mex.cpp

44 
	~<m©h.h
>

45 
	~<°döt.h
>

46 
	~<°rög.h
>

47 
	~"mex.h
"

53 
	#ISNAN
(
a
Ë◊!˜)

	)

56 #ifde‡
tmwty≥s_h


57 #i‡(
MX_API_VER
<=0x07020000)

58 
	tmwSize
;

62 
	ss‹t_t
 {

63 
uöt8_t
 *
	mTabÀ
;

64 
size_t
 
	mSize
;

65 
size_t
 
	mSåide
;

66 
size_t
 
	mN
;

67 
mxCœssID
 
	mTy≥
;

68 } 
	gS‹t
;

71 
	$com∑ª
(c⁄° *
a
, c⁄° *
b
) {

72 
z
 = 0;

73 
size_t
 
i
 = 0;

74 
size_t
 
ix1
 = *(size_t*)
a
;

75 
size_t
 
ix2
 = *(size_t*)
b
;

77 (
i
<
S‹t
.
N
Ë&& !
z
) {

78 
S‹t
.
Ty≥
) {

79 
mxCHAR_CLASS
:

80 
z
 = 
	`memcmp
(
S‹t
.
TabÀ
+
ix1
*S‹t.
Size
,S‹t.TabÀ+
ix2
*Sort.Size,Sort.Size);

82 
mxINT32_CLASS
: {

83 
öt32_t
 
f1
,
f2
;

84 
f1
 = ((
öt32_t
*)
S‹t
.
TabÀ
)[
ix1
];

85 
f2
 = ((
öt32_t
*)
S‹t
.
TabÀ
)[
ix2
];

86 i‡(
f1
<
f2
Ë
z
 = -1;

87 i‡(
f1
>
f2
Ë
z
 = 1;

90 
mxUINT32_CLASS
: {

91 
uöt32_t
 
f1
,
f2
;

92 
f1
 = ((
uöt32_t
*)
S‹t
.
TabÀ
)[
ix1
];

93 
f2
 = ((
uöt32_t
*)
S‹t
.
TabÀ
)[
ix2
];

94 i‡(
f1
<
f2
Ë
z
 = -1;

95 i‡(
f1
>
f2
Ë
z
 = 1;

98 
mxINT64_CLASS
: {

99 
öt64_t
 
f1
,
f2
;

100 
f1
 = ((
öt64_t
*)
S‹t
.
TabÀ
)[
ix1
];

101 
f2
 = ((
öt64_t
*)
S‹t
.
TabÀ
)[
ix2
];

102 i‡(
f1
<
f2
Ë
z
 = -1;

103 i‡(
f1
>
f2
Ë
z
 = 1;

106 
mxUINT64_CLASS
: {

107 
uöt64_t
 
f1
,
f2
;

108 
f1
 = ((
uöt64_t
*)
S‹t
.
TabÀ
)[
ix1
];

109 
f2
 = ((
uöt64_t
*)
S‹t
.
TabÀ
)[
ix2
];

110 i‡(
f1
<
f2
Ë
z
 = -1;

111 i‡(
f1
>
f2
Ë
z
 = 1;

114 
mxSINGLE_CLASS
: {

115 
f1
,
f2
;

116 
f1
 = ((*)
S‹t
.
TabÀ
)[
ix1
];

117 
f2
 = ((*)
S‹t
.
TabÀ
)[
ix2
];

118 
z
 = 
	`ISNAN
(
f1
Ë- ISNAN(
f2
);

119 i‡(
z
) ;

121 i‡(
f1
<
f2
Ë
z
 = -1;

122 i‡(
f1
>
f2
Ë
z
 = 1;

126 
mxDOUBLE_CLASS
: {

127 
f1
,
f2
;

128 
f1
 = ((*)
S‹t
.
TabÀ
)[
ix1
];

129 
f2
 = ((*)
S‹t
.
TabÀ
)[
ix2
];

130 
z
 = 
	`ISNAN
(
f1
Ë- ISNAN(
f2
);

131 i‡(
z
) ;

133 i‡(
f1
<
f2
Ë
z
 = -1;

134 i‡(
f1
>
f2
Ë
z
 = 1;

138 
mxINT16_CLASS
: {

139 
öt16_t
 
f1
,
f2
;

140 
f1
 = ((
öt16_t
*)
S‹t
.
TabÀ
)[
ix1
];

141 
f2
 = ((
öt16_t
*)
S‹t
.
TabÀ
)[
ix2
];

142 i‡(
f1
<
f2
Ë
z
 = -1;

143 i‡(
f1
>
f2
Ë
z
 = 1;

146 
mxUINT16_CLASS
: {

147 
uöt16_t
 
f1
,
f2
;

148 
f1
 = ((
uöt16_t
*)
S‹t
.
TabÀ
)[
ix1
];

149 
f2
 = ((
uöt16_t
*)
S‹t
.
TabÀ
)[
ix2
];

150 i‡(
f1
<
f2
Ë
z
 = -1;

151 i‡(
f1
>
f2
Ë
z
 = 1;

154 
mxINT8_CLASS
: {

155 
öt8_t
 
f1
,
f2
;

156 
f1
 = ((
öt8_t
*)
S‹t
.
TabÀ
)[
ix1
];

157 
f2
 = ((
öt8_t
*)
S‹t
.
TabÀ
)[
ix2
];

158 i‡(
f1
<
f2
Ë
z
 = -1;

159 i‡(
f1
>
f2
Ë
z
 = 1;

162 
mxUINT8_CLASS
: {

163 
uöt8_t
 
f1
,
f2
;

164 
f1
 = ((
uöt8_t
*)
S‹t
.
TabÀ
)[
ix1
];

165 
f2
 = ((
uöt8_t
*)
S‹t
.
TabÀ
)[
ix2
];

166 i‡(
f1
<
f2
Ë
z
 = -1;

167 i‡(
f1
>
f2
Ë
z
 = 1;

171 
	`mexEºMsgTxt
("unsupported inputÅype");

173 
i
++;

174 
ix1
 +
S‹t
.
Såide
;

175 
ix2
 +
S‹t
.
Såide
;

177 (
z
);

178 
	}
}

181 
	$mexFun˘i⁄
(
POuçutCou¡
, 
mxAºay
* 
POuçut
[], 
PI≈utCou¡
, c⁄° mxAºay *
PI≈uts
[])

184 c⁄° 
mwSize
 *
SZ
;

185 
Êag_rows
 = 0;

186 
d⁄e
 = 0;

187 
size_t
 
j
, 
k
, 
l
;

188 c⁄° 
mxAºay
 *
W
 = 
NULL
;

189 *
w
 = 
NULL
;

192 i‡((
PI≈utCou¡
 <= 0) || (PInputCount > 3)) {

193 
	`mexPrötf
("HISTO_MEX computes histogram from vector or column matrices\n\n");

194 
	`mexPrötf
("usage:\tHIS = histo_mex(Y)\n\t\tComputes histogram fromÉach column\n");

195 
	`mexPrötf
("\t[HIS,tix] = histo_mex(Y,'rows')\n\t\tComputesÑow-wise histogram,Åix is useful for data compression.\n\t\t Y = HIS.X(tix,:); \n\n");

197 
	`mexPrötf
("seeálso: HISTO2, HISTO3, HISTO4\n\n");

198 
	`mexEºMsgTxt
("HISTO_MEXÑequires 1 or 2 inputárguments\n");

200 i‡(
POuçutCou¡
 > 2)

201 
	`mexEºMsgTxt
("histo.MEX has 1 outputárguments.");

204 i‡(
	`mxIsCom∂ex
(
PI≈uts
[0]))

205 
	`mexEºMsgTxt
("complexárgumentÇot supported (yet). ");

208 i‡(
PI≈utCou¡
==1)

210 i‡(
	`mxIsCh¨
(
PI≈uts
[1])) {

212 *
t
 = 
	`mxAºayToSåög
(
PI≈uts
[1]);

213 
Êag_rows
 = !
	`°rcmp
(
t
,"rows");

214 
	`mxFªe
(
t
);

216 i‡((
PI≈utCou¡
>2Ë&& 
	`mxIsDoubÀ
(
PI≈uts
[2])Ë
W
 = PInputs[2];

219 i‡(
	`mxIsDoubÀ
(
PI≈uts
[1])) {

220 
W
 = 
PI≈uts
[1];

223 
	`mexEºMsgTxt
("Weight vector must be REAL/DOUBLE.");

225 i‡(
W
 !
NULL
) {

226 i‡(
	`mxGëM
(
PI≈uts
[0])==mxGëM(
W
) )

227 
w
 = (*)
	`mxGëD©a
(
W
);

229 
	`mexEºMsgTxt
("number ofÑows in Xánd W doÇot match.");

231 
k
=0; (k<
	`mxGëM
(
W
)Ë&& (
w
[k]>=0.0); k++);

232 i‡(
k
<
	`mxGëM
(
W
))

233 
	`mexW¨nMsgTxt
("weight vector containsálsoÇon-negativeÇumbers or NaN.");

237 
mwSize
 
ND
 = 
	`mxGëNumbîOfDimísi⁄s
(
PI≈uts
[0]);

239 
SZ
 = 
	`mxGëDimísi⁄s
(
PI≈uts
[0]);

241 i‡(
ND
>2)

242 
	`mexEºMsgTxt
("Error HISTO.MEX: input must be vector or matrix (no moreÅhanÅwo dimensions)");

244 
size_t
 
n
 = 
SZ
[0];

246 c⁄° *
‚ames
[] = {"datatype","X","H"};

247 
mxAºay
 *
HIS
 = 
	`mxCª©eSåu˘M©rix
(1, 1, 3, 
‚ames
);

248 
	`mxSëFõld
(
HIS
,0,"d©©y≥",
	`mxCª©eSåög
("HISTOGRAM"));

250 i‡(
Êag_rows
 || (
SZ
[1]==1)) {

253 
size_t
 *
idx
 = 
NULL
;

254 
idx
 = (
size_t
*Ë
	`mxMÆloc
(
SZ
[0]*(size_t));

255 
n
=0;Ç<
SZ
[0];Ç++) {

256 
idx
[
n
]=n;

258 
S‹t
.
Ty≥
 = 
	`mxGëCœssID
(
PI≈uts
[0]);

259 
S‹t
.
TabÀ
 = (
uöt8_t
*Ë
	`mxGëD©a
(
PI≈uts
[0]);

261 
	`mxGëCœssID
(
PI≈uts
[0])) {

262 
mxLOGICAL_CLASS
:

263 
S‹t
.
Size
 = (
mxLogiˇl
);

265 
mxINT8_CLASS
:

266 
mxUINT8_CLASS
:

267 
S‹t
.
Size
 = 1;

269 
mxINT16_CLASS
:

270 
mxUINT16_CLASS
:

271 
S‹t
.
Size
 = 2;

273 
mxINT32_CLASS
:

274 
mxUINT32_CLASS
:

275 
mxSINGLE_CLASS
:

276 
S‹t
.
Size
 = 4;

278 
mxINT64_CLASS
:

279 
mxUINT64_CLASS
:

280 
mxDOUBLE_CLASS
:

281 
S‹t
.
Size
 = 8;

283 
mxCHAR_CLASS
:

284 
S‹t
.
Size
 = (
mxCh¨
);

287 
	`mexEºMsgTxt
("unsupported inputÅype");

289 
S‹t
.
N
 = 
Êag_rows
 ? 
SZ
[1] : 1;

290 
	`qs‹t
(
idx
,
SZ
[0],(*idx),
com∑ª
);

293 
n
 = 
SZ
[0] ? 1 : 0;

294 
size_t
 
k
;

295 
k
=1; k<
SZ
[0]; k++) {

296 i‡(
	`com∑ª
(
idx
+
k
-1,idx+k)Ë
n
++;

299 
uöt64_t
 *
tix
 = 
NULL
;

300 i‡(
POuçutCou¡
>1) {

301 
POuçut
[1] = 
	`mxCª©eNumîicM©rix
(
SZ
[0], 1, 
mxUINT64_CLASS
,
mxREAL
);

302 
tix
 = (
uöt64_t
*)
	`mxGëD©a
(
POuçut
[1]);

306 
mxAºay
 *
H
 = 
	`mxCª©eNumîicM©rix
(
n
, 1, 
mxDOUBLE_CLASS
,
mxREAL
);

307 
mxAºay
 *
X
 = 
	`mxCª©eNumîicM©rix
(
n
, 
SZ
[1], 
	`mxGëCœssID
(
PI≈uts
[0]),
mxREAL
);

308 
	`mxSëFõld
(
HIS
,0,"H",
H
);

309 
	`mxSëFõld
(
HIS
,0,"X",
X
);

310 *
h
 = (*)
	`mxGëD©a
(
H
);

311 
uöt8_t
 *
x
 = (uöt8_t*)
	`mxGëD©a
(
X
);

313 
l
 = 0;

314 i‡(
tix
Ëtix[
idx
[0]] = 1;

315 
k
=0; k<
SZ
[0]; k++) {

316 i‡((
k
==0Ë|| 
	`com∑ª
(&
idx
[k-1], &idx[k])) {

317 
j
=0; j<
SZ
[1]; j++) {

318 
	`mem˝y
(
x
 + (
l
+
j
*
n
)*
S‹t
.
Size
, S‹t.
TabÀ
+(
idx
[
k
] + j*S‹t.
Såide
)*Sort.Size, Sort.Size);

320 
l
++;

322 i‡(
tix
Ëtix[
idx
[
k
]] = 
l
;

323 i‡(
w
 !
NULL
)

324 
h
[
l
-1]+=
w
[
idx
[
k
]];

326 
h
[
l
-1]+=1.0;

328 
	`mxFªe
(
idx
);

329 
d⁄e
 = 1;

333 
	`mxGëCœssID
(
PI≈uts
[0])) {

335 
mxINT8_CLASS
: {

336 
mxAºay
 *
H
 = 
	`mxCª©eNumîicM©rix
(256, 
SZ
[1], 
mxDOUBLE_CLASS
,
mxREAL
);

337 
mxAºay
 *
X
 = 
	`mxCª©eNumîicM©rix
(256, 1, 
mxINT8_CLASS
,
mxREAL
);

338 
	`mxSëFõld
(
HIS
,0,"H",
H
);

339 
	`mxSëFõld
(
HIS
,0,"X",
X
);

341 
öt8_t
 *
x
;

342 
x
 = (
öt8_t
*)
	`mxGëD©a
(
X
);

343 
k
=0; k<0x0100; k++)

344 
x
[
k
]=(
öt8_t
)(k-128);

346 
x
 = (
öt8_t
*)
	`mxGëD©a
(
PI≈uts
[0]);

347 *
h
 = (*)
	`mxGëD©a
(
H
);

348 
k
=0; k<
SZ
[0]*SZ[1]; k++)

349 
h
[
x
[
k
]+128+(k/
SZ
[0]<<8)] +(
w
!=
NULL
 ? w[k%SZ[0]] : 1.0);

351 
d⁄e
 = 1;

355 
mxUINT8_CLASS
: {

356 
mxAºay
 *
H
 = 
	`mxCª©eNumîicM©rix
(256, 
SZ
[1], 
mxDOUBLE_CLASS
,
mxREAL
);

357 
mxAºay
 *
X
 = 
	`mxCª©eNumîicM©rix
(256, 1, 
mxUINT8_CLASS
,
mxREAL
);

358 
	`mxSëFõld
(
HIS
,0,"H",
H
);

359 
	`mxSëFõld
(
HIS
,0,"X",
X
);

361 
uöt8_t
 *
x
 = (uöt8_t*)
	`mxGëD©a
(
X
);

362 
k
=0; k<0x0100; k++Ë
x
[k]=(
uöt8_t
)k;

364 
x
 = (
uöt8_t
*)
	`mxGëD©a
(
PI≈uts
[0]);

365 *
h
 = (*)
	`mxGëD©a
(
H
);

366 
k
=0; k<
SZ
[0]*SZ[1]; k++)

367 
h
[
x
[
k
]+(k/
SZ
[0]<<8)] +(
w
!=
NULL
 ? w[k%SZ[0]] : 1.0);

369 
d⁄e
 = 1;

373 
mxINT16_CLASS
: {

374 
mxAºay
 *
H
 = 
	`mxCª©eNumîicM©rix
(0x10000, 
SZ
[1], 
mxDOUBLE_CLASS
,
mxREAL
);

375 
mxAºay
 *
X
 = 
	`mxCª©eNumîicM©rix
(0x10000, 1, 
mxINT16_CLASS
,
mxREAL
);

376 
	`mxSëFõld
(
HIS
,0,"H",
H
);

377 
	`mxSëFõld
(
HIS
,0,"X",
X
);

379 *
h
 = (*)
	`mxGëD©a
(
H
);

380 
öt16_t
 *
x
 = (öt16_t*)
	`mxGëD©a
(
X
);

381 
k
=0; k<0x10000; k++)

382 
x
[
k
]=(
öt16_t
)(k-0x8000);

384 
x
 = (
öt16_t
*)
	`mxGëD©a
(
PI≈uts
[0]);

385 
k
=0; k<
SZ
[0]*SZ[1]; k++)

386 
h
[
x
[
k
]+0x8000+(k/
SZ
[0]<<16)] +(
w
!=
NULL
 ? w[k%SZ[0]] : 1.0);

388 
d⁄e
 = 1;

392 
mxUINT16_CLASS
: {

393 
mxAºay
 *
H
 = 
	`mxCª©eNumîicM©rix
(0x10000, 
SZ
[1], 
mxDOUBLE_CLASS
,
mxREAL
);

394 
mxAºay
 *
X
 = 
	`mxCª©eNumîicM©rix
(0x10000, 1, 
mxINT16_CLASS
,
mxREAL
);

395 
	`mxSëFõld
(
HIS
,0,"H",
H
);

396 
	`mxSëFõld
(
HIS
,0,"X",
X
);

398 *
h
 = (*)
	`mxGëD©a
(
H
);

399 
öt16_t
 *
x
 = (öt16_t*)
	`mxGëD©a
(
X
);

400 
k
=0; k<0x10000; k++)

401 
x
[
k
]=(
uöt16_t
)(k-0x8000);

403 
uöt16_t
 *
x16
 = (uöt16_t*)
	`mxGëD©a
(
PI≈uts
[0]);

404 
k
=0; k<
SZ
[0]*SZ[1]; k++)

405 
h
[
x16
[
k
]+(k/
SZ
[0]<<16)] +(
w
!=
NULL
 ? w[k%SZ[0]] : 1.0);

406 
d⁄e
 = 1;

412 
	`mexEºMsgTxt
("multicolumns with int32 orÜargerÇot supported!");

414 
mxAºay
 *
H
 = 
	`mxCª©eNumîicM©rix
(0x10000, 
SZ
[1], 
mxDOUBLE_CLASS
,
mxREAL
);

415 
mxAºay
 *
X
 = 
	`mxCª©eNumîicM©rix
(0x10000, 
SZ
[1], 
	`mxGëCœssID
(
PI≈uts
[0]),
mxREAL
);

416 
	`mxSëFõld
(
HIS
,0,"H",
H
);

417 
	`mxSëFõld
(
HIS
,0,"X",
X
);

432 i‡(
d⁄e
Ë
POuçut
[0] = 
HIS
;

435 
	}
}

	@NaN/src/kth_element.cpp

48 
	~<m©h.h
>

49 
	~<°dlib.h
>

50 
	~<°döt.h
>

51 
	~<°rög.h
>

52 
	~"mex.h
"

55 #ifde‡
tmwty≥s_h


56 #i‡(
MX_API_VER
<=0x07020000)

57 
	tmwSize
;

58 
	tmwIndex
;

66 
	#ISNAN
(
a
Ë◊!˜)

	)

69 
	#SWAP
(
a
,
b
Ë{
ãmp
 =á;á=b; bÒemp;}

	)

71 
	$födFú°K
(*
¨øy
, 
size_t
 
À·
, size_à
right
, size_à
k
)

73 
right
 > 
À·
) {

74 
size_t
 
pivŸIndex
 = (
À·
 + 
right
) / 2;

77 
ãmp
;

78 
pivŸVÆue
 = 
¨øy
[
pivŸIndex
];

79 
	`SWAP
(
¨øy
[
pivŸIndex
],áºay[
right
]);

80 
pivŸIndex
 = 
À·
;

81 
size_t
 
i
 = 
À·
; i <
right
 - 1; ++i ) {

83 i‡(
¨øy
[
i
] <
pivŸVÆue
)

85 
	`SWAP
(
¨øy
[
i
],áºay[
pivŸIndex
]);

86 ++
pivŸIndex
;

89 
	`SWAP
(
¨øy
[
pivŸIndex
],áºay[
right
]);

91 i‡(
pivŸIndex
 > 
k
)

92 
right
 = 
pivŸIndex
 - 1;

93 i‡(
pivŸIndex
 < 
k
)

94 
À·
 = 
pivŸIndex
 + 1;

97 
	}
}

100 
	$mexFun˘i⁄
(
POuçutCou¡
, 
mxAºay
* 
POuçut
[], 
PI≈utCou¡
, c⁄° mxAºay *
PI≈uts
[])

102 
size_t
 
k
, 
n
;

103 
size_t
 
szK
, 
szX
;

104 *
T
,*
X
,*
Y
,*
K
;

105 
Êag
 = 0;

108 i‡–
PI≈utCou¡
 < 2 || PInputCount > 3 ) {

109 
	`mexPrötf
("KTH_ELEMENTÑeturnsÅhe K-th smallestÉlement of vector X\n");

110 
	`mexPrötf
("\nusage:\tx = kth_element(X,k)\n");

111 
	`mexPrötf
("\nusage:\tx = kth_element(X,k,flag)\n");

112 
	`mexPrötf
("\nflag=0:ÅheÉlements in X can be modified in-place,ánd data with NaN's isÇot correctly handled. This can be useful forÖerformanceÑeasons, but it might modify data in-placeánd isÇot save for data with NaN's. Youáre warned.\n");

113 
	`mexPrötf
("flag=1:Örevents in-place modification of X usingáÜocal copy ofÅhe data, but doesÇot handle data with NaN inÅhe correct way.\n");

114 
	`mexPrötf
("flag=2:Örevents in-place modification of X usingáÜocal copy ofÅhe dataánd handles NaN's correctly. This isÅhe save but slowest option.\n");

116 
	`mexPrötf
("\nseeálso: median, quantile\n\n");

117 
	`mexEºMsgTxt
("KTH_ELEMENTÑequiresÅwo orÅhree inputárguments\n");

119 i‡(
PI≈utCou¡
 == 3) {

121 
size_t
 
N
 = 
	`mxGëNumbîOfEÀmíts
(
PI≈uts
[2]);

122 i‡(
N
>1)

123 
	`mexEºMsgTxt
("KTH_ELEMENT: flagárgument must be scalar\n");

124 i‡(
N
==1) {

125 
	`mxGëCœssID
(
PI≈uts
[2])) {

126 
mxLOGICAL_CLASS
:

127 
mxCHAR_CLASS
:

128 
mxINT8_CLASS
:

129 
mxUINT8_CLASS
:

130 
Êag
 = ()*(
uöt8_t
*)
	`mxGëD©a
(
PI≈uts
[2]);

132 
mxDOUBLE_CLASS
:

133 
Êag
 = ()*(*)
	`mxGëD©a
(
PI≈uts
[2]);

135 
mxSINGLE_CLASS
:

136 
Êag
 = ()*(*)
	`mxGëD©a
(
PI≈uts
[2]);

138 
mxINT16_CLASS
:

139 
mxUINT16_CLASS
:

140 
Êag
 = ()*(
uöt16_t
*)
	`mxGëD©a
(
PI≈uts
[2]);

142 
mxINT32_CLASS
:

143 
mxUINT32_CLASS
:

144 
Êag
 = ()*(
uöt32_t
*)
	`mxGëD©a
(
PI≈uts
[2]);

146 
mxINT64_CLASS
:

147 
mxUINT64_CLASS
:

148 
Êag
 = ()*(
uöt64_t
*)
	`mxGëD©a
(
PI≈uts
[2]);

150 
mxFUNCTION_CLASS
:

151 
mxUNKNOWN_CLASS
:

152 
mxCELL_CLASS
:

153 
mxSTRUCT_CLASS
:

155 
	`mexEºMsgTxt
("KTH_ELEMENT: Type of 3rd inputárgumentÇot supported.");

162 i‡(
POuçutCou¡
 > 2)

163 
	`mexEºMsgTxt
("KTH_ELEMENT has only one outputárguments.");

166 i‡(
	`mxIsCom∂ex
(
PI≈uts
[0]) || mxIsComplex(PInputs[1]))

167 
	`mexEºMsgTxt
("complexárgumentÇot supported (yet). ");

168 i‡(!
	`mxIsDoubÀ
(
PI≈uts
[0]) || !mxIsDouble(PInputs[1]))

169 
	`mexEºMsgTxt
("inputárguments must be ofÅype double . ");

173 
szK
 = 
	`mxGëNumbîOfEÀmíts
(
PI≈uts
[1]);

174 
K
 = (*)
	`mxGëD©a
(
PI≈uts
[1]);

176 
szX
 = 
	`mxGëNumbîOfEÀmíts
(
PI≈uts
[0]);

177 
X
 = (*)
	`mxGëD©a
(
PI≈uts
[0]);

179 i‡(
Êag
==0)

180 
T
 = 
X
;

183 
T
 = (*)
	`mxMÆloc
(
szX
*());

184 i‡(
Êag
==1)

185 
	`mem˝y
(
T
,
X
,
szX
*());

188 
k
=0,
n
=0; k < 
szX
; k++) {

189 i‡(!
	`ISNAN
(
X
[
k
])Ë
T
[
n
++]=X[k];

191 
szX
 = 
n
;

196 
POuçut
[0] = 
	`mxCª©eDoubÀM©rix
(
	`mxGëM
(
PI≈uts
[1]),
	`mxGëN
(PI≈uts[1]),
mxREAL
);

197 
Y
 = (*Ë
	`mxGëD©a
(
POuçut
[0]);

198 
k
=0; k < 
szK
; k++) {

199 i‡(
K
[
k
] > 
szX
 || K[k] < 1)

200 
Y
[
k
] = 0.0/0.0;

202 
n
 = (
size_t
)(
K
[
k
]-1);

203 
	`födFú°K
(
T
, 0, 
szX
-1, 
n
);

204 
Y
[
k
] = 
T
[
n
];

208 i‡(
Êag
Ë
	`mxFªe
(
T
);

211 
	}
}

	@NaN/src/linear.cpp

27 
	~<m©h.h
>

28 
	~<°dio.h
>

29 
	~<°dlib.h
>

30 
	~<°rög.h
>

31 
	~<°d¨g.h
>

32 
	~"löór.h
"

33 
	~"å⁄.h
"

35 sig√d 
	tsch¨
;

36 
	gãm∂©e
 <
˛ass
 
	gT
> 
ölöe
 
	$sw≠
(
T
& 
x
, T& 
y
Ë{ T 
t
=x; x=y; yÒ; 
	}
}

37 #i‚de‡
mö


38 
	gãm∂©e
 <
˛ass
 
	gT
> 
ölöe
 
T
 
	$mö
(
T
 
x
,T 
y
Ë{  (x<y)?x:y; 
	}
}

40 #i‚de‡
max


41 
	gãm∂©e
 <
˛ass
 
	gT
> 
ölöe
 
T
 
	$max
(
T
 
x
,T 
y
Ë{  (x>y)?x:y; 
	}
}

43 
	gãm∂©e
 <
˛ass
 
	gS
, cœs†
	gT
> 
ölöe
 
	$˛⁄e
(
T
*& 
d°
, 
S
* 
§c
, 
n
)

45 
d°
 = 
√w
 
T
[
n
];

46 
	`mem˝y
((*)
d°
,(*)
§c
,(
T
)*
n
);

47 
	}
}

48 
	#MÆloc
(
ty≥
,
n
Ë—y≥ *)
	`mÆloc
(“)*—y≥))

	)

49 
	#INF
 
HUGE_VAL


	)

51 
	$¥öt_°rög_°dout
(c⁄° *
s
)

53 
	`Âuts
(
s
,
°dout
);

54 
	`fÊush
(
°dout
);

55 
	}
}

57 (*
liblöór_¥öt_°rög
Ë(c⁄° *Ë&
¥öt_°rög_°dout
;

60 
	$öfo
(c⁄° *
fmt
,...)

62 
buf
[
BUFSIZ
];

63 
va_li°
 
≠
;

64 
	`va_°¨t
(
≠
,
fmt
);

65 
	`v•rötf
(
buf
,
fmt
,
≠
);

66 
	`va_íd
(
≠
);

67 (*
liblöór_¥öt_°rög
)(
buf
);

68 
	}
}

70 
	$öfo
(c⁄° *
fmt
,...Ë{
	}
}

73 ˛as†
	cl2r_Ã_fun
 : 
public
 
fun˘i⁄


75 
public
:

76 
l2r_Ã_fun
(c⁄° 
¥obÀm
 *
¥ob
, 
Cp
, 
Cn
);

77 ~
l2r_Ã_fun
();

79 
fun
(*
w
);

80 
gød
(*
w
, *
g
);

81 
Hv
(*
s
, *
Hs
);

83 
gë_ƒ_v¨übÀ
();

85 
	m¥iv©e
:

86 
Xv
(*
v
, *Xv);

87 
XTv
(*
v
, *XTv);

89 *
	mC
;

90 *
	mz
;

91 *
	mD
;

92 c⁄° 
¥obÀm
 *
	m¥ob
;

95 
	gl2r_Ã_fun
::
	$l2r_Ã_fun
(c⁄° 
¥obÀm
 *
¥ob
, 
Cp
, 
Cn
)

97 
i
;

98 
l
=
¥ob
->l;

99 *
y
=
¥ob
->y;

101 
this
->
¥ob
 =Örob;

103 
z
 = 
√w
 [
l
];

104 
D
 = 
√w
 [
l
];

105 
C
 = 
√w
 [
l
];

107 
i
=0; i<
l
; i++)

109 i‡(
y
[
i
] == 1)

110 
C
[
i
] = 
¥ob
->
W
[i] * 
Cp
;

112 
C
[
i
] = 
¥ob
->
W
[i] * 
Cn
;

114 
	}
}

116 
	gl2r_Ã_fun
::~
	$l2r_Ã_fun
()

118 
dñëe
[] 
z
;

119 
dñëe
[] 
D
;

120 
dñëe
[] 
C
;

121 
	}
}

124 
	gl2r_Ã_fun
::
	$fun
(*
w
)

126 
i
;

127 
f
=0;

128 *
y
=
¥ob
->y;

129 
l
=
¥ob
->l;

130 
w_size
=
	`gë_ƒ_v¨übÀ
();

132 
	`Xv
(
w
, 
z
);

133 
i
=0;i<
l
;i++)

135 
yz
 = 
y
[
i
]*
z
[i];

136 i‡(
yz
 >= 0)

137 
f
 +
C
[
i
]*
	`log
(1 + 
	`exp
(-
yz
));

139 
f
 +
C
[
i
]*(-
yz
+
	`log
(1 + 
	`exp
(yz)));

141 
f
 = 2*f;

142 
i
=0;i<
w_size
;i++)

143 
f
 +
w
[
i
]*w[i];

144 
f
 /= 2.0;

146 (
f
);

147 
	}
}

149 
	gl2r_Ã_fun
::
	$gød
(*
w
, *
g
)

151 
i
;

152 *
y
=
¥ob
->y;

153 
l
=
¥ob
->l;

154 
w_size
=
	`gë_ƒ_v¨übÀ
();

156 
i
=0;i<
l
;i++)

158 
z
[
i
] = 1/(1 + 
	`exp
(-
y
[i]*z[i]));

159 
D
[
i
] = 
z
[i]*(1-z[i]);

160 
z
[
i
] = 
C
[i]*(z[i]-1)*
y
[i];

162 
	`XTv
(
z
, 
g
);

164 
i
=0;i<
w_size
;i++)

165 
g
[
i
] = 
w
[i] + g[i];

166 
	}
}

168 
	gl2r_Ã_fun
::
	$gë_ƒ_v¨übÀ
()

170  
¥ob
->
n
;

171 
	}
}

173 
	gl2r_Ã_fun
::
	$Hv
(*
s
, *
Hs
)

175 
i
;

176 
l
=
¥ob
->l;

177 
w_size
=
	`gë_ƒ_v¨übÀ
();

178 *
wa
 = 
√w
 [
l
];

180 
	`Xv
(
s
, 
wa
);

181 
i
=0;i<
l
;i++)

182 
wa
[
i
] = 
C
[i]*
D
[i]*wa[i];

184 
	`XTv
(
wa
, 
Hs
);

185 
i
=0;i<
w_size
;i++)

186 
Hs
[
i
] = 
s
[i] + Hs[i];

187 
dñëe
[] 
wa
;

188 
	}
}

190 
	gl2r_Ã_fun
::
	$Xv
(*
v
, *
Xv
)

192 
i
;

193 
l
=
¥ob
->l;

194 
„©uª_node
 **
x
=
¥ob
->x;

196 
i
=0;i<
l
;i++)

198 
„©uª_node
 *
s
=
x
[
i
];

199 
Xv
[
i
]=0;

200 
s
->
ödex
!=-1)

202 
Xv
[
i
]+=
v
[
s
->
ödex
-1]*s->
vÆue
;

203 
s
++;

206 
	}
}

208 
	gl2r_Ã_fun
::
	$XTv
(*
v
, *
XTv
)

210 
i
;

211 
l
=
¥ob
->l;

212 
w_size
=
	`gë_ƒ_v¨übÀ
();

213 
„©uª_node
 **
x
=
¥ob
->x;

215 
i
=0;i<
w_size
;i++)

216 
XTv
[
i
]=0;

217 
i
=0;i<
l
;i++)

219 
„©uª_node
 *
s
=
x
[
i
];

220 
s
->
ödex
!=-1)

222 
XTv
[
s
->
ödex
-1]+=
v
[
i
]*s->
vÆue
;

223 
s
++;

226 
	}
}

228 ˛as†
	cl2r_l2_svc_fun
 : 
public
 
fun˘i⁄


230 
public
:

231 
l2r_l2_svc_fun
(c⁄° 
¥obÀm
 *
¥ob
, 
Cp
, 
Cn
);

232 ~
l2r_l2_svc_fun
();

234 
fun
(*
w
);

235 
gød
(*
w
, *
g
);

236 
Hv
(*
s
, *
Hs
);

238 
gë_ƒ_v¨übÀ
();

240 
	m¥iv©e
:

241 
Xv
(*
v
, *Xv);

242 
subXv
(*
v
, *
Xv
);

243 
subXTv
(*
v
, *
XTv
);

245 *
	mC
;

246 *
	mz
;

247 *
	mD
;

248 *
	mI
;

249 
	msizeI
;

250 c⁄° 
¥obÀm
 *
	m¥ob
;

253 
	gl2r_l2_svc_fun
::
	$l2r_l2_svc_fun
(c⁄° 
¥obÀm
 *
¥ob
, 
Cp
, 
Cn
)

255 
i
;

256 
l
=
¥ob
->l;

257 *
y
=
¥ob
->y;

259 
this
->
¥ob
 =Örob;

261 
z
 = 
√w
 [
l
];

262 
D
 = 
√w
 [
l
];

263 
C
 = 
√w
 [
l
];

264 
I
 = 
√w
 [
l
];

266 
i
=0; i<
l
; i++)

268 i‡(
y
[
i
] == 1)

269 
C
[
i
] = 
¥ob
->
W
[i] * 
Cp
;

271 
C
[
i
] = 
¥ob
->
W
[i] * 
Cn
;

273 
	}
}

275 
	gl2r_l2_svc_fun
::~
	$l2r_l2_svc_fun
()

277 
dñëe
[] 
z
;

278 
dñëe
[] 
D
;

279 
dñëe
[] 
C
;

280 
dñëe
[] 
I
;

281 
	}
}

283 
	gl2r_l2_svc_fun
::
	$fun
(*
w
)

285 
i
;

286 
f
=0;

287 *
y
=
¥ob
->y;

288 
l
=
¥ob
->l;

289 
w_size
=
	`gë_ƒ_v¨übÀ
();

291 
	`Xv
(
w
, 
z
);

292 
i
=0;i<
l
;i++)

294 
z
[
i
] = 
y
[i]*z[i];

295 
d
 = 1-
z
[
i
];

296 i‡(
d
 > 0)

297 
f
 +
C
[
i
]*
d
*d;

299 
f
 = 2*f;

300 
i
=0;i<
w_size
;i++)

301 
f
 +
w
[
i
]*w[i];

302 
f
 /= 2.0;

304 (
f
);

305 
	}
}

307 
	gl2r_l2_svc_fun
::
	$gød
(*
w
, *
g
)

309 
i
;

310 *
y
=
¥ob
->y;

311 
l
=
¥ob
->l;

312 
w_size
=
	`gë_ƒ_v¨übÀ
();

314 
sizeI
 = 0;

315 
i
=0;i<
l
;i++)

316 i‡(
z
[
i
] < 1)

318 
z
[
sizeI
] = 
C
[
i
]*
y
[i]*(z[i]-1);

319 
I
[
sizeI
] = 
i
;

320 
sizeI
++;

322 
	`subXTv
(
z
, 
g
);

324 
i
=0;i<
w_size
;i++)

325 
g
[
i
] = 
w
[i] + 2*g[i];

326 
	}
}

328 
	gl2r_l2_svc_fun
::
	$gë_ƒ_v¨übÀ
()

330  
¥ob
->
n
;

331 
	}
}

333 
	gl2r_l2_svc_fun
::
	$Hv
(*
s
, *
Hs
)

335 
i
;

336 
l
=
¥ob
->l;

337 
w_size
=
	`gë_ƒ_v¨übÀ
();

338 *
wa
 = 
√w
 [
l
];

340 
	`subXv
(
s
, 
wa
);

341 
i
=0;i<
sizeI
;i++)

342 
wa
[
i
] = 
C
[
I
[i]]*wa[i];

344 
	`subXTv
(
wa
, 
Hs
);

345 
i
=0;i<
w_size
;i++)

346 
Hs
[
i
] = 
s
[i] + 2*Hs[i];

347 
dñëe
[] 
wa
;

348 
	}
}

350 
	gl2r_l2_svc_fun
::
	$Xv
(*
v
, *
Xv
)

352 
i
;

353 
l
=
¥ob
->l;

354 
„©uª_node
 **
x
=
¥ob
->x;

356 
i
=0;i<
l
;i++)

358 
„©uª_node
 *
s
=
x
[
i
];

359 
Xv
[
i
]=0;

360 
s
->
ödex
!=-1)

362 
Xv
[
i
]+=
v
[
s
->
ödex
-1]*s->
vÆue
;

363 
s
++;

366 
	}
}

368 
	gl2r_l2_svc_fun
::
	$subXv
(*
v
, *
Xv
)

370 
i
;

371 
„©uª_node
 **
x
=
¥ob
->x;

373 
i
=0;i<
sizeI
;i++)

375 
„©uª_node
 *
s
=
x
[
I
[
i
]];

376 
Xv
[
i
]=0;

377 
s
->
ödex
!=-1)

379 
Xv
[
i
]+=
v
[
s
->
ödex
-1]*s->
vÆue
;

380 
s
++;

383 
	}
}

385 
	gl2r_l2_svc_fun
::
	$subXTv
(*
v
, *
XTv
)

387 
i
;

388 
w_size
=
	`gë_ƒ_v¨übÀ
();

389 
„©uª_node
 **
x
=
¥ob
->x;

391 
i
=0;i<
w_size
;i++)

392 
XTv
[
i
]=0;

393 
i
=0;i<
sizeI
;i++)

395 
„©uª_node
 *
s
=
x
[
I
[
i
]];

396 
s
->
ödex
!=-1)

398 
XTv
[
s
->
ödex
-1]+=
v
[
i
]*s->
vÆue
;

399 
s
++;

402 
	}
}

422 
	#GETI
(
i
Ë(i)

	)

425 ˛as†
	cSﬁvî_MCSVM_CS


427 
	mpublic
:

428 
Sﬁvî_MCSVM_CS
(c⁄° 
¥obÀm
 *
¥ob
, 
ƒ_˛ass
, *
C
, 
ïs
=0.1, 
max_ôî
=100000);

429 ~
Sﬁvî_MCSVM_CS
();

430 
Sﬁve
(*
w
);

431 
	m¥iv©e
:

432 
sﬁve_sub_¥obÀm
(
A_i
, 
yi
, 
C_yi
, 
a˘ive_i
, *
Æpha_√w
);

433 
boﬁ
 
be_shrunk
(
i
, 
m
, 
yi
, 
Æpha_i
, 
möG
);

434 *
	mB
, *
	mC
, *
	mG
;

435 
	mw_size
, 
	ml
;

436 
	mƒ_˛ass
;

437 
	mmax_ôî
;

438 
	mïs
;

439 c⁄° 
¥obÀm
 *
	m¥ob
;

442 
	gSﬁvî_MCSVM_CS
::
	$Sﬁvî_MCSVM_CS
(c⁄° 
¥obÀm
 *
¥ob
, 
ƒ_˛ass
, *
weighãd_C
, 
ïs
, 
max_ôî
)

444 
this
->
w_size
 = 
¥ob
->
n
;

445 
this
->
l
 = 
¥ob
->l;

446 
this
->
ƒ_˛ass
 =Çr_class;

447 
this
->
ïs
 =Éps;

448 
this
->
max_ôî
 = max_iter;

449 
this
->
¥ob
 =Örob;

450 
this
->
B
 = 
√w
 [
ƒ_˛ass
];

451 
this
->
G
 = 
√w
 [
ƒ_˛ass
];

452 
this
->
C
 = 
√w
 [
¥ob
->
l
];

453 
i
 = 0; i < 
¥ob
->
l
; i++)

454 
this
->
C
[
i
] = 
¥ob
->
W
[i] * 
weighãd_C
[¥ob->
y
[i]];

455 
	}
}

457 
	gSﬁvî_MCSVM_CS
::~
	$Sﬁvî_MCSVM_CS
()

459 
dñëe
[] 
B
;

460 
dñëe
[] 
G
;

461 
dñëe
[] 
C
;

462 
	}
}

464 
	$com∑ª_doubÀ
(c⁄° *
a
, c⁄° *
b
)

466 if(*(*)
a
 > *(*)
b
)

468 if(*(*)
a
 < *(*)
b
)

471 
	}
}

473 
	gSﬁvî_MCSVM_CS
::
	$sﬁve_sub_¥obÀm
(
A_i
, 
yi
, 
C_yi
, 
a˘ive_i
, *
Æpha_√w
)

475 
r
;

476 *
D
;

478 
	`˛⁄e
(
D
, 
B
, 
a˘ive_i
);

479 if(
yi
 < 
a˘ive_i
)

480 
D
[
yi
] +
A_i
*
C_yi
;

481 
	`qs‹t
(
D
, 
a˘ive_i
, (), 
com∑ª_doubÀ
);

483 
bëa
 = 
D
[0] - 
A_i
*
C_yi
;

484 
r
=1;r<
a˘ive_i
 && 
bëa
<r*
D
[r];r++)

485 
bëa
 +
D
[
r
];

487 
bëa
 /
r
;

488 
r
=0;r<
a˘ive_i
;r++)

490 if(
r
 =
yi
)

491 
Æpha_√w
[
r
] = 
	`mö
(
C_yi
, (
bëa
-
B
[r])/
A_i
);

493 
Æpha_√w
[
r
] = 
	`mö
(()0, (
bëa
 - 
B
[r])/
A_i
);

495 
dñëe
[] 
D
;

496 
	}
}

498 
boﬁ
 
	gSﬁvî_MCSVM_CS
::
	$be_shrunk
(
i
, 
m
, 
yi
, 
Æpha_i
, 
möG
)

500 
bound
 = 0;

501 if(
m
 =
yi
)

502 
bound
 = 
C
[
	`GETI
(
i
)];

503 if(
Æpha_i
 =
bound
 && 
G
[
m
] < 
möG
)

504  
åue
;

505  
Ál£
;

506 
	}
}

508 
	gSﬁvî_MCSVM_CS
::
	$Sﬁve
(*
w
)

510 
i
, 
m
, 
s
;

511 
ôî
 = 0;

512 *
Æpha
 = 
√w
 [
l
*
ƒ_˛ass
];

513 *
Æpha_√w
 = 
√w
 [
ƒ_˛ass
];

514 *
ödex
 = 
√w
 [
l
];

515 *
QD
 = 
√w
 [
l
];

516 *
d_öd
 = 
√w
 [
ƒ_˛ass
];

517 *
d_vÆ
 = 
√w
 [
ƒ_˛ass
];

518 *
Æpha_ödex
 = 
√w
 [
ƒ_˛ass
*
l
];

519 *
y_ödex
 = 
√w
 [
l
];

520 
a˘ive_size
 = 
l
;

521 *
a˘ive_size_i
 = 
√w
 [
l
];

522 
ïs_shrök
 = 
	`max
(10.0*
ïs
, 1.0);

523 
boﬁ
 
°¨t_‰om_Æl
 = 
åue
;

525 
i
=0;i<
l
*
ƒ_˛ass
;i++)

526 
Æpha
[
i
] = 0;

527 
i
=0;i<
w_size
*
ƒ_˛ass
;i++)

528 
w
[
i
] = 0;

529 
i
=0;i<
l
;i++)

531 
m
=0;m<
ƒ_˛ass
;m++)

532 
Æpha_ödex
[
i
*
ƒ_˛ass
+
m
] = m;

533 
„©uª_node
 *
xi
 = 
¥ob
->
x
[
i
];

534 
QD
[
i
] = 0;

535 
xi
->
ödex
 != -1)

537 
QD
[
i
] +(
xi
->
vÆue
)*(xi->value);

538 
xi
++;

540 
a˘ive_size_i
[
i
] = 
ƒ_˛ass
;

541 
y_ödex
[
i
] = 
¥ob
->
y
[i];

542 
ödex
[
i
] = i;

545 
ôî
 < 
max_ôî
)

547 
°›pög
 = -
INF
;

548 
i
=0;i<
a˘ive_size
;i++)

550 
j
 = 
i
+
	`ønd
()%(
a˘ive_size
-i);

551 
	`sw≠
(
ödex
[
i
], index[
j
]);

553 
s
=0;s<
a˘ive_size
;s++)

555 
i
 = 
ödex
[
s
];

556 
Ai
 = 
QD
[
i
];

557 *
Æpha_i
 = &
Æpha
[
i
*
ƒ_˛ass
];

558 *
Æpha_ödex_i
 = &
Æpha_ödex
[
i
*
ƒ_˛ass
];

560 if(
Ai
 > 0)

562 
m
=0;m<
a˘ive_size_i
[
i
];m++)

563 
G
[
m
] = 1;

564 if(
y_ödex
[
i
] < 
a˘ive_size_i
[i])

565 
G
[
y_ödex
[
i
]] = 0;

567 
„©uª_node
 *
xi
 = 
¥ob
->
x
[
i
];

568 
xi
->
ödex
!= -1)

570 *
w_i
 = &
w
[(
xi
->
ödex
-1)*
ƒ_˛ass
];

571 
m
=0;m<
a˘ive_size_i
[
i
];m++)

572 
G
[
m
] +
w_i
[
Æpha_ödex_i
[m]]*(
xi
->
vÆue
);

573 
xi
++;

576 
möG
 = 
INF
;

577 
maxG
 = -
INF
;

578 
m
=0;m<
a˘ive_size_i
[
i
];m++)

580 if(
Æpha_i
[
Æpha_ödex_i
[
m
]] < 0 && 
G
[m] < 
möG
)

581 
möG
 = 
G
[
m
];

582 if(
G
[
m
] > 
maxG
)

583 
maxG
 = 
G
[
m
];

585 if(
y_ödex
[
i
] < 
a˘ive_size_i
[i])

586 if(
Æpha_i
[
¥ob
->
y
[
i
]] < 
C
[
	`GETI
(i)] && 
G
[
y_ödex
[i]] < 
möG
)

587 
möG
 = 
G
[
y_ödex
[
i
]];

589 
m
=0;m<
a˘ive_size_i
[
i
];m++)

591 if(
	`be_shrunk
(
i
, 
m
, 
y_ödex
[i], 
Æpha_i
[
Æpha_ödex_i
[m]], 
möG
))

593 
a˘ive_size_i
[
i
]--;

594 
a˘ive_size_i
[
i
]>
m
)

596 if(!
	`be_shrunk
(
i
, 
a˘ive_size_i
[i], 
y_ödex
[i],

597 
Æpha_i
[
Æpha_ödex_i
[
a˘ive_size_i
[
i
]]], 
möG
))

599 
	`sw≠
(
Æpha_ödex_i
[
m
],áÕha_ödex_i[
a˘ive_size_i
[
i
]]);

600 
	`sw≠
(
G
[
m
], G[
a˘ive_size_i
[
i
]]);

601 if(
y_ödex
[
i
] =
a˘ive_size_i
[i])

602 
y_ödex
[
i
] = 
m
;

603 if(
y_ödex
[
i
] =
m
)

604 
y_ödex
[
i
] = 
a˘ive_size_i
[i];

607 
a˘ive_size_i
[
i
]--;

612 if(
a˘ive_size_i
[
i
] <= 1)

614 
a˘ive_size
--;

615 
	`sw≠
(
ödex
[
s
], index[
a˘ive_size
]);

616 
s
--;

620 if(
maxG
-
möG
 <= 1e-12)

623 
°›pög
 = 
	`max
(
maxG
 - 
möG
, stopping);

625 
m
=0;m<
a˘ive_size_i
[
i
];m++)

626 
B
[
m
] = 
G
[m] - 
Ai
*
Æpha_i
[
Æpha_ödex_i
[m]] ;

628 
	`sﬁve_sub_¥obÀm
(
Ai
, 
y_ödex
[
i
], 
C
[
	`GETI
(i)], 
a˘ive_size_i
[i], 
Æpha_√w
);

629 
nz_d
 = 0;

630 
m
=0;m<
a˘ive_size_i
[
i
];m++)

632 
d
 = 
Æpha_√w
[
m
] - 
Æpha_i
[
Æpha_ödex_i
[m]];

633 
Æpha_i
[
Æpha_ödex_i
[
m
]] = 
Æpha_√w
[m];

634 if(
	`Ábs
(
d
) >= 1e-12)

636 
d_öd
[
nz_d
] = 
Æpha_ödex_i
[
m
];

637 
d_vÆ
[
nz_d
] = 
d
;

638 
nz_d
++;

642 
xi
 = 
¥ob
->
x
[
i
];

643 
xi
->
ödex
 != -1)

645 *
w_i
 = &
w
[(
xi
->
ödex
-1)*
ƒ_˛ass
];

646 
m
=0;m<
nz_d
;m++)

647 
w_i
[
d_öd
[
m
]] +
d_vÆ
[m]*
xi
->
vÆue
;

648 
xi
++;

653 
ôî
++;

654 if(
ôî
 % 10 == 0)

656 
	`öfo
(".");

659 if(
°›pög
 < 
ïs_shrök
)

661 if(
°›pög
 < 
ïs
 && 
°¨t_‰om_Æl
 =
åue
)

665 
a˘ive_size
 = 
l
;

666 
i
=0;i<
l
;i++)

667 
a˘ive_size_i
[
i
] = 
ƒ_˛ass
;

668 
	`öfo
("*");

669 
ïs_shrök
 = 
	`max
”ps_shrök/2, 
ïs
);

670 
°¨t_‰om_Æl
 = 
åue
;

674 
°¨t_‰om_Æl
 = 
Ál£
;

677 
	`öfo
("\n›timiz©i⁄ föished, #ôî = %d\n",
ôî
);

678 i‡(
ôî
 >
max_ôî
)

679 
	`öfo
("Warning:Ñeaching maxÇumber of iterations\n");

682 
v
 = 0;

683 
nSV
 = 0;

684 
i
=0;i<
w_size
*
ƒ_˛ass
;i++)

685 
v
 +
w
[
i
]*w[i];

686 
v
 = 0.5*v;

687 
i
=0;i<
l
*
ƒ_˛ass
;i++)

689 
v
 +
Æpha
[
i
];

690 if(
	`Ábs
(
Æpha
[
i
]) > 0)

691 
nSV
++;

693 
i
=0;i<
l
;i++)

694 
v
 -
Æpha
[
i
*
ƒ_˛ass
+
¥ob
->
y
[i]];

695 
	`öfo
("Obje˘ivêvÆuê%lf\n",
v
);

696 
	`öfo
("nSV = %d\n",
nSV
);

698 
dñëe
 [] 
Æpha
;

699 
dñëe
 [] 
Æpha_√w
;

700 
dñëe
 [] 
ödex
;

701 
dñëe
 [] 
QD
;

702 
dñëe
 [] 
d_öd
;

703 
dñëe
 [] 
d_vÆ
;

704 
dñëe
 [] 
Æpha_ödex
;

705 
dñëe
 [] 
y_ödex
;

706 
dñëe
 [] 
a˘ive_size_i
;

707 
	}
}

733 #unde‡
GETI


734 
	#GETI
(
i
Ë(i)

	)

737 
	$sﬁve_l2r_l1l2_svc
(

738 c⁄° 
¥obÀm
 *
¥ob
, *
w
, 
ïs
,

739 
Cp
, 
Cn
, 
sﬁvî_ty≥
)

741 
l
 = 
¥ob
->l;

742 
w_size
 = 
¥ob
->
n
;

743 
i
, 
s
, 
ôî
 = 0;

744 
C
, 
d
, 
G
;

745 *
QD
 = 
√w
 [
l
];

746 
max_ôî
 = 1000;

747 *
ödex
 = 
√w
 [
l
];

748 *
Æpha
 = 
√w
 [
l
];

749 
sch¨
 *
y
 = 
√w
 sch¨[
l
];

750 
a˘ive_size
 = 
l
;

753 
PG
;

754 
PGmax_ﬁd
 = 
INF
;

755 
PGmö_ﬁd
 = -
INF
;

756 
PGmax_√w
, 
PGmö_√w
;

759 *
düg
 = 
√w
 [
l
];

760 *
uµî_bound
 = 
√w
 [
l
];

761 *
C_
 = 
√w
 [
l
];

762 
i
=0; i<
l
; i++)

764 if(
¥ob
->
y
[
i
]>0)

765 
C_
[
i
] = 
¥ob
->
W
[i] * 
Cp
;

767 
C_
[
i
] = 
¥ob
->
W
[i] * 
Cn
;

768 
düg
[
i
] = 0.5/
C_
[i];

769 
uµî_bound
[
i
] = 
INF
;

771 if(
sﬁvî_ty≥
 =
L2R_L1LOSS_SVC_DUAL
)

773 
i
=0; i<
l
; i++)

775 
düg
[
i
] = 0;

776 
uµî_bound
[
i
] = 
C_
[i];

780 
i
=0; i<
w_size
; i++)

781 
w
[
i
] = 0;

782 
i
=0; i<
l
; i++)

784 
Æpha
[
i
] = 0;

785 if(
¥ob
->
y
[
i
] > 0)

787 
y
[
i
] = +1;

791 
y
[
i
] = -1;

793 
QD
[
i
] = 
düg
[
	`GETI
(i)];

795 
„©uª_node
 *
xi
 = 
¥ob
->
x
[
i
];

796 
xi
->
ödex
 != -1)

798 
QD
[
i
] +(
xi
->
vÆue
)*(xi->value);

799 
xi
++;

801 
ödex
[
i
] = i;

804 
ôî
 < 
max_ôî
)

806 
PGmax_√w
 = -
INF
;

807 
PGmö_√w
 = 
INF
;

809 
i
=0; i<
a˘ive_size
; i++)

811 
j
 = 
i
+
	`ønd
()%(
a˘ive_size
-i);

812 
	`sw≠
(
ödex
[
i
], index[
j
]);

815 
s
=0;s<
a˘ive_size
;s++)

817 
i
 = 
ödex
[
s
];

818 
G
 = 0;

819 
sch¨
 
yi
 = 
y
[
i
];

821 
„©uª_node
 *
xi
 = 
¥ob
->
x
[
i
];

822 
xi
->
ödex
!= -1)

824 
G
 +
w
[
xi
->
ödex
-1]*(xi->
vÆue
);

825 
xi
++;

827 
G
 = G*
yi
-1;

829 
C
 = 
uµî_bound
[
	`GETI
(
i
)];

830 
G
 +
Æpha
[
i
]*
düg
[
	`GETI
(i)];

832 
PG
 = 0;

833 i‡(
Æpha
[
i
] == 0)

835 i‡(
G
 > 
PGmax_ﬁd
)

837 
a˘ive_size
--;

838 
	`sw≠
(
ödex
[
s
], index[
a˘ive_size
]);

839 
s
--;

842 i‡(
G
 < 0)

843 
PG
 = 
G
;

845 i‡(
Æpha
[
i
] =
C
)

847 i‡(
G
 < 
PGmö_ﬁd
)

849 
a˘ive_size
--;

850 
	`sw≠
(
ödex
[
s
], index[
a˘ive_size
]);

851 
s
--;

854 i‡(
G
 > 0)

855 
PG
 = 
G
;

858 
PG
 = 
G
;

860 
PGmax_√w
 = 
	`max
(PGmax_√w, 
PG
);

861 
PGmö_√w
 = 
	`mö
(PGmö_√w, 
PG
);

863 if(
	`Ábs
(
PG
) > 1.0e-12)

865 
Æpha_ﬁd
 = 
Æpha
[
i
];

866 
Æpha
[
i
] = 
	`mö
(
	`max
◊Õha[i] - 
G
/
QD
[i], 0.0), 
C
);

867 
d
 = (
Æpha
[
i
] - 
Æpha_ﬁd
)*
yi
;

868 
xi
 = 
¥ob
->
x
[
i
];

869 
xi
->
ödex
 != -1)

871 
w
[
xi
->
ödex
-1] +
d
*xi->
vÆue
;

872 
xi
++;

877 
ôî
++;

878 if(
ôî
 % 10 == 0)

879 
	`öfo
(".");

881 if(
PGmax_√w
 - 
PGmö_√w
 <
ïs
)

883 if(
a˘ive_size
 =
l
)

887 
a˘ive_size
 = 
l
;

888 
	`öfo
("*");

889 
PGmax_ﬁd
 = 
INF
;

890 
PGmö_ﬁd
 = -
INF
;

894 
PGmax_ﬁd
 = 
PGmax_√w
;

895 
PGmö_ﬁd
 = 
PGmö_√w
;

896 i‡(
PGmax_ﬁd
 <= 0)

897 
PGmax_ﬁd
 = 
INF
;

898 i‡(
PGmö_ﬁd
 >= 0)

899 
PGmö_ﬁd
 = -
INF
;

902 
	`öfo
("\n›timiz©i⁄ föished, #ôî = %d\n",
ôî
);

903 i‡(
ôî
 >
max_ôî
)

904 
	`öfo
("\nWARNING:Ñeaching maxÇumber of iterations\nUsing -s 2 may be faster (also see FAQ)\n\n");

908 
v
 = 0;

909 
nSV
 = 0;

910 
i
=0; i<
w_size
; i++)

911 
v
 +
w
[
i
]*w[i];

912 
i
=0; i<
l
; i++)

914 
v
 +
Æpha
[
i
]*◊Õha[i]*
düg
[
	`GETI
(i)] - 2);

915 if(
Æpha
[
i
] > 0)

916 ++
nSV
;

918 
	`öfo
("Obje˘ivêvÆuê%lf\n",
v
/2);

919 
	`öfo
("nSV = %d\n",
nSV
);

921 
dñëe
 [] 
uµî_bound
;

922 
dñëe
 [] 
düg
;

923 
dñëe
 [] 
C_
;

924 
dñëe
 [] 
QD
;

925 
dñëe
 [] 
Æpha
;

926 
dñëe
 [] 
y
;

927 
dñëe
 [] 
ödex
;

928 
	}
}

941 #unde‡
GETI


942 
	#GETI
(
i
Ë(i)

	)

945 
	$sﬁve_l1r_l2_svc
(

946 
¥obÀm
 *
¥ob_cﬁ
, *
w
, 
ïs
,

947 
Cp
, 
Cn
)

949 
l
 = 
¥ob_cﬁ
->l;

950 
w_size
 = 
¥ob_cﬁ
->
n
;

951 
j
, 
s
, 
ôî
 = 0;

952 
max_ôî
 = 1000;

953 
a˘ive_size
 = 
w_size
;

954 
max_num_löe£¨ch
 = 20;

956 
sigma
 = 0.01;

957 
d
, 
G_loss
, 
G
, 
H
;

958 
Gmax_ﬁd
 = 
INF
;

959 
Gmax_√w
;

960 
Gmax_öô
 = 0.0;

961 
d_ﬁd
, 
d_diff
;

962 
loss_ﬁd
, 
loss_√w
;

963 
≠pxc⁄d
, 
c⁄d
;

965 *
ödex
 = 
√w
 [
w_size
];

966 
sch¨
 *
y
 = 
√w
 sch¨[
l
];

967 *
b
 = 
√w
 [
l
];

968 *
xj_sq
 = 
√w
 [
w_size
];

969 
„©uª_node
 *
x
;

971 *
C
 = 
√w
 [
l
];

973 
j
=0; j<
l
; j++)

975 
b
[
j
] = 1;

976 if(
¥ob_cﬁ
->
y
[
j
] > 0)

978 
y
[
j
] = 1;

979 
C
[
j
] = 
¥ob_cﬁ
->
W
[j] * 
Cp
;

983 
y
[
j
] = -1;

984 
C
[
j
] = 
¥ob_cﬁ
->
W
[j] * 
Cn
;

987 
j
=0; j<
w_size
; j++)

989 
w
[
j
] = 0;

990 
ödex
[
j
] = j;

991 
xj_sq
[
j
] = 0;

992 
x
 = 
¥ob_cﬁ
->x[
j
];

993 
x
->
ödex
 != -1)

995 
öd
 = 
x
->
ödex
-1;

996 
vÆ
 = 
x
->
vÆue
;

997 
x
->
vÆue
 *
y
[
öd
];

998 
xj_sq
[
j
] +
C
[
	`GETI
(
öd
)]*
vÆ
*val;

999 
x
++;

1003 
ôî
 < 
max_ôî
)

1005 
Gmax_√w
 = 0;

1007 
j
=0; j<
a˘ive_size
; j++)

1009 
i
 = 
j
+
	`ønd
()%(
a˘ive_size
-j);

1010 
	`sw≠
(
ödex
[
i
], index[
j
]);

1013 
s
=0; s<
a˘ive_size
; s++)

1015 
j
 = 
ödex
[
s
];

1016 
G_loss
 = 0;

1017 
H
 = 0;

1019 
x
 = 
¥ob_cﬁ
->x[
j
];

1020 
x
->
ödex
 != -1)

1022 
öd
 = 
x
->
ödex
-1;

1023 if(
b
[
öd
] > 0)

1025 
vÆ
 = 
x
->
vÆue
;

1026 
tmp
 = 
C
[
	`GETI
(
öd
)]*
vÆ
;

1027 
G_loss
 -
tmp
*
b
[
öd
];

1028 
H
 +
tmp
*
vÆ
;

1030 
x
++;

1032 
G_loss
 *= 2;

1034 
G
 = 
G_loss
;

1035 
H
 *= 2;

1036 
H
 = 
	`max
(H, 1e-12);

1038 
Gp
 = 
G
+1;

1039 
Gn
 = 
G
-1;

1040 
viﬁ©i⁄
 = 0;

1041 if(
w
[
j
] == 0)

1043 if(
Gp
 < 0)

1044 
viﬁ©i⁄
 = -
Gp
;

1045 if(
Gn
 > 0)

1046 
viﬁ©i⁄
 = 
Gn
;

1047 if(
Gp
>
Gmax_ﬁd
/
l
 && 
Gn
<-Gmax_old/l)

1049 
a˘ive_size
--;

1050 
	`sw≠
(
ödex
[
s
], index[
a˘ive_size
]);

1051 
s
--;

1055 if(
w
[
j
] > 0)

1056 
viﬁ©i⁄
 = 
	`Ábs
(
Gp
);

1058 
viﬁ©i⁄
 = 
	`Ábs
(
Gn
);

1060 
Gmax_√w
 = 
	`max
(Gmax_√w, 
viﬁ©i⁄
);

1063 if(
Gp
 <
H
*
w
[
j
])

1064 
d
 = -
Gp
/
H
;

1065 if(
Gn
 >
H
*
w
[
j
])

1066 
d
 = -
Gn
/
H
;

1068 
d
 = -
w
[
j
];

1070 if(
	`Ábs
(
d
) < 1.0e-12)

1073 
dñè
 = 
	`Ábs
(
w
[
j
]+
d
)-Ábs(w[j]Ë+ 
G
*d;

1074 
d_ﬁd
 = 0;

1075 
num_löe£¨ch
;

1076 
num_löe£¨ch
=0;Çum_löe£¨ch < 
max_num_löe£¨ch
;Çum_linesearch++)

1078 
d_diff
 = 
d_ﬁd
 - 
d
;

1079 
c⁄d
 = 
	`Ábs
(
w
[
j
]+
d
)-Ábs(w[j]Ë- 
sigma
*
dñè
;

1081 
≠pxc⁄d
 = 
xj_sq
[
j
]*
d
*d + 
G_loss
*d + 
c⁄d
;

1082 if(
≠pxc⁄d
 <= 0)

1084 
x
 = 
¥ob_cﬁ
->x[
j
];

1085 
x
->
ödex
 != -1)

1087 
b
[
x
->
ödex
-1] +
d_diff
*x->
vÆue
;

1088 
x
++;

1093 if(
num_löe£¨ch
 == 0)

1095 
loss_ﬁd
 = 0;

1096 
loss_√w
 = 0;

1097 
x
 = 
¥ob_cﬁ
->x[
j
];

1098 
x
->
ödex
 != -1)

1100 
öd
 = 
x
->
ödex
-1;

1101 if(
b
[
öd
] > 0)

1102 
loss_ﬁd
 +
C
[
	`GETI
(
öd
)]*
b
[ind]*b[ind];

1103 
b_√w
 = 
b
[
öd
] + 
d_diff
*
x
->
vÆue
;

1104 
b
[
öd
] = 
b_√w
;

1105 if(
b_√w
 > 0)

1106 
loss_√w
 +
C
[
	`GETI
(
öd
)]*
b_√w
*b_new;

1107 
x
++;

1112 
loss_√w
 = 0;

1113 
x
 = 
¥ob_cﬁ
->x[
j
];

1114 
x
->
ödex
 != -1)

1116 
öd
 = 
x
->
ödex
-1;

1117 
b_√w
 = 
b
[
öd
] + 
d_diff
*
x
->
vÆue
;

1118 
b
[
öd
] = 
b_√w
;

1119 if(
b_√w
 > 0)

1120 
loss_√w
 +
C
[
	`GETI
(
öd
)]*
b_√w
*b_new;

1121 
x
++;

1125 
c⁄d
 = c⁄d + 
loss_√w
 - 
loss_ﬁd
;

1126 if(
c⁄d
 <= 0)

1130 
d_ﬁd
 = 
d
;

1131 
d
 *= 0.5;

1132 
dñè
 *= 0.5;

1136 
w
[
j
] +
d
;

1139 if(
num_löe£¨ch
 >
max_num_löe£¨ch
)

1141 
	`öfo
("#");

1142 
i
=0; i<
l
; i++)

1143 
b
[
i
] = 1;

1145 
i
=0; i<
w_size
; i++)

1147 if(
w
[
i
]==0) ;

1148 
x
 = 
¥ob_cﬁ
->x[
i
];

1149 
x
->
ödex
 != -1)

1151 
b
[
x
->
ödex
-1] -
w
[
i
]*x->
vÆue
;

1152 
x
++;

1158 if(
ôî
 == 0)

1159 
Gmax_öô
 = 
Gmax_√w
;

1160 
ôî
++;

1161 if(
ôî
 % 10 == 0)

1162 
	`öfo
(".");

1164 if(
Gmax_√w
 <
ïs
*
Gmax_öô
)

1166 if(
a˘ive_size
 =
w_size
)

1170 
a˘ive_size
 = 
w_size
;

1171 
	`öfo
("*");

1172 
Gmax_ﬁd
 = 
INF
;

1177 
Gmax_ﬁd
 = 
Gmax_√w
;

1180 
	`öfo
("\n›timiz©i⁄ föished, #ôî = %d\n", 
ôî
);

1181 if(
ôî
 >
max_ôî
)

1182 
	`öfo
("\nWARNING:Ñeaching maxÇumber of iterations\n");

1186 
v
 = 0;

1187 
¬z
 = 0;

1188 
j
=0; j<
w_size
; j++)

1190 
x
 = 
¥ob_cﬁ
->x[
j
];

1191 
x
->
ödex
 != -1)

1193 
x
->
vÆue
 *
¥ob_cﬁ
->
y
[x->
ödex
-1];

1194 
x
++;

1196 if(
w
[
j
] != 0)

1198 
v
 +
	`Ábs
(
w
[
j
]);

1199 
¬z
++;

1202 
j
=0; j<
l
; j++)

1203 if(
b
[
j
] > 0)

1204 
v
 +
C
[
	`GETI
(
j
)]*
b
[j]*b[j];

1206 
	`öfo
("Obje˘ivêvÆuê%lf\n", 
v
);

1207 
	`öfo
("#n⁄zîos/#„©uª†%d/%d\n", 
¬z
, 
w_size
);

1209 
dñëe
 [] 
C
;

1210 
dñëe
 [] 
ödex
;

1211 
dñëe
 [] 
y
;

1212 
dñëe
 [] 
b
;

1213 
dñëe
 [] 
xj_sq
;

1214 
	}
}

1227 #unde‡
GETI


1228 
	#GETI
(
i
Ë(
y
[i]+1)

	)

1231 
	$sﬁve_l1r_Ã
(

1232 c⁄° 
¥obÀm
 *
¥ob_cﬁ
, *
w
, 
ïs
,

1233 
Cp
, 
Cn
)

1235 
l
 = 
¥ob_cﬁ
->l;

1236 
w_size
 = 
¥ob_cﬁ
->
n
;

1237 
j
, 
s
, 
ôî
 = 0;

1238 
max_ôî
 = 1000;

1239 
a˘ive_size
 = 
w_size
;

1240 
max_num_löe£¨ch
 = 20;

1242 
x_mö
 = 0;

1243 
sigma
 = 0.01;

1244 
d
, 
G
, 
H
;

1245 
Gmax_ﬁd
 = 
INF
;

1246 
Gmax_√w
;

1247 
Gmax_öô
 = 0.0;

1248 
sum1
, 
≠pxc⁄d1
;

1249 
sum2
, 
≠pxc⁄d2
;

1250 
c⁄d
;

1252 *
ödex
 = 
√w
 [
w_size
];

1253 
sch¨
 *
y
 = 
√w
 sch¨[
l
];

1254 *
exp_wTx
 = 
√w
 [
l
];

1255 *
exp_wTx_√w
 = 
√w
 [
l
];

1256 *
xj_max
 = 
√w
 [
w_size
];

1257 *
C_sum
 = 
√w
 [
w_size
];

1258 *
xj√g_sum
 = 
√w
 [
w_size
];

1259 *
xjpos_sum
 = 
√w
 [
w_size
];

1260 
„©uª_node
 *
x
;

1262 *
C
 = 
√w
 [
l
];

1264 
j
=0; j<
l
; j++)

1266 
exp_wTx
[
j
] = 1;

1267 if(
¥ob_cﬁ
->
y
[
j
] > 0)

1269 
y
[
j
] = 1;

1270 
C
[
j
] = 
¥ob_cﬁ
->
W
[j] * 
Cp
;

1274 
y
[
j
] = -1;

1275 
C
[
j
] = 
¥ob_cﬁ
->
W
[j] * 
Cn
;

1278 
j
=0; j<
w_size
; j++)

1280 
w
[
j
] = 0;

1281 
ödex
[
j
] = j;

1282 
xj_max
[
j
] = 0;

1283 
C_sum
[
j
] = 0;

1284 
xj√g_sum
[
j
] = 0;

1285 
xjpos_sum
[
j
] = 0;

1286 
x
 = 
¥ob_cﬁ
->x[
j
];

1287 
x
->
ödex
 != -1)

1289 
öd
 = 
x
->
ödex
-1;

1290 
vÆ
 = 
x
->
vÆue
;

1291 
x_mö
 = 
	`mö
(x_mö, 
vÆ
);

1292 
xj_max
[
j
] = 
	`max
(xj_max[j], 
vÆ
);

1293 
C_sum
[
j
] +
C
[
	`GETI
(
öd
)];

1294 if(
y
[
öd
] == -1)

1295 
xj√g_sum
[
j
] +
C
[
	`GETI
(
öd
)]*
vÆ
;

1297 
xjpos_sum
[
j
] +
C
[
	`GETI
(
öd
)]*
vÆ
;

1298 
x
++;

1302 
ôî
 < 
max_ôî
)

1304 
Gmax_√w
 = 0;

1306 
j
=0; j<
a˘ive_size
; j++)

1308 
i
 = 
j
+
	`ønd
()%(
a˘ive_size
-j);

1309 
	`sw≠
(
ödex
[
i
], index[
j
]);

1312 
s
=0; s<
a˘ive_size
; s++)

1314 
j
 = 
ödex
[
s
];

1315 
sum1
 = 0;

1316 
sum2
 = 0;

1317 
H
 = 0;

1319 
x
 = 
¥ob_cﬁ
->x[
j
];

1320 
x
->
ödex
 != -1)

1322 
öd
 = 
x
->
ödex
-1;

1323 
exp_wTxöd
 = 
exp_wTx
[
öd
];

1324 
tmp1
 = 
x
->
vÆue
/(1+
exp_wTxöd
);

1325 
tmp2
 = 
C
[
	`GETI
(
öd
)]*
tmp1
;

1326 
tmp3
 = 
tmp2
*
exp_wTxöd
;

1327 
sum2
 +
tmp2
;

1328 
sum1
 +
tmp3
;

1329 
H
 +
tmp1
*
tmp3
;

1330 
x
++;

1333 
G
 = -
sum2
 + 
xj√g_sum
[
j
];

1335 
Gp
 = 
G
+1;

1336 
Gn
 = 
G
-1;

1337 
viﬁ©i⁄
 = 0;

1338 if(
w
[
j
] == 0)

1340 if(
Gp
 < 0)

1341 
viﬁ©i⁄
 = -
Gp
;

1342 if(
Gn
 > 0)

1343 
viﬁ©i⁄
 = 
Gn
;

1344 if(
Gp
>
Gmax_ﬁd
/
l
 && 
Gn
<-Gmax_old/l)

1346 
a˘ive_size
--;

1347 
	`sw≠
(
ödex
[
s
], index[
a˘ive_size
]);

1348 
s
--;

1352 if(
w
[
j
] > 0)

1353 
viﬁ©i⁄
 = 
	`Ábs
(
Gp
);

1355 
viﬁ©i⁄
 = 
	`Ábs
(
Gn
);

1357 
Gmax_√w
 = 
	`max
(Gmax_√w, 
viﬁ©i⁄
);

1360 if(
Gp
 <
H
*
w
[
j
])

1361 
d
 = -
Gp
/
H
;

1362 if(
Gn
 >
H
*
w
[
j
])

1363 
d
 = -
Gn
/
H
;

1365 
d
 = -
w
[
j
];

1367 if(
	`Ábs
(
d
) < 1.0e-12)

1370 
d
 = 
	`mö
(
	`max
(d,-10.0),10.0);

1372 
dñè
 = 
	`Ábs
(
w
[
j
]+
d
)-Ábs(w[j]Ë+ 
G
*d;

1373 
num_löe£¨ch
;

1374 
num_löe£¨ch
=0;Çum_löe£¨ch < 
max_num_löe£¨ch
;Çum_linesearch++)

1376 
c⁄d
 = 
	`Ábs
(
w
[
j
]+
d
)-Ábs(w[j]Ë- 
sigma
*
dñè
;

1378 if(
x_mö
 >= 0)

1380 
tmp
 = 
	`exp
(
d
*
xj_max
[
j
]);

1381 
≠pxc⁄d1
 = 
	`log
(1+
sum1
*(
tmp
-1)/
xj_max
[
j
]/
C_sum
[j])*C_sum[j] + 
c⁄d
 - 
d
*
xjpos_sum
[j];

1382 
≠pxc⁄d2
 = 
	`log
(1+
sum2
*(1/
tmp
-1)/
xj_max
[
j
]/
C_sum
[j])*C_sum[j] + 
c⁄d
 + 
d
*
xj√g_sum
[j];

1383 if(
	`mö
(
≠pxc⁄d1
,
≠pxc⁄d2
) <= 0)

1385 
x
 = 
¥ob_cﬁ
->x[
j
];

1386 
x
->
ödex
 != -1)

1388 
exp_wTx
[
x
->
ödex
-1] *
	`exp
(
d
*x->
vÆue
);

1389 
x
++;

1395 
c⁄d
 +
d
*
xj√g_sum
[
j
];

1397 
i
 = 0;

1398 
x
 = 
¥ob_cﬁ
->x[
j
];

1399 
x
->
ödex
 != -1)

1401 
öd
 = 
x
->
ödex
-1;

1402 
exp_dx
 = 
	`exp
(
d
*
x
->
vÆue
);

1403 
exp_wTx_√w
[
i
] = 
exp_wTx
[
öd
]*
exp_dx
;

1404 
c⁄d
 +
C
[
	`GETI
(
öd
)]*
	`log
((1+
exp_wTx_√w
[
i
])/(
exp_dx
+exp_wTx_new[i]));

1405 
x
++; 
i
++;

1408 if(
c⁄d
 <= 0)

1410 
i
 = 0;

1411 
x
 = 
¥ob_cﬁ
->x[
j
];

1412 
x
->
ödex
 != -1)

1414 
öd
 = 
x
->
ödex
-1;

1415 
exp_wTx
[
öd
] = 
exp_wTx_√w
[
i
];

1416 
x
++; 
i
++;

1422 
d
 *= 0.5;

1423 
dñè
 *= 0.5;

1427 
w
[
j
] +
d
;

1430 if(
num_löe£¨ch
 >
max_num_löe£¨ch
)

1432 
	`öfo
("#");

1433 
i
=0; i<
l
; i++)

1434 
exp_wTx
[
i
] = 0;

1436 
i
=0; i<
w_size
; i++)

1438 if(
w
[
i
]==0) ;

1439 
x
 = 
¥ob_cﬁ
->x[
i
];

1440 
x
->
ödex
 != -1)

1442 
exp_wTx
[
x
->
ödex
-1] +
w
[
i
]*x->
vÆue
;

1443 
x
++;

1447 
i
=0; i<
l
; i++)

1448 
exp_wTx
[
i
] = 
	`exp
(exp_wTx[i]);

1452 if(
ôî
 == 0)

1453 
Gmax_öô
 = 
Gmax_√w
;

1454 
ôî
++;

1455 if(
ôî
 % 10 == 0)

1456 
	`öfo
(".");

1458 if(
Gmax_√w
 <
ïs
*
Gmax_öô
)

1460 if(
a˘ive_size
 =
w_size
)

1464 
a˘ive_size
 = 
w_size
;

1465 
	`öfo
("*");

1466 
Gmax_ﬁd
 = 
INF
;

1471 
Gmax_ﬁd
 = 
Gmax_√w
;

1474 
	`öfo
("\n›timiz©i⁄ föished, #ôî = %d\n", 
ôî
);

1475 if(
ôî
 >
max_ôî
)

1476 
	`öfo
("\nWARNING:Ñeaching maxÇumber of iterations\n");

1480 
v
 = 0;

1481 
¬z
 = 0;

1482 
j
=0; j<
w_size
; j++)

1483 if(
w
[
j
] != 0)

1485 
v
 +
	`Ábs
(
w
[
j
]);

1486 
¬z
++;

1488 
j
=0; j<
l
; j++)

1489 if(
y
[
j
] == 1)

1490 
v
 +
C
[
	`GETI
(
j
)]*
	`log
(1+1/
exp_wTx
[j]);

1492 
v
 +
C
[
	`GETI
(
j
)]*
	`log
(1+
exp_wTx
[j]);

1494 
	`öfo
("Obje˘ivêvÆuê%lf\n", 
v
);

1495 
	`öfo
("#n⁄zîos/#„©uª†%d/%d\n", 
¬z
, 
w_size
);

1497 
dñëe
 [] 
C
;

1498 
dñëe
 [] 
ödex
;

1499 
dñëe
 [] 
y
;

1500 
dñëe
 [] 
exp_wTx
;

1501 
dñëe
 [] 
exp_wTx_√w
;

1502 
dñëe
 [] 
xj_max
;

1503 
dñëe
 [] 
C_sum
;

1504 
dñëe
 [] 
xj√g_sum
;

1505 
dñëe
 [] 
xjpos_sum
;

1506 
	}
}

1509 
	$å™•o£
(c⁄° 
¥obÀm
 *
¥ob
, 
„©uª_node
 **
x_•a˚_ªt
,ÖrobÀm *
¥ob_cﬁ
)

1511 
i
;

1512 
l
 = 
¥ob
->l;

1513 
n
 = 
¥ob
->n;

1514 
¬z
 = 0;

1515 *
cﬁ_±r
 = 
√w
 [
n
+1];

1516 
„©uª_node
 *
x_•a˚
;

1517 
¥ob_cﬁ
->
l
 =Ü;

1518 
¥ob_cﬁ
->
n
 =Ç;

1519 
¥ob_cﬁ
->
y
 = 
√w
 [
l
];

1520 
¥ob_cﬁ
->
x
 = 
√w
 
„©uª_node
*[
n
];

1521 
¥ob_cﬁ
->
W
 = 
√w
 [
l
];

1523 
i
=0; i<
l
; i++)

1525 
¥ob_cﬁ
->
y
[
i
] = 
¥ob
->y[i];

1526 
¥ob_cﬁ
->
W
[
i
] = 
¥ob
->W[i];

1529 
i
=0; i<
n
+1; i++)

1530 
cﬁ_±r
[
i
] = 0;

1531 
i
=0; i<
l
; i++)

1533 
„©uª_node
 *
x
 = 
¥ob
->x[
i
];

1534 
x
->
ödex
 != -1)

1536 
¬z
++;

1537 
cﬁ_±r
[
x
->
ödex
]++;

1538 
x
++;

1541 
i
=1; i<
n
+1; i++)

1542 
cﬁ_±r
[
i
] += col_ptr[i-1] + 1;

1544 
x_•a˚
 = 
√w
 
„©uª_node
[
¬z
+
n
];

1545 
i
=0; i<
n
; i++)

1546 
¥ob_cﬁ
->
x
[
i
] = &
x_•a˚
[
cﬁ_±r
[i]];

1548 
i
=0; i<
l
; i++)

1550 
„©uª_node
 *
x
 = 
¥ob
->x[
i
];

1551 
x
->
ödex
 != -1)

1553 
öd
 = 
x
->
ödex
-1;

1554 
x_•a˚
[
cﬁ_±r
[
öd
]].
ödex
 = 
i
+1;

1555 
x_•a˚
[
cﬁ_±r
[
öd
]].
vÆue
 = 
x
->value;

1556 
cﬁ_±r
[
öd
]++;

1557 
x
++;

1560 
i
=0; i<
n
; i++)

1561 
x_•a˚
[
cﬁ_±r
[
i
]].
ödex
 = -1;

1563 *
x_•a˚_ªt
 = 
x_•a˚
;

1565 
dñëe
 [] 
cﬁ_±r
;

1566 
	}
}

1570 
	$group_˛as£s
(c⁄° 
¥obÀm
 *
¥ob
, *
ƒ_˛ass_ªt
, **
œbñ_ªt
, **
°¨t_ªt
, **
cou¡_ªt
, *
≥rm
)

1572 
l
 = 
¥ob
->l;

1573 
max_ƒ_˛ass
 = 16;

1574 
ƒ_˛ass
 = 0;

1575 *
œbñ
 = 
	`MÆloc
(,
max_ƒ_˛ass
);

1576 *
cou¡
 = 
	`MÆloc
(,
max_ƒ_˛ass
);

1577 *
d©a_œbñ
 = 
	`MÆloc
(,
l
);

1578 
i
;

1580 
i
=0;i<
l
;i++)

1582 
this_œbñ
 = 
¥ob
->
y
[
i
];

1583 
j
;

1584 
j
=0;j<
ƒ_˛ass
;j++)

1586 if(
this_œbñ
 =
œbñ
[
j
])

1588 ++
cou¡
[
j
];

1592 
d©a_œbñ
[
i
] = 
j
;

1593 if(
j
 =
ƒ_˛ass
)

1595 if(
ƒ_˛ass
 =
max_ƒ_˛ass
)

1597 
max_ƒ_˛ass
 *= 2;

1598 
œbñ
 = (*)
	`ªÆloc
÷abñ,
max_ƒ_˛ass
*());

1599 
cou¡
 = (*)
	`ªÆloc
(cou¡,
max_ƒ_˛ass
*());

1601 
œbñ
[
ƒ_˛ass
] = 
this_œbñ
;

1602 
cou¡
[
ƒ_˛ass
] = 1;

1603 ++
ƒ_˛ass
;

1607 *
°¨t
 = 
	`MÆloc
(,
ƒ_˛ass
);

1608 
°¨t
[0] = 0;

1609 
i
=1;i<
ƒ_˛ass
;i++)

1610 
°¨t
[
i
] = sèπ[i-1]+
cou¡
[i-1];

1611 
i
=0;i<
l
;i++)

1613 
≥rm
[
°¨t
[
d©a_œbñ
[
i
]]] = i;

1614 ++
°¨t
[
d©a_œbñ
[
i
]];

1616 
°¨t
[0] = 0;

1617 
i
=1;i<
ƒ_˛ass
;i++)

1618 
°¨t
[
i
] = sèπ[i-1]+
cou¡
[i-1];

1620 *
ƒ_˛ass_ªt
 = 
ƒ_˛ass
;

1621 *
œbñ_ªt
 = 
œbñ
;

1622 *
°¨t_ªt
 = 
°¨t
;

1623 *
cou¡_ªt
 = 
cou¡
;

1624 
	`‰ì
(
d©a_œbñ
);

1625 
	}
}

1627 
	$åaö_⁄e
(c⁄° 
¥obÀm
 *
¥ob
, c⁄° 
∑ømëî
 *
∑øm
, *
w
, 
Cp
, 
Cn
)

1629 
ïs
=
∑øm
->eps;

1630 
pos
 = 0;

1631 
√g
 = 0;

1632 
i
=0;i<
¥ob
->
l
;i++)

1633 if(
¥ob
->
y
[
i
]==+1)

1634 
pos
++;

1635 
√g
 = 
¥ob
->
l
 - 
pos
;

1637 
fun˘i⁄
 *
fun_obj
=
NULL
;

1638 
∑øm
->
sﬁvî_ty≥
)

1640 
L2R_LR
:

1642 
fun_obj
=
√w
 
	`l2r_Ã_fun
(
¥ob
, 
Cp
, 
Cn
);

1643 
TRON
 
	`å⁄_obj
(
fun_obj
, 
ïs
*
	`mö
(
pos
,
√g
)/
¥ob
->
l
);

1644 
å⁄_obj
.
	`£t_¥öt_°rög
(
liblöór_¥öt_°rög
);

1645 
å⁄_obj
.
	`å⁄
(
w
);

1646 
dñëe
 
fun_obj
;

1649 
L2R_L2LOSS_SVC
:

1651 
fun_obj
=
√w
 
	`l2r_l2_svc_fun
(
¥ob
, 
Cp
, 
Cn
);

1652 
TRON
 
	`å⁄_obj
(
fun_obj
, 
ïs
*
	`mö
(
pos
,
√g
)/
¥ob
->
l
);

1653 
å⁄_obj
.
	`£t_¥öt_°rög
(
liblöór_¥öt_°rög
);

1654 
å⁄_obj
.
	`å⁄
(
w
);

1655 
dñëe
 
fun_obj
;

1658 
L2R_L2LOSS_SVC_DUAL
:

1659 
	`sﬁve_l2r_l1l2_svc
(
¥ob
, 
w
, 
ïs
, 
Cp
, 
Cn
, 
L2R_L2LOSS_SVC_DUAL
);

1661 
L2R_L1LOSS_SVC_DUAL
:

1662 
	`sﬁve_l2r_l1l2_svc
(
¥ob
, 
w
, 
ïs
, 
Cp
, 
Cn
, 
L2R_L1LOSS_SVC_DUAL
);

1664 
L1R_L2LOSS_SVC
:

1666 
¥obÀm
 
¥ob_cﬁ
;

1667 
„©uª_node
 *
x_•a˚
 = 
NULL
;

1668 
	`å™•o£
(
¥ob
, &
x_•a˚
 ,&
¥ob_cﬁ
);

1669 
	`sﬁve_l1r_l2_svc
(&
¥ob_cﬁ
, 
w
, 
ïs
*
	`mö
(
pos
,
√g
)/
¥ob
->
l
, 
Cp
, 
Cn
);

1670 
dñëe
 [] 
¥ob_cﬁ
.
y
;

1671 
dñëe
 [] 
¥ob_cﬁ
.
x
;

1672 
dñëe
 [] 
¥ob_cﬁ
.
W
;

1673 
dñëe
 [] 
x_•a˚
;

1676 
L1R_LR
:

1678 
¥obÀm
 
¥ob_cﬁ
;

1679 
„©uª_node
 *
x_•a˚
 = 
NULL
;

1680 
	`å™•o£
(
¥ob
, &
x_•a˚
 ,&
¥ob_cﬁ
);

1681 
	`sﬁve_l1r_Ã
(&
¥ob_cﬁ
, 
w
, 
ïs
*
	`mö
(
pos
,
√g
)/
¥ob
->
l
, 
Cp
, 
Cn
);

1682 
dñëe
 [] 
¥ob_cﬁ
.
y
;

1683 
dñëe
 [] 
¥ob_cﬁ
.
x
;

1684 
dñëe
 [] 
¥ob_cﬁ
.
W
;

1685 
dñëe
 [] 
x_•a˚
;

1689 
	`Ârötf
(
°dîr
, "Error: unknown solver_type\n");

1692 
	}
}

1697 
	$ªmove_zîo_weight
(
¥obÀm
 *
√w¥ob
, c⁄°ÖrobÀm *
¥ob
)

1699 
i
;

1700 
l
 = 0;

1701 
i
=0;i<
¥ob
->
l
;i++)

1702 if(
¥ob
->
W
[
i
] > 0Ë
l
++;

1703 *
√w¥ob
 = *
¥ob
;

1704 
√w¥ob
->
l
 =Ü;

1705 
√w¥ob
->
x
 = 
	`MÆloc
(
„©uª_node
*,
l
);

1706 
√w¥ob
->
y
 = 
	`MÆloc
(,
l
);

1707 
√w¥ob
->
W
 = 
	`MÆloc
(,
l
);

1709 
j
 = 0;

1710 
i
=0;i<
¥ob
->
l
;i++)

1711 if(
¥ob
->
W
[
i
] > 0)

1713 
√w¥ob
->
x
[
j
] = 
¥ob
->x[
i
];

1714 
√w¥ob
->
y
[
j
] = 
¥ob
->y[
i
];

1715 
√w¥ob
->
W
[
j
] = 
¥ob
->W[
i
];

1716 
j
++;

1718 
	}
}

1723 
modñ
* 
	$åaö
(c⁄° 
¥obÀm
 *
¥ob
, c⁄° 
∑ømëî
 *
∑øm
)

1725 
¥obÀm
 
√w¥ob
;

1726 
	`ªmove_zîo_weight
(&
√w¥ob
, 
¥ob
);

1727 
¥ob
 = &
√w¥ob
;

1729 
i
,
j
;

1730 
l
 = 
¥ob
->l;

1731 
n
 = 
¥ob
->n;

1732 
w_size
 = 
¥ob
->
n
;

1733 
modñ
 *
modñ_
 = 
	`MÆloc
(model,1);

1735 if(
¥ob
->
büs
>=0)

1736 
modñ_
->
ƒ_„©uª
=
n
-1;

1738 
modñ_
->
ƒ_„©uª
=
n
;

1739 
modñ_
->
∑øm
 = *param;

1740 
modñ_
->
büs
 = 
¥ob
->bias;

1742 
ƒ_˛ass
;

1743 *
œbñ
 = 
NULL
;

1744 *
°¨t
 = 
NULL
;

1745 *
cou¡
 = 
NULL
;

1746 *
≥rm
 = 
	`MÆloc
(,
l
);

1749 
	`group_˛as£s
(
¥ob
,&
ƒ_˛ass
,&
œbñ
,&
°¨t
,&
cou¡
,
≥rm
);

1751 
modñ_
->
ƒ_˛ass
=nr_class;

1752 
modñ_
->
œbñ
 = 
	`MÆloc
(,
ƒ_˛ass
);

1753 
i
=0;i<
ƒ_˛ass
;i++)

1754 
modñ_
->
œbñ
[
i
] =Üabel[i];

1757 *
weighãd_C
 = 
	`MÆloc
(, 
ƒ_˛ass
);

1758 
i
=0;i<
ƒ_˛ass
;i++)

1759 
weighãd_C
[
i
] = 
∑øm
->
C
;

1760 
i
=0;i<
∑øm
->
ƒ_weight
;i++)

1762 
j
=0;j<
ƒ_˛ass
;j++)

1763 if(
∑øm
->
weight_œbñ
[
i
] =
œbñ
[
j
])

1765 if(
j
 =
ƒ_˛ass
)

1766 
	`Ârötf
(
°dîr
,"w¨nög: cœs†œbñ %d s≥cifõd i¿weighài†nŸ found\n", 
∑øm
->
weight_œbñ
[
i
]);

1768 
weighãd_C
[
j
] *
∑øm
->
weight
[
i
];

1772 
„©uª_node
 **
x
 = 
	`MÆloc
(„©uª_nodê*,
l
);

1773 *
W
 = 
	`MÆloc
(,
l
);

1774 
i
=0;i<
l
;i++)

1776 
x
[
i
] = 
¥ob
->x[
≥rm
[i]];

1777 
W
[
i
] = 
¥ob
->W[
≥rm
[i]];

1780 
k
;

1781 
¥obÀm
 
sub_¥ob
;

1782 
sub_¥ob
.
l
 =Ü;

1783 
sub_¥ob
.
n
 =Ç;

1784 
sub_¥ob
.
x
 = 
	`MÆloc
(
„©uª_node
 *,sub_¥ob.
l
);

1785 
sub_¥ob
.
y
 = 
	`MÆloc
(,sub_¥ob.
l
);

1786 
sub_¥ob
.
W
 = 
	`MÆloc
(,sub_¥ob.
l
);

1788 
k
=0; k<
sub_¥ob
.
l
; k++)

1790 
sub_¥ob
.
x
[
k
] = x[k];

1791 
sub_¥ob
.
W
[
k
] = W[k];

1795 if(
∑øm
->
sﬁvî_ty≥
 =
MCSVM_CS
)

1797 
modñ_
->
w
=
	`MÆloc
(, 
n
*
ƒ_˛ass
);

1798 
i
=0;i<
ƒ_˛ass
;i++)

1799 
j
=
°¨t
[
i
];j<°¨t[i]+
cou¡
[i];j++)

1800 
sub_¥ob
.
y
[
j
] = 
i
;

1801 
Sﬁvî_MCSVM_CS
 
	`Sﬁvî
(&
sub_¥ob
, 
ƒ_˛ass
, 
weighãd_C
, 
∑øm
->
ïs
);

1802 
Sﬁvî
.
	`Sﬁve
(
modñ_
->
w
);

1806 if(
ƒ_˛ass
 == 2)

1808 
modñ_
->
w
=
	`MÆloc
(, 
w_size
);

1810 
e0
 = 
°¨t
[0]+
cou¡
[0];

1811 
k
=0;

1812 ; 
k
<
e0
; k++)

1813 
sub_¥ob
.
y
[
k
] = +1;

1814 ; 
k
<
sub_¥ob
.
l
; k++)

1815 
sub_¥ob
.
y
[
k
] = -1;

1817 
	`åaö_⁄e
(&
sub_¥ob
, 
∑øm
, &
modñ_
->
w
[0], 
weighãd_C
[0], weighted_C[1]);

1821 
modñ_
->
w
=
	`MÆloc
(, 
w_size
*
ƒ_˛ass
);

1822 *
w
=
	`MÆloc
(, 
w_size
);

1823 
i
=0;i<
ƒ_˛ass
;i++)

1825 
si
 = 
°¨t
[
i
];

1826 
ei
 = 
si
+
cou¡
[
i
];

1828 
k
=0;

1829 ; 
k
<
si
; k++)

1830 
sub_¥ob
.
y
[
k
] = -1;

1831 ; 
k
<
ei
; k++)

1832 
sub_¥ob
.
y
[
k
] = +1;

1833 ; 
k
<
sub_¥ob
.
l
; k++)

1834 
sub_¥ob
.
y
[
k
] = -1;

1836 
	`åaö_⁄e
(&
sub_¥ob
, 
∑øm
, 
w
, 
weighãd_C
[
i
],Ö¨am->
C
);

1838 
j
=0;j<
w_size
;j++)

1839 
modñ_
->
w
[
j
*
ƒ_˛ass
+
i
] = w[j];

1841 
	`‰ì
(
w
);

1846 
	`‰ì
(
x
);

1847 
	`‰ì
(
W
);

1848 
	`‰ì
(
œbñ
);

1849 
	`‰ì
(
°¨t
);

1850 
	`‰ì
(
cou¡
);

1851 
	`‰ì
(
≥rm
);

1852 
	`‰ì
(
sub_¥ob
.
x
);

1853 
	`‰ì
(
sub_¥ob
.
y
);

1854 
	`‰ì
(
sub_¥ob
.
W
);

1855 
	`‰ì
(
weighãd_C
);

1856 
	`‰ì
(
√w¥ob
.
x
);

1857 
	`‰ì
(
√w¥ob
.
y
);

1858 
	`‰ì
(
√w¥ob
.
W
);

1859  
modñ_
;

1860 
	}
}

1862 
	$de°roy_modñ
(
modñ
 *
modñ_
)

1864 if(
modñ_
->
w
 !
NULL
)

1865 
	`‰ì
(
modñ_
->
w
);

1866 if(
modñ_
->
œbñ
 !
NULL
)

1867 
	`‰ì
(
modñ_
->
œbñ
);

1868 
	`‰ì
(
modñ_
);

1869 
	}
}

1871 c⁄° *
	gsﬁvî_ty≥_èbÀ
[]=

1873 "L2R_LR", "L2R_L2LOSS_SVC_DUAL", "L2R_L2LOSS_SVC","L2R_L1LOSS_SVC_DUAL","MCSVM_CS", "L1R_L2LOSS_SVC","L1R_LR", 
NULL


1876 
	$ßve_modñ
(c⁄° *
modñ_fûe_«me
, c⁄° 
modñ
 *
modñ_
)

1878 
i
;

1879 
ƒ_„©uª
=
modñ_
->nr_feature;

1880 
n
;

1881 c⁄° 
∑ømëî
& 
∑øm
 = 
modñ_
->param;

1883 if(
modñ_
->
büs
>=0)

1884 
n
=
ƒ_„©uª
+1;

1886 
n
=
ƒ_„©uª
;

1887 
w_size
 = 
n
;

1888 
FILE
 *
Â
 = 
	`f›í
(
modñ_fûe_«me
,"w");

1889 if(
Â
==
NULL
)  -1;

1891 
ƒ_w
;

1892 if(
modñ_
->
ƒ_˛ass
==2 && modñ_->
∑øm
.
sﬁvî_ty≥
 !
MCSVM_CS
)

1893 
ƒ_w
=1;

1895 
ƒ_w
=
modñ_
->
ƒ_˛ass
;

1897 
	`Ârötf
(
Â
, "sﬁvî_ty≥ %s\n", 
sﬁvî_ty≥_èbÀ
[
∑øm
.
sﬁvî_ty≥
]);

1898 
	`Ârötf
(
Â
, "ƒ_˛as†%d\n", 
modñ_
->
ƒ_˛ass
);

1899 
	`Ârötf
(
Â
, "label");

1900 
i
=0; i<
modñ_
->
ƒ_˛ass
; i++)

1901 
	`Ârötf
(
Â
, " %d", 
modñ_
->
œbñ
[
i
]);

1902 
	`Ârötf
(
Â
, "\n");

1904 
	`Ârötf
(
Â
, "ƒ_„©uª %d\n", 
ƒ_„©uª
);

1906 
	`Ârötf
(
Â
, "bü†%.16g\n", 
modñ_
->
büs
);

1908 
	`Ârötf
(
Â
, "w\n");

1909 
i
=0; i<
w_size
; i++)

1911 
j
;

1912 
j
=0; j<
ƒ_w
; j++)

1913 
	`Ârötf
(
Â
, "%.16g ", 
modñ_
->
w
[
i
*
ƒ_w
+
j
]);

1914 
	`Ârötf
(
Â
, "\n");

1917 i‡(
	`„º‹
(
Â
Ë!0 || 
	`f˛o£
(fp) != 0)  -1;

1919 
	}
}

1921 
modñ
 *
	$lﬂd_modñ
(c⁄° *
modñ_fûe_«me
)

1923 
FILE
 *
Â
 = 
	`f›í
(
modñ_fûe_«me
,"r");

1924 if(
Â
==
NULL
)  NULL;

1926 
i
;

1927 
ƒ_„©uª
;

1928 
n
;

1929 
ƒ_˛ass
;

1930 
büs
;

1931 
modñ
 *
modñ_
 = 
	`MÆloc
(model,1);

1932 
∑ømëî
& 
∑øm
 = 
modñ_
->param;

1934 
modñ_
->
œbñ
 = 
NULL
;

1936 
cmd
[81];

1939 
	`fsˇnf
(
Â
,"%80s",
cmd
);

1940 if(
	`°rcmp
(
cmd
,"solver_type")==0)

1942 
	`fsˇnf
(
Â
,"%80s",
cmd
);

1943 
i
;

1944 
i
=0;
sﬁvî_ty≥_èbÀ
[i];i++)

1946 if(
	`°rcmp
(
sﬁvî_ty≥_èbÀ
[
i
],
cmd
)==0)

1948 
∑øm
.
sﬁvî_ty≥
=
i
;

1952 if(
sﬁvî_ty≥_èbÀ
[
i
] =
NULL
)

1954 
	`Ârötf
(
°dîr
,"unknown solverÅype.\n");

1955 
	`‰ì
(
modñ_
->
œbñ
);

1956 
	`‰ì
(
modñ_
);

1957  
NULL
;

1960 if(
	`°rcmp
(
cmd
,"nr_class")==0)

1962 
	`fsˇnf
(
Â
,"%d",&
ƒ_˛ass
);

1963 
modñ_
->
ƒ_˛ass
=nr_class;

1965 if(
	`°rcmp
(
cmd
,"nr_feature")==0)

1967 
	`fsˇnf
(
Â
,"%d",&
ƒ_„©uª
);

1968 
modñ_
->
ƒ_„©uª
=nr_feature;

1970 if(
	`°rcmp
(
cmd
,"bias")==0)

1972 
	`fsˇnf
(
Â
,"%lf",&
büs
);

1973 
modñ_
->
büs
=bias;

1975 if(
	`°rcmp
(
cmd
,"w")==0)

1979 if(
	`°rcmp
(
cmd
,"label")==0)

1981 
ƒ_˛ass
 = 
modñ_
->nr_class;

1982 
modñ_
->
œbñ
 = 
	`MÆloc
(,
ƒ_˛ass
);

1983 
i
=0;i<
ƒ_˛ass
;i++)

1984 
	`fsˇnf
(
Â
,"%d",&
modñ_
->
œbñ
[
i
]);

1988 
	`Ârötf
(
°dîr
,"unknow¿ãxàö modñ fûe: [%s]\n",
cmd
);

1989 
	`‰ì
(
modñ_
);

1990  
NULL
;

1994 
ƒ_„©uª
=
modñ_
->nr_feature;

1995 if(
modñ_
->
büs
>=0)

1996 
n
=
ƒ_„©uª
+1;

1998 
n
=
ƒ_„©uª
;

1999 
w_size
 = 
n
;

2000 
ƒ_w
;

2001 if(
ƒ_˛ass
==2 && 
∑øm
.
sﬁvî_ty≥
 !
MCSVM_CS
)

2002 
ƒ_w
 = 1;

2004 
ƒ_w
 = 
ƒ_˛ass
;

2006 
modñ_
->
w
=
	`MÆloc
(, 
w_size
*
ƒ_w
);

2007 
i
=0; i<
w_size
; i++)

2009 
j
;

2010 
j
=0; j<
ƒ_w
; j++)

2011 
	`fsˇnf
(
Â
, "%l‡", &
modñ_
->
w
[
i
*
ƒ_w
+
j
]);

2012 
	`fsˇnf
(
Â
, "\n");

2014 i‡(
	`„º‹
(
Â
Ë!0 || 
	`f˛o£
(ÂË!0Ë 
NULL
;

2016  
modñ_
;

2017 
	}
}

2019 
	$¥edi˘_vÆues
(c⁄° 
modñ
 *
modñ_
, c⁄° 
„©uª_node
 *
x
, *
dec_vÆues
)

2021 
idx
;

2022 
n
;

2023 if(
modñ_
->
büs
>=0)

2024 
n
=
modñ_
->
ƒ_„©uª
+1;

2026 
n
=
modñ_
->
ƒ_„©uª
;

2027 *
w
=
modñ_
->w;

2028 
ƒ_˛ass
=
modñ_
->nr_class;

2029 
i
;

2030 
ƒ_w
;

2031 if(
ƒ_˛ass
==2 && 
modñ_
->
∑øm
.
sﬁvî_ty≥
 !
MCSVM_CS
)

2032 
ƒ_w
 = 1;

2034 
ƒ_w
 = 
ƒ_˛ass
;

2036 c⁄° 
„©uª_node
 *
lx
=
x
;

2037 
i
=0;i<
ƒ_w
;i++)

2038 
dec_vÆues
[
i
] = 0;

2039 ; (
idx
=
lx
->
ödex
)!=-1;Üx++)

2042 if(
idx
<=
n
)

2043 
i
=0;i<
ƒ_w
;i++)

2044 
dec_vÆues
[
i
] +
w
[(
idx
-1)*
ƒ_w
+i]*
lx
->
vÆue
;

2047 if(
ƒ_˛ass
==2)

2048  (
dec_vÆues
[0]>0)?
modñ_
->
œbñ
[0]:model_->label[1];

2051 
dec_max_idx
 = 0;

2052 
i
=1;i<
ƒ_˛ass
;i++)

2054 if(
dec_vÆues
[
i
] > dec_vÆues[
dec_max_idx
])

2055 
dec_max_idx
 = 
i
;

2057  
modñ_
->
œbñ
[
dec_max_idx
];

2059 
	}
}

2061 
	$¥edi˘
(c⁄° 
modñ
 *
modñ_
, c⁄° 
„©uª_node
 *
x
)

2063 *
dec_vÆues
 = 
	`MÆloc
(, 
modñ_
->
ƒ_˛ass
);

2064 
œbñ
=
	`¥edi˘_vÆues
(
modñ_
, 
x
, 
dec_vÆues
);

2065 
	`‰ì
(
dec_vÆues
);

2066  
œbñ
;

2067 
	}
}

2069 
	$¥edi˘_¥obabûôy
(c⁄° 
modñ
 *
modñ_
, c⁄° 
„©uª_node
 *
x
, * 
¥ob_e°im©es
)

2071 if(
modñ_
->
∑øm
.
sﬁvî_ty≥
==
L2R_LR
)

2073 
i
;

2074 
ƒ_˛ass
=
modñ_
->nr_class;

2075 
ƒ_w
;

2076 if(
ƒ_˛ass
==2)

2077 
ƒ_w
 = 1;

2079 
ƒ_w
 = 
ƒ_˛ass
;

2081 
œbñ
=
	`¥edi˘_vÆues
(
modñ_
, 
x
, 
¥ob_e°im©es
);

2082 
i
=0;i<
ƒ_w
;i++)

2083 
¥ob_e°im©es
[
i
]=1/(1+
	`exp
(-prob_estimates[i]));

2085 if(
ƒ_˛ass
==2)

2086 
¥ob_e°im©es
[1]=1.-prob_estimates[0];

2089 
sum
=0;

2090 
i
=0; i<
ƒ_˛ass
; i++)

2091 
sum
+=
¥ob_e°im©es
[
i
];

2093 
i
=0; i<
ƒ_˛ass
; i++)

2094 
¥ob_e°im©es
[
i
]ırob_e°im©es[i]/
sum
;

2097  
œbñ
;

2101 
	}
}

2103 
	$de°roy_∑øm
(
∑ømëî
* 
∑øm
)

2105 if(
∑øm
->
weight_œbñ
 !
NULL
)

2106 
	`‰ì
(
∑øm
->
weight_œbñ
);

2107 if(
∑øm
->
weight
 !
NULL
)

2108 
	`‰ì
(
∑øm
->
weight
);

2109 
	}
}

2111 c⁄° *
	$check_∑ømëî
(c⁄° 
∑ømëî
 *
∑øm
)

2113 if(
∑øm
->
ïs
 <= 0)

2116 if(
∑øm
->
C
 <= 0)

2119 if(
∑øm
->
sﬁvî_ty≥
 !
L2R_LR


2120 && 
∑øm
->
sﬁvî_ty≥
 !
L2R_L2LOSS_SVC_DUAL


2121 && 
∑øm
->
sﬁvî_ty≥
 !
L2R_L2LOSS_SVC


2122 && 
∑øm
->
sﬁvî_ty≥
 !
L2R_L1LOSS_SVC_DUAL


2123 && 
∑øm
->
sﬁvî_ty≥
 !
MCSVM_CS


2124 && 
∑øm
->
sﬁvî_ty≥
 !
L1R_L2LOSS_SVC


2125 && 
∑øm
->
sﬁvî_ty≥
 !
L1R_LR
)

2128  
NULL
;

2129 
	}
}

2131 
	$¸oss_vÆid©i⁄
(c⁄° 
¥obÀm
 *
¥ob
, c⁄° 
∑ømëî
 *
∑øm
, 
ƒ_fﬁd
, *
èrgë
)

2133 
i
;

2134 *
fﬁd_°¨t
 = 
	`MÆloc
(,
ƒ_fﬁd
+1);

2135 
l
 = 
¥ob
->l;

2136 *
≥rm
 = 
	`MÆloc
(,
l
);

2138 
i
=0;i<
l
;i++Ë
≥rm
[i]=i;

2139 
i
=0;i<
l
;i++)

2141 
j
 = 
i
+
	`ønd
()%(
l
-i);

2142 
	`sw≠
(
≥rm
[
i
],≥rm[
j
]);

2144 
i
=0;i<=
ƒ_fﬁd
;i++)

2145 
fﬁd_°¨t
[
i
]=i*
l
/
ƒ_fﬁd
;

2147 
i
=0;i<
ƒ_fﬁd
;i++)

2149 
begö
 = 
fﬁd_°¨t
[
i
];

2150 
íd
 = 
fﬁd_°¨t
[
i
+1];

2151 
j
,
k
;

2152 
¥obÀm
 
sub¥ob
;

2154 
sub¥ob
.
büs
 = 
¥ob
->bias;

2155 
sub¥ob
.
n
 = 
¥ob
->n;

2156 
sub¥ob
.
l
 =Ü-(
íd
-
begö
);

2157 
sub¥ob
.
x
 = 
	`MÆloc
(
„©uª_node
*,sub¥ob.
l
);

2158 
sub¥ob
.
y
 = 
	`MÆloc
(,sub¥ob.
l
);

2159 
sub¥ob
.
W
 = 
	`MÆloc
(,sub¥ob.
l
);

2161 
k
=0;

2162 
j
=0;j<
begö
;j++)

2164 
sub¥ob
.
x
[
k
] = 
¥ob
->x[
≥rm
[
j
]];

2165 
sub¥ob
.
y
[
k
] = 
¥ob
->y[
≥rm
[
j
]];

2166 
sub¥ob
.
W
[
k
] = 
¥ob
->W[
≥rm
[
j
]];

2167 ++
k
;

2169 
j
=
íd
;j<
l
;j++)

2171 
sub¥ob
.
x
[
k
] = 
¥ob
->x[
≥rm
[
j
]];

2172 
sub¥ob
.
y
[
k
] = 
¥ob
->y[
≥rm
[
j
]];

2173 
sub¥ob
.
W
[
k
] = 
¥ob
->W[
≥rm
[
j
]];

2174 ++
k
;

2176 
modñ
 *
submodñ
 = 
	`åaö
(&
sub¥ob
,
∑øm
);

2177 
j
=
begö
;j<
íd
;j++)

2178 
èrgë
[
≥rm
[
j
]] = 
	`¥edi˘
(
submodñ
,
¥ob
->
x
[perm[j]]);

2179 
	`de°roy_modñ
(
submodñ
);

2180 
	`‰ì
(
sub¥ob
.
x
);

2181 
	`‰ì
(
sub¥ob
.
y
);

2182 
	`‰ì
(
sub¥ob
.
W
);

2184 
	`‰ì
(
fﬁd_°¨t
);

2185 
	`‰ì
(
≥rm
);

2186 
	}
}

2188 
	$gë_ƒ_„©uª
(c⁄° 
modñ
 *
modñ_
)

2190  
modñ_
->
ƒ_„©uª
;

2191 
	}
}

2193 
	$gë_ƒ_˛ass
(c⁄° 
modñ
 *
modñ_
)

2195  
modñ_
->
ƒ_˛ass
;

2196 
	}
}

2198 
	$gë_œbñs
(c⁄° 
modñ
 *
modñ_
, * 
œbñ
)

2200 i‡(
modñ_
->
œbñ
 !
NULL
)

2201 
i
=0;i<
modñ_
->
ƒ_˛ass
;i++)

2202 
œbñ
[
i
] = 
modñ_
->label[i];

2203 
	}
}

	@NaN/src/linear.h

27 #i‚de‡
_LIBLINEAR_H


28 
	#_LIBLINEAR_H


	)

30 #ifde‡
__˝lu•lus


34 
	s„©uª_node


36 
ödex
;

37 
vÆue
;

40 
	s¥obÀm


42 
l
, 
n
;

43 *
y
;

44 
„©uª_node
 **
x
;

45 
büs
;

46 *
W
;

49 íum { 
L2R_LR
, 
L2R_L2LOSS_SVC_DUAL
, 
L2R_L2LOSS_SVC
, 
L2R_L1LOSS_SVC_DUAL
, 
MCSVM_CS
, 
L1R_L2LOSS_SVC
, 
L1R_LR
 };

51 
	s∑ømëî


53 
sﬁvî_ty≥
;

56 
ïs
;

57 
C
;

58 
ƒ_weight
;

59 *
weight_œbñ
;

60 * 
weight
;

63 
	smodñ


65 
∑ømëî
 
∑øm
;

66 
ƒ_˛ass
;

67 
ƒ_„©uª
;

68 *
w
;

69 *
œbñ
;

70 
büs
;

73 
modñ
* 
åaö
(c⁄° 
¥obÀm
 *
¥ob
, c⁄° 
∑ømëî
 *
∑øm
);

74 
¸oss_vÆid©i⁄
(c⁄° 
¥obÀm
 *
¥ob
, c⁄° 
∑ømëî
 *
∑øm
, 
ƒ_fﬁd
, *
èrgë
);

76 
¥edi˘_vÆues
(c⁄° 
modñ
 *
modñ_
, c⁄° 
„©uª_node
 *
x
, * 
dec_vÆues
);

77 
¥edi˘
(c⁄° 
modñ
 *
modñ_
, c⁄° 
„©uª_node
 *
x
);

78 
¥edi˘_¥obabûôy
(c⁄° 
modñ
 *
modñ_
, c⁄° 
„©uª_node
 *
x
, * 
¥ob_e°im©es
);

80 
ßve_modñ
(c⁄° *
modñ_fûe_«me
, c⁄° 
modñ
 *
modñ_
);

81 
modñ
 *
lﬂd_modñ
(c⁄° *
modñ_fûe_«me
);

83 
gë_ƒ_„©uª
(c⁄° 
modñ
 *
modñ_
);

84 
gë_ƒ_˛ass
(c⁄° 
modñ
 *
modñ_
);

85 
gë_œbñs
(c⁄° 
modñ
 *
modñ_
, * 
œbñ
);

87 
de°roy_modñ
(
modñ
 *
modñ_
);

88 
de°roy_∑øm
(
∑ømëî
 *
∑øm
);

89 c⁄° *
check_∑ømëî
(c⁄° 
∑ømëî
 *
∑øm
);

90 (*
liblöór_¥öt_°rög
) (const *);

92 #ifde‡
__˝lu•lus


	@NaN/src/linear_model_matlab.c

28 
	~<°dlib.h
>

29 
	~<°rög.h
>

30 
	~"löór.h
"

32 
	~"mex.h
"

34 #ifde‡
tmwty≥s_h


35 #i‡(
MX_API_VER
<=0x07020000)

36 
	tmwSize
;

40 
	#MÆloc
(
ty≥
,
n
Ë—y≥ *)
	`mÆloc
(“)*—y≥))

	)

42 
	#NUM_OF_RETURN_FIELD
 6

	)

44 c⁄° *
	gfõld_«mes
[] = {

53 #ifde‡
__˝lu•lus


57 c⁄° *
modñ_to_m©œb_°ru˘uª
(
mxAºay
 *
∂hs
[], 
modñ
 *
modñ_
)

59 
size_t
 
i
;

60 
size_t
 
ƒ_w
;

61 *
±r
;

62 
mxAºay
 *
ªtu∫_modñ
, **
rhs
;

63 
out_id
 = 0;

64 
size_t
 
n
, 
w_size
;

66 
rhs
 = (
mxAºay
 **)
mxMÆloc
((mxAºay *)*
NUM_OF_RETURN_FIELD
);

70 
rhs
[
out_id
] = 
mxCª©eDoubÀM©rix
(1, 1, 
mxREAL
);

71 
±r
 = 
mxGëPr
(
rhs
[
out_id
]);

72 
±r
[0] = 
modñ_
->
∑øm
.
sﬁvî_ty≥
;

73 
out_id
++;

76 
rhs
[
out_id
] = 
mxCª©eDoubÀM©rix
(1, 1, 
mxREAL
);

77 
±r
 = 
mxGëPr
(
rhs
[
out_id
]);

78 
±r
[0] = 
modñ_
->
ƒ_˛ass
;

79 
out_id
++;

81 if(
modñ_
->
ƒ_˛ass
==2 && modñ_->
∑øm
.
sﬁvî_ty≥
 !
MCSVM_CS
)

82 
ƒ_w
=1;

84 
ƒ_w
=
modñ_
->
ƒ_˛ass
;

87 
rhs
[
out_id
] = 
mxCª©eDoubÀM©rix
(1, 1, 
mxREAL
);

88 
±r
 = 
mxGëPr
(
rhs
[
out_id
]);

89 
±r
[0] = 
modñ_
->
ƒ_„©uª
;

90 
out_id
++;

93 
rhs
[
out_id
] = 
mxCª©eDoubÀM©rix
(1, 1, 
mxREAL
);

94 
±r
 = 
mxGëPr
(
rhs
[
out_id
]);

95 
±r
[0] = 
modñ_
->
büs
;

96 
out_id
++;

98 if(
modñ_
->
büs
>=0)

99 
n
=
modñ_
->
ƒ_„©uª
+1;

101 
n
=
modñ_
->
ƒ_„©uª
;

103 
w_size
 = 
n
;

105 if(
modñ_
->
œbñ
)

107 
rhs
[
out_id
] = 
mxCª©eDoubÀM©rix
(
modñ_
->
ƒ_˛ass
, 1, 
mxREAL
);

108 
±r
 = 
mxGëPr
(
rhs
[
out_id
]);

109 
i
 = 0; i < 
modñ_
->
ƒ_˛ass
; i++)

110 
±r
[
i
] = 
modñ_
->
œbñ
[i];

113 
rhs
[
out_id
] = 
mxCª©eDoubÀM©rix
(0, 0, 
mxREAL
);

114 
out_id
++;

117 
rhs
[
out_id
] = 
mxCª©eDoubÀM©rix
(
ƒ_w
, 
w_size
, 
mxREAL
);

118 
±r
 = 
mxGëPr
(
rhs
[
out_id
]);

119 
i
 = 0; i < 
w_size
*
ƒ_w
; i++)

120 
±r
[
i
]=
modñ_
->
w
[i];

121 
out_id
++;

124 
ªtu∫_modñ
 = 
mxCª©eSåu˘M©rix
(1, 1, 
NUM_OF_RETURN_FIELD
, 
fõld_«mes
);

127 
i
 = 0; i < 
NUM_OF_RETURN_FIELD
; i++)

128 
mxSëFõld
(
ªtu∫_modñ
,0,
fõld_«mes
[
i
],
mxDu∂iˇãAºay
(
rhs
[i]));

130 
∂hs
[0] = 
ªtu∫_modñ
;

131 
mxFªe
(
rhs
);

133  
NULL
;

136 c⁄° *
m©œb_m©rix_to_modñ
(
modñ
 *
modñ_
, c⁄° 
mxAºay
 *
m©œb_°ru˘
)

138 
size_t
 
i
, 
num_of_fõlds
;

139 
size_t
 
ƒ_w
;

140 *
±r
;

141 
id
 = 0;

142 
size_t
 
n
, 
w_size
;

143 
mxAºay
 **
rhs
;

145 
num_of_fõlds
 = 
mxGëNumbîOfFõlds
(
m©œb_°ru˘
);

146 
rhs
 = (
mxAºay
 **Ë
mxMÆloc
((mxAºay *)*
num_of_fõlds
);

148 
i
=0;i<
num_of_fõlds
;i++)

149 
rhs
[
i
] = 
mxGëFõldByNumbî
(
m©œb_°ru˘
, 0, i);

151 
modñ_
->
ƒ_˛ass
=0;

152 
ƒ_w
=0;

153 
modñ_
->
ƒ_„©uª
=0;

154 
modñ_
->
w
=
NULL
;

155 
modñ_
->
œbñ
=
NULL
;

158 
±r
 = 
mxGëPr
(
rhs
[
id
]);

159 
modñ_
->
∑øm
.
sﬁvî_ty≥
 = ()
±r
[0];

160 
id
++;

163 
±r
 = 
mxGëPr
(
rhs
[
id
]);

164 
modñ_
->
ƒ_˛ass
 = ()
±r
[0];

165 
id
++;

167 if(
modñ_
->
ƒ_˛ass
==2 && modñ_->
∑øm
.
sﬁvî_ty≥
 !
MCSVM_CS
)

168 
ƒ_w
=1;

170 
ƒ_w
=
modñ_
->
ƒ_˛ass
;

173 
±r
 = 
mxGëPr
(
rhs
[
id
]);

174 
modñ_
->
ƒ_„©uª
 = ()
±r
[0];

175 
id
++;

178 
±r
 = 
mxGëPr
(
rhs
[
id
]);

179 
modñ_
->
büs
 = ()
±r
[0];

180 
id
++;

182 if(
modñ_
->
büs
>=0)

183 
n
=
modñ_
->
ƒ_„©uª
+1;

185 
n
=
modñ_
->
ƒ_„©uª
;

186 
w_size
 = 
n
;

188 
±r
 = 
mxGëPr
(
rhs
[
id
]);

189 
modñ_
->
œbñ
=
MÆloc
(, modñ_->
ƒ_˛ass
);

190 
i
=0; i<
modñ_
->
ƒ_˛ass
; i++)

191 
modñ_
->
œbñ
[
i
]=()
±r
[i];

192 
id
++;

194 
±r
 = 
mxGëPr
(
rhs
[
id
]);

195 
modñ_
->
w
=
MÆloc
(, 
w_size
*
ƒ_w
);

196 
i
 = 0; i < 
w_size
*
ƒ_w
; i++)

197 
modñ_
->
w
[
i
]=
±r
[i];

198 
id
++;

199 
mxFªe
(
rhs
);

201  
NULL
;

204 #ifde‡
__˝lu•lus


	@NaN/src/linear_model_matlab.h

28 #ifde‡
__˝lu•lus


32 c⁄° *
modñ_to_m©œb_°ru˘uª
(
mxAºay
 *
∂hs
[], 
modñ
 *
modñ_
);

33 c⁄° *
m©œb_m©rix_to_modñ
(
modñ
 *
modñ_
, c⁄° 
mxAºay
 *
m©œb_°ru˘
);

35 #ifde‡
__˝lu•lus


	@NaN/src/predict.c

27 
	~<°dio.h
>

28 
	~<°dlib.h
>

29 
	~<°rög.h
>

30 
	~"löór.h
"

32 
	~"mex.h
"

33 
	~"löór_modñ_m©œb.h
"

35 #ifde‡
tmwty≥s_h


36 #i‡(
MX_API_VER
<=0x07020000)

37 
	tmwSize
;

41 
	#CMD_LEN
 2048

	)

43 
	#MÆloc
(
ty≥
,
n
Ë—y≥ *)
	`mÆloc
(“)*—y≥))

	)

45 
	gcﬁ_f‹m©_Êag
;

47 
	$ªad_•¨£_ö°™˚
(c⁄° 
mxAºay
 *
¥hs
, 
ödex
, 
„©uª_node
 *
x
, 
„©uª_numbî
, 
büs
)

49 
i
, 
j
, 
low
, 
high
;

50 
mwIndex
 *
ú
, *
jc
;

51 *
ßm∂es
;

53 
ú
 = 
	`mxGëIr
(
¥hs
);

54 
jc
 = 
	`mxGëJc
(
¥hs
);

55 
ßm∂es
 = 
	`mxGëPr
(
¥hs
);

58 
j
 = 0;

59 
low
 = (Ë
jc
[
ödex
], 
high
 = () jc[index+1];

60 
i
=
low
; i<
high
 && (Ë(
ú
[i])<
„©uª_numbî
; i++)

62 
x
[
j
].
ödex
 = (Ë
ú
[
i
]+1;

63 
x
[
j
].
vÆue
 = 
ßm∂es
[
i
];

64 
j
++;

66 if(
büs
>=0)

68 
x
[
j
].
ödex
 = 
„©uª_numbî
+1;

69 
x
[
j
].
vÆue
 = 
büs
;

70 
j
++;

72 
x
[
j
].
ödex
 = -1;

73 
	}
}

75 
	$Áke_™swî
(
mxAºay
 *
∂hs
[])

77 
∂hs
[0] = 
	`mxCª©eDoubÀM©rix
(0, 0, 
mxREAL
);

78 
∂hs
[1] = 
	`mxCª©eDoubÀM©rix
(0, 0, 
mxREAL
);

79 
∂hs
[2] = 
	`mxCª©eDoubÀM©rix
(0, 0, 
mxREAL
);

80 
	}
}

82 
	$do_¥edi˘
(
mxAºay
 *
∂hs
[], c⁄° mxAºay *
¥hs
[], 
modñ
 *
modñ_
, c⁄° 
¥edi˘_¥obabûôy_Êag
)

84 
œbñ_ve˘‹_row_num
, 
œbñ_ve˘‹_cﬁ_num
;

85 
„©uª_numbî
, 
ã°ög_ö°™˚_numbî
;

86 
ö°™˚_ödex
;

87 *
±r_ö°™˚
, *
±r_œbñ
, *
±r_¥edi˘_œbñ
;

88 *
±r_¥ob_e°im©es
, *
±r_dec_vÆues
, *
±r
;

89 
„©uª_node
 *
x
;

90 
mxAºay
 *
µlhs
[1];

92 
c‹ª˘
 = 0;

93 
tŸÆ
 = 0;

95 
ƒ_˛ass
=
	`gë_ƒ_˛ass
(
modñ_
);

96 
ƒ_w
;

97 *
¥ob_e°im©es
=
NULL
;

99 if(
ƒ_˛ass
==2 && 
modñ_
->
∑øm
.
sﬁvî_ty≥
!=
MCSVM_CS
)

100 
ƒ_w
=1;

102 
ƒ_w
=
ƒ_˛ass
;

105 
„©uª_numbî
 = 
	`gë_ƒ_„©uª
(
modñ_
);

106 
ã°ög_ö°™˚_numbî
 = (Ë
	`mxGëM
(
¥hs
[1]);

107 if(
cﬁ_f‹m©_Êag
)

109 
„©uª_numbî
 = (Ë
	`mxGëM
(
¥hs
[1]);

110 
ã°ög_ö°™˚_numbî
 = (Ë
	`mxGëN
(
¥hs
[1]);

113 
œbñ_ve˘‹_row_num
 = (Ë
	`mxGëM
(
¥hs
[0]);

114 
œbñ_ve˘‹_cﬁ_num
 = (Ë
	`mxGëN
(
¥hs
[0]);

116 if(
œbñ_ve˘‹_row_num
!=
ã°ög_ö°™˚_numbî
)

118 
	`mexPrötf
("Length ofÜabel vector doesÇot match # of instances.\n");

119 
	`Áke_™swî
(
∂hs
);

122 if(
œbñ_ve˘‹_cﬁ_num
!=1)

124 
	`mexPrötf
("label (1stárgument) should beá vector (# of column is 1).\n");

125 
	`Áke_™swî
(
∂hs
);

129 
±r_ö°™˚
 = 
	`mxGëPr
(
¥hs
[1]);

130 
±r_œbñ
 = 
	`mxGëPr
(
¥hs
[0]);

133 if(
	`mxIsS∑r£
(
¥hs
[1]))

135 if(
cﬁ_f‹m©_Êag
)

137 
µlhs
[0] = (
mxAºay
 *)
¥hs
[1];

141 
mxAºay
 *
µrhs
[1];

142 
µrhs
[0] = 
	`mxDu∂iˇãAºay
(
¥hs
[1]);

143 if(
	`mexCÆlMATLAB
(1, 
µlhs
, 1, 
µrhs
, "transpose"))

145 
	`mexPrötf
("Error: cannotÅransposeÅesting instance matrix\n");

146 
	`Áke_™swî
(
∂hs
);

152 
	`mexPrötf
("Testing_instance_matrix must be sparse\n");

155 
¥ob_e°im©es
 = 
	`MÆloc
(, 
ƒ_˛ass
);

157 
∂hs
[0] = 
	`mxCª©eDoubÀM©rix
(
ã°ög_ö°™˚_numbî
, 1, 
mxREAL
);

158 if(
¥edi˘_¥obabûôy_Êag
)

159 
∂hs
[2] = 
	`mxCª©eDoubÀM©rix
(
ã°ög_ö°™˚_numbî
, 
ƒ_˛ass
, 
mxREAL
);

161 
∂hs
[2] = 
	`mxCª©eDoubÀM©rix
(
ã°ög_ö°™˚_numbî
, 
ƒ_w
, 
mxREAL
);

163 
±r_¥edi˘_œbñ
 = 
	`mxGëPr
(
∂hs
[0]);

164 
±r_¥ob_e°im©es
 = 
	`mxGëPr
(
∂hs
[2]);

165 
±r_dec_vÆues
 = 
	`mxGëPr
(
∂hs
[2]);

166 
x
 = 
	`MÆloc
(
„©uª_node
, 
„©uª_numbî
+2);

167 
ö°™˚_ödex
=0;ö°™˚_ödex<
ã°ög_ö°™˚_numbî
;instance_index++)

169 
i
;

170 
èrgë
,
v
;

172 
èrgë
 = 
±r_œbñ
[
ö°™˚_ödex
];

175 
	`ªad_•¨£_ö°™˚
(
µlhs
[0], 
ö°™˚_ödex
, 
x
, 
„©uª_numbî
, 
modñ_
->
büs
);

177 if(
¥edi˘_¥obabûôy_Êag
)

179 
v
 = 
	`¥edi˘_¥obabûôy
(
modñ_
, 
x
, 
¥ob_e°im©es
);

180 
±r_¥edi˘_œbñ
[
ö°™˚_ödex
] = 
v
;

181 
i
=0;i<
ƒ_˛ass
;i++)

182 
±r_¥ob_e°im©es
[
ö°™˚_ödex
 + 
i
 * 
ã°ög_ö°™˚_numbî
] = 
¥ob_e°im©es
[i];

186 *
dec_vÆues
 = 
	`MÆloc
(, 
ƒ_˛ass
);

187 
v
 = 
	`¥edi˘
(
modñ_
, 
x
);

188 
±r_¥edi˘_œbñ
[
ö°™˚_ödex
] = 
v
;

190 
	`¥edi˘_vÆues
(
modñ_
, 
x
, 
dec_vÆues
);

191 
i
=0;i<
ƒ_w
;i++)

192 
±r_dec_vÆues
[
ö°™˚_ödex
 + 
i
 * 
ã°ög_ö°™˚_numbî
] = 
dec_vÆues
[i];

193 
	`‰ì
(
dec_vÆues
);

196 if(
v
 =
èrgë
)

197 ++
c‹ª˘
;

198 ++
tŸÆ
;

200 
	`mexPrötf
("Accuøcy = %g%% (%d/%d)\n", (Ë
c‹ª˘
/
tŸÆ
*100,correct,total);

203 
∂hs
[1] = 
	`mxCª©eDoubÀM©rix
(1, 1, 
mxREAL
);

204 
±r
 = 
	`mxGëPr
(
∂hs
[1]);

205 
±r
[0] = (Ë
c‹ª˘
/
tŸÆ
*100;

207 
	`‰ì
(
x
);

208 if(
¥ob_e°im©es
 !
NULL
)

209 
	`‰ì
(
¥ob_e°im©es
);

210 
	}
}

212 
	$exô_wôh_hñp
()

214 
	`mexPrötf
(

221 
	}
}

223 
	$mexFun˘i⁄
–
∆hs
, 
mxAºay
 *
∂hs
[],

224 
ƒhs
, c⁄° 
mxAºay
 *
¥hs
[] )

226 
¥ob_e°im©e_Êag
 = 0;

227 
modñ
 *
modñ_
;

228 
cmd
[
CMD_LEN
];

229 
cﬁ_f‹m©_Êag
 = 0;

231 if(
ƒhs
 > 5 ||Çrhs < 3)

233 
	`exô_wôh_hñp
();

234 
	`Áke_™swî
(
∂hs
);

237 if(
ƒhs
 == 5)

239 
	`mxGëSåög
(
¥hs
[4], 
cmd
, 
	`mxGëN
(prhs[4])+1);

240 if(
	`°rcmp
(
cmd
, "col") == 0)

242 
cﬁ_f‹m©_Êag
 = 1;

246 if(!
	`mxIsDoubÀ
(
¥hs
[0]) || !mxIsDouble(prhs[1])) {

247 
	`mexPrötf
("Error:Üabel vectoránd instance matrix must be double\n");

248 
	`Áke_™swî
(
∂hs
);

252 if(
	`mxIsSåu˘
(
¥hs
[2]))

254 c⁄° *
îr‹_msg
;

257 if(
ƒhs
>=4)

259 
i
, 
¨gc
 = 1;

260 *
¨gv
[
CMD_LEN
/2];

263 
	`mxGëSåög
(
¥hs
[3], 
cmd
, 
	`mxGëN
(prhs[3]) + 1);

264 if((
¨gv
[
¨gc
] = 
	`°πok
(
cmd
, " ")Ë!
NULL
)

265 (
¨gv
[++
¨gc
] = 
	`°πok
(
NULL
, " ")) != NULL)

268 
i
=1;i<
¨gc
;i++)

270 if(
¨gv
[
i
][0] != '-') ;

271 if(++
i
>=
¨gc
)

273 
	`exô_wôh_hñp
();

274 
	`Áke_™swî
(
∂hs
);

277 
¨gv
[
i
-1][1])

280 
¥ob_e°im©e_Êag
 = 
	`©oi
(
¨gv
[
i
]);

283 
	`mexPrötf
("unknown option\n");

284 
	`exô_wôh_hñp
();

285 
	`Áke_™swî
(
∂hs
);

291 
modñ_
 = 
	`MÆloc
(
modñ
, 1);

292 
îr‹_msg
 = 
	`m©œb_m©rix_to_modñ
(
modñ_
, 
¥hs
[2]);

293 if(
îr‹_msg
)

295 
	`mexPrötf
("Eº‹: c™'àªad modñ: %s\n", 
îr‹_msg
);

296 
	`de°roy_modñ
(
modñ_
);

297 
	`Áke_™swî
(
∂hs
);

301 if(
¥ob_e°im©e_Êag
)

303 if(
modñ_
->
∑øm
.
sﬁvî_ty≥
!=
L2R_LR
)

305 
	`mexPrötf
("probability output is only supported forÜogisticÑegression\n");

306 
¥ob_e°im©e_Êag
=0;

310 if(
	`mxIsS∑r£
(
¥hs
[1]))

311 
	`do_¥edi˘
(
∂hs
, 
¥hs
, 
modñ_
, 
¥ob_e°im©e_Êag
);

314 
	`mexPrötf
("Testing_instance_matrix must be sparse\n");

315 
	`Áke_™swî
(
∂hs
);

319 
	`de°roy_modñ
(
modñ_
);

323 
	`mexPrötf
("model file should beá structárray\n");

324 
	`Áke_™swî
(
∂hs
);

328 
	}
}

	@NaN/src/str2array.cpp

45 
	~<˘y≥.h
>

46 
	~<m©h.h
>

47 
	~<°döt.h
>

48 
	~<°rög.h
>

49 
	~"mex.h
"

51 #ifde‡
tmwty≥s_h


52 #i‡(
MX_API_VER
<=0x07020000)

53 
	tmwSize
;

58 
	$°r2vÆ
(*
s
, *
r
, *
i
)

75 *
íd±r
 = 
NULL
;

76 
vÆ
 = 
	`°πod
(
s
, &
íd±r
);

78 
	`is•a˚
(*
íd±r
))Éndptr++;

79 #ifde‡
DEBUG


80 
	`mexPrötf
("123<%s>\t,%f,\t[%s]\n",
s
,
vÆ
,
íd±r
);

82 i‡(!*
íd±r
) {

84 *
r
 = 
vÆ
;

87 i‡((*
íd±r
=='+') || (*endptr=='-')) {

89 
sgn
 = (*
íd±r
=='+') ? 1.0 : -1.0;

90 
ivÆ
;

91 
	`is•a˚
(*(++
íd±r
)));

93 i‡(*
íd±r
=='i') {

95 
	`is•a˚
(*(++
íd±r
)));

97 i‡(*
íd±r
=='*') {

98 
ivÆ
 = 
	`°πod
(
íd±r
+1, &endptr);

99 i‡(*
íd±r
 && !
	`is•a˚
(*endptr)) {

103 *
r
 = 
vÆ
;

104 *
i
 = 
sgn
*
ivÆ
;

113 
ivÆ
 = 
	`°πod
(
íd±r
, &endptr);

114 i‡(*
íd±r
 != 'i') (0);

115 
íd±r
++;

116 *
íd±r
) {

117 i‡(!
	`is•a˚
(*
íd±r
)) (0);

118 
íd±r
++;

120 *
r
 = 
vÆ
;

121 *
i
 = 
sgn
*
ivÆ
;

130 
	}
}

134 
	$mexFun˘i⁄
(

135 
∆hs
,

136 
mxAºay
 *
∂hs
[],

137 
ƒhs
,

138 c⁄° 
mxAºay
 *
¥hs
[]

142 *
s
 = 
NULL
;

143 c⁄° *
cdñim
 = "\x09,";

144 c⁄° *
rdñim
 = "\x0a;";

145 c⁄° *
ddñim
 = 
NULL
;

146 c⁄° *
vÆid_dñim
 = " ()[]{},;:\"|/\x21\x22\x09\0x0a\0x0b\0x0c\0x0d\x00";

147 
uöt8_t
 *
u
;

148 
size_t
 
¶í
 = 0,
k
;

149 
size_t
 
maxcﬁ
=0, 
maxrow
=0, 
ƒ
, 
nc
;

151 i‡(
ƒhs
<1) {

152 
	`mexPrötf
(" STR2ARRAY.MEX converts delimiterÅext files intoárrays ofÇumericsánd cell-strings\n");

153 
	`mexPrötf
(" STR2ARRAY.MEX converts delimiterÅext files intoÇumericárrays\n");

154 
	`mexPrötf
(" It fixesáÖroblem ofÅhe old STR2DOUBLE discussed here: http://www-old.cae.wisc.edu/pipermail/help-octave/2007-December/007325.html\n");

155 
	`mexPrötf
("átávoids usingÅhe insecure STR2NUM using EVAL\n");

156 
	`mexPrötf
("\n Usage of STR2ARRAY:\n");

157 
	`mexPrötf
("\t[...] = STR2ARRAY(s)\n");

158 
	`mexPrötf
("\t[...] = STR2ARRAY(sa)\n");

159 
	`mexPrötf
("\t[...] = STR2ARRAY(s,cdelim)\n");

160 
	`mexPrötf
("\t[...] = STR2ARRAY(s,cdelim,rdelim)\n");

161 
	`mexPrötf
("\t[...] = STR2ARRAY(s,cdelim,rdelim,ddelim)\n");

162 
	`mexPrötf
("\t[num,status,strarray] = STR2ARRAY(...)\n");

163 
	`mexPrötf
(" Input:\n\ts\tstring\n\tsa\tcellárray of strings\n\tcdelim\tlist of column delimiters (default: \"<Tab>,\"\n\trdelim\tlist ofÑow delimiter (defautlt: \"<LF><CR>;\")");

164 
	`mexPrötf
("\n\tddelim\tdecimal delimiter (default: \".\"). This is useful if decimal delimiter isá comma (e.g.áfter ExcelÉxport in Europe)\n");

165 
	`mexPrötf
(" Output:\n\tnum\tnumericárray\n\tstatus\tflag failing conversion\n\tstrarray\tcellárray of strings contains strings of failed conversions\n");

166 
	`mexPrötf
("\nExamples:\n\tSTR2ARRAY('4.12')\n\tSTR2ARRAY('1.2 - 3.4e2i') complexÇumbers\n\tSTR2ARRAY('101.01 , 0-i4; 1.2 - i * 3.4,ábc')\n\tSTR2ARRAY({'101.01', '0-i4'; '1.2 - i * 3.4', 'abc'})\n\tSTR2ARRAY('1,2;a,b,c;3,4')\n");

167 
	`mexPrötf
("\tSTR2ARRAY('1;2,3;4',';',',')ÉxchangeÑow-ánd column delimiter\n\tSTR2ARRAY('1,200 4;3,400 5',' ',';',',')Ñeplace decimal delimter\n");

173 i‡((
ƒhs
==1Ë&& 
	`mxIsCñl
(
¥hs
[0])) {

175 
maxrow
 = 
	`mxGëM
(
¥hs
[0]);

176 
maxcﬁ
 = 
	`mxGëN
(
¥hs
[0]);

179 i‡(
∆hs
>2Ë
∂hs
[2] = 
	`mxCª©eCñlM©rix
(
maxrow
, 
maxcﬁ
);

180 
uöt8_t
 *
v
 = 
NULL
;

181 i‡(
∆hs
>1) {

182 
∂hs
[1] = 
	`mxCª©eLogiˇlM©rix
(
maxrow
, 
maxcﬁ
);

183 
v
 = (
uöt8_t
*)
	`mxGëD©a
(
∂hs
[1]);

184 
	`mem£t
(
v
, 1, 
maxrow
*
maxcﬁ
);

186 
∂hs
[0] = 
	`mxCª©eDoubÀM©rix
(
maxrow
, 
maxcﬁ
, 
mxREAL
);

187 *
o
 = (*)
	`mxGëD©a
(
∂hs
[0]);

188 *
oi

NULL
;

189 
k
=0; k<
maxrow
*
maxcﬁ
; k++) {

190 
o
[
k
] = 0.0/0.0;

192 
k
 = 0; k < 
maxrow
*
maxcﬁ
; k++) {

193 
ivÆ
;

194 *
s
 = 
	`mxAºayToSåög
(
	`mxGëCñl
(
¥hs
[0],
k
));

195 i‡(
s
==
NULL
) {

196 
mxAºay
 *
a
 = 
	`mxGëCñl
(
¥hs
[0],
k
);

203 
typ
 = 
	`°r2vÆ
(
s
, 
o
+
k
, &
ivÆ
);

204 i‡((
∆hs
>2Ë&& (
typ
==0)Ë
	`mxSëCñl
(
∂hs
[2], (
mwSize
)
k
, 
	`mxCª©eSåög
(
s
));

205 i‡((
∆hs
>1Ë&& (
typ
> 0)Ë
v
[
k
] = 0;

206 i‡(
typ
==2) {

207 i‡(
	`mxGëPi
(
∂hs
[0])==
NULL
) {

208 
oi
 = (*Ë
	`mxCÆloc
(
maxrow
*
maxcﬁ
, ());

209 
	`mxSëPi
(
∂hs
[0], 
oi
);

211 
oi
[
k
] = 
ivÆ
;

219 i‡(
ƒhs
>0) {

220 i‡(
	`mxIsCh¨
(
¥hs
[0])) {

221 
s
 = 
	`mxAºayToSåög
(
¥hs
[0]);

222 
¶í
 = 
	`mxGëNumbîOfEÀmíts
(
¥hs
[0]);

225 
	`mexEºMsgTxt
("arg1 isÇotá charárray");

227 i‡(
ƒhs
>1) {

228 i‡(
	`mxIsCh¨
(
¥hs
[1]))

229 
cdñim
 = 
	`mxAºayToSåög
(
¥hs
[1]);

231 
	`mexEºMsgTxt
("arg2 isÇotá charárray");

233 i‡(
ƒhs
>2) {

234 i‡(
	`mxIsCh¨
(
¥hs
[2]))

235 
rdñim
 = 
	`mxAºayToSåög
(
¥hs
[2]);

237 
	`mexEºMsgTxt
("arg3 isÇotá charárray");

239 i‡(
ƒhs
>3) {

240 i‡(
	`mxIsCh¨
(
¥hs
[3]Ë&& (
	`mxGëNumbîOfEÀmíts
(prhs[3])==1) ) {

241 
ddñim
 = 
	`mxAºayToSåög
(
¥hs
[3]);

242 
k
=0; k<
¶í
; k++) {

243 i‡(
s
[
k
]==
ddñim
[0])

244 
s
[
k
] = '.';

248 
	`mexEºMsgTxt
("arg4 isÇotá single char");

252 
u
 = (
uöt8_t
*Ë
	`mxCÆloc
(1,
¶í
+1);

253 
k
 = 0; k < 
¶í
; ) {

254 i‡(
	`°rchr
(
cdñim
,
s
[
k
]Ë!
NULL
) {

255 
u
[
k
] = 1;

256 
s
[++
k
]==' ');

258 i‡(
	`°rchr
(
rdñim
,
s
[
k
]Ë!
NULL
)

259 
u
[
k
++] = 2;

261 
k
++;

265 
nc
=0, 
ƒ
=0;

266 i‡(
u
[
¶í
-1]<2) {

268 
ƒ
 = (
¶í
>0);

269 
u
[
¶í
] = 2;

271 
k
 = 0; k < 
¶í
; ) {

272 i‡(
u
[
k
]==2) {

273 
s
[
k
] = 0;

274 
ƒ
++;

275 i‡(
nc
 > 
maxcﬁ
) maxcol=nc;

276 
nc
 = 0;

278 i‡(
u
[
k
]==1) {

279 
s
[
k
] = 0;

280 
nc
++;

282 
k
++;

284 i‡(
nc
 > 
maxcﬁ
) maxcol=nc;

285 
maxcﬁ
 +(
¶í
>0);

286 
maxrow
 = 
ƒ
;

289 i‡(
∆hs
>2Ë
∂hs
[2] = 
	`mxCª©eCñlM©rix
(
maxrow
, 
maxcﬁ
);

290 
uöt8_t
 *
v
 = 
NULL
;

291 i‡(
∆hs
>1) {

292 
∂hs
[1] = 
	`mxCª©eLogiˇlM©rix
(
maxrow
, 
maxcﬁ
);

293 
v
 = (
uöt8_t
*)
	`mxGëD©a
(
∂hs
[1]);

294 
	`mem£t
(
v
,1,
maxrow
*
maxcﬁ
);

296 
∂hs
[0] = 
	`mxCª©eDoubÀM©rix
(
maxrow
, 
maxcﬁ
, 
mxREAL
);

297 *
o
 = (*)
	`mxGëD©a
(
∂hs
[0]);

298 *
oi
 = 
NULL
;

299 
k
=0; k<
maxrow
*
maxcﬁ
; k++) {

300 
o
[
k
] = 0.0/0.0;

303 
ƒ
 = 0; 
nc
 = 0;

304 
size_t
 
œ°
=0;

305 
k
 = 0; k <
¶í
; k++) {

306 i‡(
u
[
k
]) {

308 
size_t
 
idx
 = 
ƒ
+
nc
*
maxrow
;

309 i‡(
œ°
==
k
) {

311 
o
[
idx
] = 0.0/0.0;

314 
ivÆ
;

315 
typ
 = 
	`°r2vÆ
(
s
+
œ°
, 
o
+
idx
, &
ivÆ
);

317 i‡((
∆hs
>2Ë&& (
typ
==0)Ë
	`mxSëCñl
(
∂hs
[2], 
idx
, 
	`mxCª©eSåög
(
s
+
œ°
));

318 i‡((
∆hs
>1Ë&& (
typ
> 0)Ë
v
[
idx
] = 0;

319 i‡(
typ
==2) {

320 i‡(
oi
==
NULL
) {

321 
oi
 = (*Ë
	`mxCÆloc
(
maxrow
*
maxcﬁ
, ());

322 
	`mxSëPi
(
∂hs
[0], 
oi
);

324 
oi
[
idx
] = 
ivÆ
;

328 
nc
++;

329 i‡(
u
[
k
]==2) {

330 
ƒ
++;

331 
nc
 = 0;

333 
œ°
 = 
k
+1;

336 
	`mxFªe
(
u
);

337 
	}
};

	@NaN/src/sumskipnan_mex.cpp

51 
	~<m©h.h
>

52 
	~<°döt.h
>

53 
	~"mex.h
"

59 
	#ISNAN
(
a
Ë◊!˜)

	)

61 #i‚de‡
ty≥of


62 
	#ty≥of
 
__ty≥of__


	)

65 
ölöe
 
__sumskù«n2w__
(*
d©a
, 
size_t
 
Ni
, *
s
, *
No
, *
Êag_™yISNAN
, *
W
);

66 
ölöe
 
__sumskù«n3w__
(*
d©a
, 
size_t
 
Ni
, *
s
, *
s2
, *
No
, *
Êag_™yISNAN
, *
W
);

67 
ölöe
 
__sumskù«n2wr__
(*
d©a
, 
size_t
 
Ni
, *
s
, *
No
, *
Êag_™yISNAN
, *
W
);

68 
ölöe
 
__sumskù«n3wr__
(*
d©a
, 
size_t
 
Ni
, *
s
, *
s2
, *
No
, *
Êag_™yISNAN
, *
W
);

69 
ölöe
 
__sumskù«n2we__
(*
d©a
, 
size_t
 
Ni
, *
s
, *
No
, *
Êag_™yISNAN
, *
W
);

70 
ölöe
 
__sumskù«n3we__
(*
d©a
, 
size_t
 
Ni
, *
s
, *
s2
, *
No
, *
Êag_™yISNAN
, *
W
);

71 
ölöe
 
__sumskù«n2wî__
(*
d©a
, 
size_t
 
Ni
, *
s
, *
No
, *
Êag_™yISNAN
, *
W
);

72 
ölöe
 
__sumskù«n3wî__
(*
d©a
, 
size_t
 
Ni
, *
s
, *
s2
, *
No
, *
Êag_™yISNAN
, *
W
);

76 #ifde‡
tmwty≥s_h


77 #i‡(
MX_API_VER
<=0x07020000)

78 
	tmwSize
;

83 
	$mexFun˘i⁄
(
POuçutCou¡
, 
mxAºay
* 
POuçut
[], 
PI≈utCou¡
, c⁄° mxAºay *
PI≈uts
[])

85 c⁄° 
mwSize
 *
SZ
;

86 * 
LI≈ut
;

87 * 
LOuçutSum
;

88 * 
LOuçutCou¡
;

89 * 
LOuçutSum2
;

90 * 
L⁄gOuçutSum
 = 
NULL
;

91 * 
L⁄gOuçutCou¡
 = 
NULL
;

92 * 
L⁄gOuçutSum2
 = 
NULL
;

93 
x
;

94 * 
W
 = 
NULL
;

96 
size_t
 
DIM
 = 0;

97 
size_t
 
D1
, 
D2
, 
D3
;

98 
size_t
 
ND
, 
ND2
;

99 
size_t
 
ix0
, 
ix1
, 
ix2
;

100 
size_t
 
j
, 
l
;

101 
mwIndex
 *
SZ2
;

102 
Êag_isNaN
 = 0;

105 i‡((
PI≈utCou¡
 <= 0) || (PInputCount > 4))

106 
	`mexEºMsgTxt
("SUMSKIPNAN.MEXÑequires between 1ánd 4árguments.");

107 i‡(
POuçutCou¡
 > 4)

108 
	`mexEºMsgTxt
("SUMSKIPNAN.MEX has 1Åo 3 outputárguments.");

111 if(
	`mxIsDoubÀ
(
PI≈uts
[0]Ë&& !
	`mxIsCom∂ex
(PI≈uts[0]Ë&& !
	`mxIsS∑r£
(PInputs[0]) )

112 
LI≈ut
 = 
	`mxGëPr
(
PI≈uts
[0]);

114 
	`mexEºMsgTxt
("Firstárgument must beándÇot sparse REAL/DOUBLE.");

117 i‡(
PI≈utCou¡
 > 1) {

118 
	`mxGëNumbîOfEÀmíts
(
PI≈uts
[1])) {

119 0: 
x
 = 0.0;

121 1: 
x
 = (
	`mxIsNumîic
(
PI≈uts
[1]Ë? 
	`mxGëSˇœr
(PInputs[1]) : -1.0);

123 :
x
 = -1.0;

125 i‡((
x
 < 0Ë|| (x > 65535Ë|| (x !
	`Êo‹
(x)))

126 
	`mexEºMsgTxt
("Error SUMSKIPNAN.MEX: DIM-argument must beáÖositive integer scalar");

128 
DIM
 = ()
	`Êo‹
(
x
);

132 
ND
 = 
	`mxGëNumbîOfDimísi⁄s
(
PI≈uts
[0]);

134 
SZ
 = 
	`mxGëDimísi⁄s
(
PI≈uts
[0]);

137 
j
 = 0; (
DIM
 < 1Ë&& (j < 
ND
); j++)

138 i‡(
SZ
[
j
]>1Ë
DIM
 = j+1;

140 i‡(
DIM
 < 1) DIM=1;

142 
ND2
 = (
ND
>
DIM
 ? ND : DIM);

144 
SZ2
 = (
mwSize
*)
	`mxCÆloc
(
ND2
, (mwSize));

146 
j
=0; j<
ND
; j++)

147 
SZ2
[
j
] = 
SZ
[j];

148 
j
=
ND
; j<
ND2
; j++)

149 
SZ2
[
j
] = 1;

151 
j
=0, 
D1
=1; j<
DIM
-1; D1=D1*
SZ2
[j++]);

152 
D2
 = 
SZ2
[
DIM
-1];

153 
j
=
DIM
, 
D3
=1; j<
ND
; D3=D3*
SZ2
[j++]);

155 
SZ2
[
DIM
-1] = 1;

158 i‡(
PI≈utCou¡
 > 3) {

159 i‡(!
	`mxGëNumbîOfEÀmíts
(
PI≈uts
[3]))

161 i‡(
	`mxGëNumbîOfEÀmíts
(
PI≈uts
[3])==
D2
)

162 
W
 = 
	`mxGëPr
(
PI≈uts
[3]);

164 
	`mexEºMsgTxt
("Error SUMSKIPNAN.MEX:Üength of weight vector doesÇot match size of dimension");

167 
ACC_LEVEL
 = 0;

169 
mxAºay
 *
LEVEL
 = 
NULL
;

170 
s
 = 
	`mexCÆlMATLAB
(1, &
LEVEL
, 0, 
NULL
, "flag_accuracy_level");

171 i‡(!
s
) {

172 
ACC_LEVEL
 = (Ë
	`mxGëSˇœr
(
LEVEL
);

173 i‡((
D1
>1Ë&& (
ACC_LEVEL
>2))

174 
	`mexW¨nMsgTxt
("Warning: Kahan summationÇot supported with stride > 1 !");

176 
	`mxDe°royAºay
(
LEVEL
);

181 
	#TYP
 
mxDOUBLE_CLASS


	)

183 
POuçut
[0] = 
	`mxCª©eNumîicAºay
(
ND2
, 
SZ2
, 
TYP
, 
mxREAL
);

184 
LOuçutSum
 = 
	`mxGëPr
(
POuçut
[0]);

185 i‡(
D1
!=1 && 
D2
>0Ë
L⁄gOuçutSum
 = (*Ë
	`mxCÆloc
(D1*
D3
,());

186 i‡(
POuçutCou¡
 >= 2) {

187 
POuçut
[1] = 
	`mxCª©eNumîicAºay
(
ND2
, 
SZ2
, 
TYP
, 
mxREAL
);

188 
LOuçutCou¡
 = 
	`mxGëPr
(
POuçut
[1]);

189 i‡(
D1
!=1 && 
D2
>0Ë
L⁄gOuçutCou¡
 = (*Ë
	`mxCÆloc
(D1*
D3
,());

191 i‡(
POuçutCou¡
 >= 3) {

192 
POuçut
[2] = 
	`mxCª©eNumîicAºay
(
ND2
, 
SZ2
, 
TYP
, 
mxREAL
);

193 
LOuçutSum2
 = 
	`mxGëPr
(
POuçut
[2]);

194 i‡(
D1
!=1 && 
D2
>0Ë
L⁄gOuçutSum2
 = (*Ë
	`mxCÆloc
(D1*
D3
,());

196 
	`mxFªe
(
SZ2
);

199 i‡(!
D1
 || !
D2
 || !
D3
)

201 i‡(
D1
==1) {

202 i‡(
ACC_LEVEL
<1) {

204 
POuçutCou¡
) {

207 #¥agm®
omp
 
∑øŒñ
 
	`scheduÀ
(
dy«mic
)

208 
l
 = 0;Ü<
D3
;Ü++) {

209 
cou¡
;

210 
	`__sumskù«n2wr__
(
LI≈ut
+
l
*
D2
, D2, 
LOuçutSum
+l, &
cou¡
, &
Êag_isNaN
, 
W
);

214 #¥agm®
omp
 
∑øŒñ
 
	`scheduÀ
(
dy«mic
)

215 
l
 = 0;Ü<
D3
;Ü++) {

216 
	`__sumskù«n2wr__
(
LI≈ut
+
l
*
D2
, D2, 
LOuçutSum
+l, 
LOuçutCou¡
+l, &
Êag_isNaN
, 
W
);

220 #¥agm®
omp
 
∑øŒñ
 
	`scheduÀ
(
dy«mic
)

221 
l
 = 0;Ü<
D3
;Ü++) {

222 
	`__sumskù«n3wr__
(
LI≈ut
+
l
*
D2
, D2, 
LOuçutSum
+l, 
LOuçutSum2
+l, 
LOuçutCou¡
+l, &
Êag_isNaN
, 
W
);

227 i‡(
ACC_LEVEL
==1) {

229 
POuçutCou¡
) {

232 #¥agm®
omp
 
∑øŒñ
 
	`scheduÀ
(
dy«mic
)

233 
l
 = 0;Ü<
D3
;Ü++) {

234 
cou¡
;

235 
	`__sumskù«n2w__
(
LI≈ut
+
l
*
D2
, D2, 
LOuçutSum
+l, &
cou¡
, &
Êag_isNaN
, 
W
);

239 #¥agm®
omp
 
∑øŒñ
 
	`scheduÀ
(
dy«mic
)

240 
l
 = 0;Ü<
D3
;Ü++) {

241 
	`__sumskù«n2w__
(
LI≈ut
+
l
*
D2
, D2, 
LOuçutSum
+l, 
LOuçutCou¡
+l, &
Êag_isNaN
, 
W
);

245 #¥agm®
omp
 
∑øŒñ
 
	`scheduÀ
(
dy«mic
)

246 
l
 = 0;Ü<
D3
;Ü++) {

247 
	`__sumskù«n3w__
(
LI≈ut
+
l
*
D2
, D2, 
LOuçutSum
+l, 
LOuçutSum2
+l, 
LOuçutCou¡
+l, &
Êag_isNaN
, 
W
);

252 i‡(
ACC_LEVEL
==3) {

254 
POuçutCou¡
) {

257 #¥agm®
omp
 
∑øŒñ
 
	`scheduÀ
(
dy«mic
)

258 
l
 = 0;Ü<
D3
;Ü++) {

259 
cou¡
;

260 
	`__sumskù«n2we__
(
LI≈ut
+
l
*
D2
, D2, 
LOuçutSum
+l, &
cou¡
, &
Êag_isNaN
, 
W
);

264 #¥agm®
omp
 
∑øŒñ
 
	`scheduÀ
(
dy«mic
)

265 
l
 = 0;Ü<
D3
;Ü++) {

266 
	`__sumskù«n2we__
(
LI≈ut
+
l
*
D2
, D2, 
LOuçutSum
+l, 
LOuçutCou¡
+l, &
Êag_isNaN
, 
W
);

270 #¥agm®
omp
 
∑øŒñ
 
	`scheduÀ
(
dy«mic
)

271 
l
 = 0;Ü<
D3
;Ü++) {

272 
	`__sumskù«n3we__
(
LI≈ut
+
l
*
D2
, D2, 
LOuçutSum
+l, 
LOuçutSum2
+l, 
LOuçutCou¡
+l, &
Êag_isNaN
, 
W
);

277 i‡(
ACC_LEVEL
==2) {

279 
POuçutCou¡
) {

282 #¥agm®
omp
 
∑øŒñ
 
	`scheduÀ
(
dy«mic
)

283 
l
 = 0;Ü<
D3
;Ü++) {

284 
cou¡
;

285 
	`__sumskù«n2wî__
(
LI≈ut
+
l
*
D2
, D2, 
LOuçutSum
+l, &
cou¡
, &
Êag_isNaN
, 
W
);

289 #¥agm®
omp
 
∑øŒñ
 
	`scheduÀ
(
dy«mic
)

290 
l
 = 0;Ü<
D3
;Ü++) {

291 
	`__sumskù«n2wî__
(
LI≈ut
+
l
*
D2
, D2, 
LOuçutSum
+l, 
LOuçutCou¡
+l, &
Êag_isNaN
, 
W
);

295 #¥agm®
omp
 
∑øŒñ
 
	`scheduÀ
(
dy«mic
)

296 
l
 = 0;Ü<
D3
;Ü++) {

297 
	`__sumskù«n3wî__
(
LI≈ut
+
l
*
D2
, D2, 
LOuçutSum
+l, 
LOuçutSum2
+l, 
LOuçutCou¡
+l, &
Êag_isNaN
, 
W
);

303 i‡(
POuçutCou¡
 <= 1) {

305 
l
 = 0;Ü<
D3
;Ü++) {

306 
ix0
 = 
l
*
D1
;

307 
ix1
 = 
ix0
*
D2
;

308 
j
=0; j<
D2
; j++) {

310 
ix2
 = 
ix0
;

312 i‡(
W
) do {

313 
x
 = *
LI≈ut
;

314 i‡(!
	`ISNAN
(
x
)) {

315 
L⁄gOuçutSum
[
ix2
] +
W
[
j
]*
x
;

317 #i‚de‡
NO_FLAG


319 
Êag_isNaN
 = 1;

321 
LI≈ut
++;

322 
ix2
++;

323 } 
ix2
 !(
l
+1)*
D1
);

325 
x
 = *
LI≈ut
;

326 i‡(!
	`ISNAN
(
x
)) {

327 
L⁄gOuçutSum
[
ix2
] +
x
;

329 #i‚de‡
NO_FLAG


331 
Êag_isNaN
 = 1;

333 
LI≈ut
++;

334 
ix2
++;

335 } 
ix2
 !(
l
+1)*
D1
);

339 
j
=0; j<
D1
; j++) {

340 
LOuçutSum
[
ix0
+
j
] = (
	`ty≥of
(*LOuçutSum))
L⁄gOuçutSum
[ix0+j];

345 i‡(
POuçutCou¡
 == 2) {

347 
l
 = 0;Ü<
D3
;Ü++) {

348 
ix0
 = 
l
*
D1
;

349 
ix1
 = 
ix0
*
D2
;

350 
j
=0; j<
D2
; j++) {

352 
ix2
 = 
ix0
;

354 i‡(
W
) do {

355 
x
 = *
LI≈ut
;

356 i‡(!
	`ISNAN
(
x
)) {

357 
L⁄gOuçutCou¡
[
ix2
] +
W
[
j
];

358 
L⁄gOuçutSum
[
ix2
] +
W
[
j
]*
x
;

360 #i‚de‡
NO_FLAG


362 
Êag_isNaN
 = 1;

364 
LI≈ut
++;

365 
ix2
++;

366 } 
ix2
 !(
l
+1)*
D1
);

368 
x
 = *
LI≈ut
;

369 i‡(!
	`ISNAN
(
x
)) {

370 
L⁄gOuçutCou¡
[
ix2
] += 1.0;

371 
L⁄gOuçutSum
[
ix2
] +
x
;

373 #i‚de‡
NO_FLAG


375 
Êag_isNaN
 = 1;

377 
LI≈ut
++;

378 
ix2
++;

379 } 
ix2
 !(
l
+1)*
D1
);

383 
j
=0; j<
D1
; j++) {

384 
LOuçutSum
[
ix0
+
j
] = (
	`ty≥of
(*LOuçutSum))
L⁄gOuçutSum
[ix0+j];

385 
LOuçutCou¡
[
ix0
+
j
] = (
	`ty≥of
(*LOuçutCou¡))
L⁄gOuçutCou¡
[ix0+j];

390 i‡(
POuçutCou¡
 == 3) {

392 
l
 = 0;Ü<
D3
;Ü++) {

393 
ix0
 = 
l
*
D1
;

394 
ix1
 = 
ix0
*
D2
;

395 
j
=0; j<
D2
; j++) {

397 
ix2
 = 
ix0
;

399 i‡(
W
) do {

400 
x
 = *
LI≈ut
;

401 i‡(!
	`ISNAN
(
x
)) {

402 
L⁄gOuçutCou¡
[
ix2
] +
W
[
j
];

403 
t
 = 
W
[
j
]*
x
;

404 
L⁄gOuçutSum
[
ix2
] +
t
;

405 
L⁄gOuçutSum2
[
ix2
] +
x
*
t
;

407 #i‚de‡
NO_FLAG


409 
Êag_isNaN
 = 1;

411 
LI≈ut
++;

412 
ix2
++;

413 } 
ix2
 !(
l
+1)*
D1
);

415 
x
 = *
LI≈ut
;

416 i‡(!
	`ISNAN
(
x
)) {

417 
L⁄gOuçutCou¡
[
ix2
] += 1.0;

418 
L⁄gOuçutSum
[
ix2
] +
x
;

419 
L⁄gOuçutSum2
[
ix2
] +
x
*x;

421 #i‚de‡
NO_FLAG


423 
Êag_isNaN
 = 1;

425 
LI≈ut
++;

426 
ix2
++;

427 } 
ix2
 !(
l
+1)*
D1
);

431 
j
=0; j<
D1
; j++) {

432 
LOuçutSum
[
ix0
+
j
] = (
	`ty≥of
(*LOuçutSum))
L⁄gOuçutSum
[ix0+j];

433 
LOuçutCou¡
[
ix0
+
j
] = (
	`ty≥of
(*LOuçutCou¡))
L⁄gOuçutCou¡
[ix0+j];

434 
LOuçutSum2
[
ix0
+
j
] = (
	`ty≥of
(*LOuçutSum2))
L⁄gOuçutSum2
[ix0+j];

439 i‡(
L⁄gOuçutSum
Ë
	`mxFªe
(LongOutputSum);

440 i‡(
L⁄gOuçutCou¡
Ë
	`mxFªe
(LongOutputCount);

441 i‡(
L⁄gOuçutSum2
Ë
	`mxFªe
(LongOutputSum2);

443 #i‚de‡
NO_FLAG


448 i‡(
Êag_isNaN
 && (
PI≈utCou¡
 > 2Ë&& 
	`mxGëNumbîOfEÀmíts
(
PI≈uts
[2])) {

450 
	`mxGëCœssID
(
PI≈uts
[2])) {

451 
mxLOGICAL_CLASS
:

452 
mxCHAR_CLASS
:

453 
mxINT8_CLASS
:

454 
mxUINT8_CLASS
:

455 *(
uöt8_t
*)
	`mxGëD©a
(
PI≈uts
[2]) = 1;

457 
mxDOUBLE_CLASS
:

458 *(*)
	`mxGëD©a
(
PI≈uts
[2]) = 1.0;

460 
mxSINGLE_CLASS
:

461 *(*)
	`mxGëD©a
(
PI≈uts
[2]) = 1.0;

463 
mxINT16_CLASS
:

464 
mxUINT16_CLASS
:

465 *(
uöt16_t
*)
	`mxGëD©a
(
PI≈uts
[2]) = 1;

467 
mxINT32_CLASS
:

468 
mxUINT32_CLASS
:

469 *(
uöt32_t
*)
	`mxGëD©a
(
PI≈uts
[2])= 1;

471 
mxINT64_CLASS
:

472 
mxUINT64_CLASS
:

473 *(
uöt64_t
*)
	`mxGëD©a
(
PI≈uts
[2]) = 1;

475 
mxFUNCTION_CLASS
:

476 
mxUNKNOWN_CLASS
:

477 
mxCELL_CLASS
:

478 
mxSTRUCT_CLASS
:

480 
	`mexPrötf
("Type of 3rd inputárgumentÇot supported.");

484 
	}
}

486 
	#°ride
 1

	)

487 
ölöe
 
	$__sumskù«n2w__
(*
d©a
, 
size_t
 
Ni
, *
s
, *
No
, *
Êag_™yISNAN
, *
W
)

489 
sum
=0;

490 
Êag
=0;

493 *
íd
 = 
d©a
 + 
°ride
*
Ni
;

494 i‡(
W
) {

496 
cou¡
 = 0.0;

498 
x
 = *
d©a
;

499 i‡(!
	`ISNAN
(
x
))

501 
cou¡
 +*
W
;

502 
sum
 +*
W
*
x
;

504 #i‚de‡
NO_FLAG


506 
Êag
 = 1;

509 
d©a
++;

510 
W
++;

512 
d©a
 < 
íd
);

513 *
No
 = (
	`ty≥of
(*No))
cou¡
;

516 
size_t
 
cou¡I
 = 0;

518 
x
 = *
d©a
;

519 i‡(!
	`ISNAN
(
x
))

521 
cou¡I
++;

522 
sum
 +
x
;

524 #i‚de‡
NO_FLAG


526 
Êag
 = 1;

528 
d©a
++;

530 
d©a
 < 
íd
);

531 *
No
 = (
	`ty≥of
(*No))
cou¡I
;

534 #i‚de‡
NO_FLAG


535 i‡(
Êag
 && (
Êag_™yISNAN
 !
NULL
)) *flag_anyISNAN = 1;

537 *
s
 = (
	`ty≥of
(*s))
sum
;

539 
	}
}

542 
ölöe
 
	$__sumskù«n3w__
(*
d©a
, 
size_t
 
Ni
, *
s
, *
s2
, *
No
, *
Êag_™yISNAN
, *
W
)

544 
sum
=0;

545 
msq
=0;

546 
Êag
=0;

549 *
íd
 = 
d©a
 + 
°ride
*
Ni
;

550 i‡(
W
) {

552 
cou¡
 = 0.0;

554 
x
 = *
d©a
;

555 i‡(!
	`ISNAN
(
x
)) {

556 
cou¡
 +*
W
;

557 
t
 = *
W
*
x
;

558 
sum
 +
t
;

559 
msq
 +
x
*
t
;

561 #i‚de‡
NO_FLAG


563 
Êag
 = 1;

565 
d©a
++;

566 
W
++;

568 
d©a
 < 
íd
);

569 *
No
 = (
	`ty≥of
(*No))
cou¡
;

572 
size_t
 
cou¡I
 = 0;

574 
x
 = *
d©a
;

575 i‡(!
	`ISNAN
(
x
)) {

576 
cou¡I
++;

577 
sum
 +
x
;

578 
msq
 +
x
*x;

580 #i‚de‡
NO_FLAG


582 
Êag
 = 1;

584 
d©a
++;

586 
d©a
 < 
íd
);

587 *
No
 = (
	`ty≥of
(*No))
cou¡I
;

590 #i‚de‡
NO_FLAG


591 i‡(
Êag
 && (
Êag_™yISNAN
 !
NULL
)) *flag_anyISNAN = 1;

593 *
s
 = (
	`ty≥of
(*s))
sum
;

594 *
s2
 = (
	`ty≥of
(*s2))
msq
;

595 
	}
}

597 
ölöe
 
	$__sumskù«n2wr__
(*
d©a
, 
size_t
 
Ni
, *
s
, *
No
, *
Êag_™yISNAN
, *
W
)

599 
sum
=0;

600 
Êag
=0;

603 *
íd
 = 
d©a
 + 
°ride
*
Ni
;

604 i‡(
W
) {

606 
cou¡
 = 0.0;

608 
x
 = *
d©a
;

609 i‡(!
	`ISNAN
(
x
))

611 
cou¡
 +*
W
;

612 
sum
 +*
W
*
x
;

614 #i‚de‡
NO_FLAG


616 
Êag
 = 1;

619 
d©a
++;

620 
W
++;

622 
d©a
 < 
íd
);

623 *
No
 = (
	`ty≥of
(*No))
cou¡
;

626 
size_t
 
cou¡I
 = 0;

628 
x
 = *
d©a
;

629 i‡(!
	`ISNAN
(
x
))

631 
cou¡I
++;

632 
sum
 +
x
;

634 #i‚de‡
NO_FLAG


636 
Êag
 = 1;

638 
d©a
++;

640 
d©a
 < 
íd
);

641 *
No
 = (
	`ty≥of
(*No))
cou¡I
;

644 #i‚de‡
NO_FLAG


645 i‡(
Êag
 && (
Êag_™yISNAN
 !
NULL
)) *flag_anyISNAN = 1;

647 *
s
 = (
	`ty≥of
(*s))
sum
;

649 
	}
}

652 
ölöe
 
	$__sumskù«n3wr__
(*
d©a
, 
size_t
 
Ni
, *
s
, *
s2
, *
No
, *
Êag_™yISNAN
, *
W
)

654 
sum
=0;

655 
msq
=0;

656 
Êag
=0;

659 *
íd
 = 
d©a
 + 
°ride
*
Ni
;

660 i‡(
W
) {

662 
cou¡
 = 0.0;

664 
x
 = *
d©a
;

665 i‡(!
	`ISNAN
(
x
)) {

666 
cou¡
 +*
W
;

667 
t
 = *
W
*
x
;

668 
sum
 +
t
;

669 
msq
 +
x
*
t
;

671 #i‚de‡
NO_FLAG


673 
Êag
 = 1;

675 
d©a
++;

676 
W
++;

678 
d©a
 < 
íd
);

679 *
No
 = 
cou¡
;

682 
size_t
 
cou¡I
 = 0;

684 
x
 = *
d©a
;

685 i‡(!
	`ISNAN
(
x
)) {

686 
cou¡I
++;

687 
sum
 +
x
;

688 
msq
 +
x
*x;

690 #i‚de‡
NO_FLAG


692 
Êag
 = 1;

694 
d©a
++;

696 
d©a
 < 
íd
);

697 *
No
 = (
	`ty≥of
(*No))
cou¡I
;

700 #i‚de‡
NO_FLAG


701 i‡(
Êag
 && (
Êag_™yISNAN
 !
NULL
)) *flag_anyISNAN = 1;

703 *
s
 = (
	`ty≥of
(*s))
sum
;

704 *
s2
 = (
	`ty≥of
(*s2))
msq
;

705 
	}
}

719 
ölöe
 
	$__sumskù«n2we__
(*
d©a
, 
size_t
 
Ni
, *
s
, *
No
, *
Êag_™yISNAN
, *
W
)

721 
sum
=0;

722 
Êag
=0;

725 *
íd
 = 
d©a
 + 
°ride
*
Ni
;

726 i‡(
W
) {

728 
cou¡
 = 0.0;

729 
rc
=0.0, 
∫
=0.0;

731 
x
 = *
d©a
;

732 
t
,
y
;

733 i‡(!
	`ISNAN
(
x
))

736 
y
 = *
W
-
∫
;

737 
t
 = 
cou¡
+
y
;

738 
∫
(
t
-
cou¡
)-
y
;

739 
cou¡

t
;

742 
y
 = *
W
*
x
-
rc
;

743 
t
 = 
sum
+
y
;

744 
rc
(
t
-
sum
)-
y
;

745 
sum

t
;

747 #i‚de‡
NO_FLAG


749 
Êag
 = 1;

752 
d©a
++;

753 
W
++;

755 
d©a
 < 
íd
);

756 *
No
 = (
	`ty≥of
(*No))
cou¡
;

759 
size_t
 
cou¡I
 = 0;

760 
rc
=0.0;

762 
x
 = *
d©a
;

763 
t
,
y
;

764 i‡(!
	`ISNAN
(
x
))

766 
cou¡I
++;

768 
y
 = 
x
-
rc
;

769 
t
 = 
sum
+
y
;

770 
rc
(
t
-
sum
)-
y
;

771 
sum

t
;

773 #i‚de‡
NO_FLAG


775 
Êag
 = 1;

777 
d©a
++;

779 
d©a
 < 
íd
);

780 *
No
 = (
	`ty≥of
(*No))
cou¡I
;

783 #i‚de‡
NO_FLAG


784 i‡(
Êag
 && (
Êag_™yISNAN
 !
NULL
)) *flag_anyISNAN = 1;

786 *
s
 = (
	`ty≥of
(*s))
sum
;

788 
	}
}

791 
ölöe
 
	$__sumskù«n3we__
(*
d©a
, 
size_t
 
Ni
, *
s
, *
s2
, *
No
, *
Êag_™yISNAN
, *
W
)

793 
sum
=0;

794 
msq
=0;

795 
Êag
=0;

798 *
íd
 = 
d©a
 + 
°ride
*
Ni
;

799 i‡(
W
) {

801 
cou¡
 = 0.0;

802 
rc
=0.0, 
∫
=0.0, 
rq
=0.0;

804 
x
 = *
d©a
;

805 
t
,
y
;

806 i‡(!
	`ISNAN
(
x
)) {

808 
y
 = *
W
-
∫
;

809 
t
 = 
cou¡
+
y
;

810 
∫
(
t
-
cou¡
)-
y
;

811 
cou¡

t
;

813 
w
 = *
W
*
x
;

815 
y
 = *
W
*
x
-
rc
;

816 
t
 = 
sum
+
y
;

817 
rc
(
t
-
sum
)-
y
;

818 
sum

t
;

821 
y
 = 
w
*
x
-
rq
;

822 
t
 = 
msq
+
y
;

823 
rq
(
t
-
msq
)-
y
;

824 
msq

t
;

826 #i‚de‡
NO_FLAG


828 
Êag
 = 1;

830 
d©a
++;

831 
W
++;

833 
d©a
 < 
íd
);

834 *
No
 = (
	`ty≥of
(*No))
cou¡
;

837 
size_t
 
cou¡I
 = 0;

838 
rc
=0.0, 
rq
=0.0;

840 
x
 = *
d©a
;

841 
t
,
y
;

842 i‡(!
	`ISNAN
(
x
)) {

843 
cou¡I
++;

845 
y
 = 
x
-
rc
;

846 
t
 = 
sum
+
y
;

847 
rc
(
t
-
sum
)-
y
;

848 
sum

t
;

851 
y
 = 
x
*x-
rq
;

852 
t
 = 
msq
+
y
;

853 
rq
(
t
-
msq
)-
y
;

854 
msq

t
;

856 #i‚de‡
NO_FLAG


858 
Êag
 = 1;

860 
d©a
++;

862 
d©a
 < 
íd
);

863 *
No
 = (
	`ty≥of
(*No))
cou¡I
;

866 #i‚de‡
NO_FLAG


867 i‡(
Êag
 && (
Êag_™yISNAN
 !
NULL
)) *flag_anyISNAN = 1;

869 *
s
 = (
	`ty≥of
(*s))
sum
;

870 *
s2
 = (
	`ty≥of
(*
s
))
msq
;

871 
	}
}

873 
ölöe
 
	$__sumskù«n2wî__
(*
d©a
, 
size_t
 
Ni
, *
s
, *
No
, *
Êag_™yISNAN
, *
W
)

875 
sum
=0;

876 
Êag
=0;

879 *
íd
 = 
d©a
 + 
°ride
*
Ni
;

880 i‡(
W
) {

882 
cou¡
 = 0.0;

883 
rc
=0.0, 
∫
=0.0;

885 
x
 = *
d©a
;

886 
t
,
y
;

887 i‡(!
	`ISNAN
(
x
))

890 
y
 = *
W
-
∫
;

891 
t
 = 
cou¡
+
y
;

892 
∫
(
t
-
cou¡
)-
y
;

893 
cou¡

t
;

896 
y
 = *
W
*
x
-
rc
;

897 
t
 = 
sum
+
y
;

898 
rc
(
t
-
sum
)-
y
;

899 
sum

t
;

901 #i‚de‡
NO_FLAG


903 
Êag
 = 1;

906 
d©a
++;

907 
W
++;

909 
d©a
 < 
íd
);

910 *
No
 = (
	`ty≥of
(*No))
cou¡
;

913 
size_t
 
cou¡I
 = 0;

914 
rc
=0.0;

916 
x
 = *
d©a
;

917 
t
,
y
;

918 i‡(!
	`ISNAN
(
x
))

920 
cou¡I
++;

922 
y
 = 
x
-
rc
;

923 
t
 = 
sum
+
y
;

924 
rc
(
t
-
sum
)-
y
;

925 
sum

t
;

927 #i‚de‡
NO_FLAG


929 
Êag
 = 1;

931 
d©a
++;

933 
d©a
 < 
íd
);

934 *
No
 = (
	`ty≥of
(*No))
cou¡I
;

937 #i‚de‡
NO_FLAG


938 i‡(
Êag
 && (
Êag_™yISNAN
 !
NULL
)) *flag_anyISNAN = 1;

940 *
s
 = (
	`ty≥of
(*s))
sum
;

942 
	}
}

945 
ölöe
 
	$__sumskù«n3wî__
(*
d©a
, 
size_t
 
Ni
, *
s
, *
s2
, *
No
, *
Êag_™yISNAN
, *
W
)

947 
sum
=0;

948 
msq
=0;

949 
Êag
=0;

952 *
íd
 = 
d©a
 + 
°ride
*
Ni
;

953 i‡(
W
) {

955 
cou¡
 = 0.0;

956 
rc
=0.0, 
∫
=0.0, 
rq
=0.0;

958 
x
 = *
d©a
;

959 
t
,
y
;

960 i‡(!
	`ISNAN
(
x
)) {

962 
y
 = *
W
-
∫
;

963 
t
 = 
cou¡
+
y
;

964 
∫
(
t
-
cou¡
)-
y
;

965 
cou¡

t
;

967 
w
 = *
W
*
x
;

969 
y
 = *
W
*
x
-
rc
;

970 
t
 = 
sum
+
y
;

971 
rc
(
t
-
sum
)-
y
;

972 
sum

t
;

975 
y
 = 
w
*
x
-
rq
;

976 
t
 = 
msq
+
y
;

977 
rq
(
t
-
msq
)-
y
;

978 
msq

t
;

980 #i‚de‡
NO_FLAG


982 
Êag
 = 1;

984 
d©a
++;

985 
W
++;

987 
d©a
 < 
íd
);

988 *
No
 = (
	`ty≥of
(*No))
cou¡
;

991 
size_t
 
cou¡I
 = 0;

992 
rc
=0.0, 
rq
=0.0;

994 
x
 = *
d©a
;

995 
t
,
y
;

996 i‡(!
	`ISNAN
(
x
)) {

997 
cou¡I
++;

999 
y
 = 
x
-
rc
;

1000 
t
 = 
sum
+
y
;

1001 
rc
(
t
-
sum
)-
y
;

1002 
sum

t
;

1005 
y
 = 
x
*x-
rq
;

1006 
t
 = 
msq
+
y
;

1007 
rq
(
t
-
msq
)-
y
;

1008 
msq

t
;

1010 #i‚de‡
NO_FLAG


1012 
Êag
 = 1;

1014 
d©a
++;

1016 
d©a
 < 
íd
);

1017 *
No
 = (
	`ty≥of
(*No))
cou¡I
;

1020 #i‚de‡
NO_FLAG


1021 i‡(
Êag
 && (
Êag_™yISNAN
 !
NULL
)) *flag_anyISNAN = 1;

1023 *
s
 = (
	`ty≥of
(*s))
sum
;

1024 *
s2
 = (
	`ty≥of
(*
s
))
msq
;

1025 
	}
}

	@NaN/src/svm.cpp

26 
	~<m©h.h
>

27 
	~<°dio.h
>

28 
	~<°dlib.h
>

29 
	~<˘y≥.h
>

30 
	~<Êﬂt.h
>

31 
	~<°rög.h
>

32 
	~<°d¨g.h
>

33 
	~<limôs.h
>

34 
	~<loˇÀ.h
>

35 
	~"svm.h
"

37 
	glibsvm_vîsi⁄
 = 
LIBSVM_VERSION
;

38 
	tQÊﬂt
;

39 sig√d 
	tsch¨
;

40 #i‚de‡
mö


41 
	gãm∂©e
 <
˛ass
 
	gT
> 
ölöe
 
T
 
	$mö
(
T
 
x
,T 
y
Ë{  (x<y)?x:y; 
	}
}

43 #i‚de‡
max


44 
	gãm∂©e
 <
˛ass
 
	gT
> 
ölöe
 
T
 
	$max
(
T
 
x
,T 
y
Ë{  (x>y)?x:y; 
	}
}

46 
	gãm∂©e
 <
˛ass
 
	gT
> 
ölöe
 
	$sw≠
(
T
& 
x
, T& 
y
Ë{ T 
t
=x; x=y; yÒ; 
	}
}

47 
	gãm∂©e
 <
˛ass
 
	gS
, cœs†
	gT
> 
ölöe
 
	$˛⁄e
(
T
*& 
d°
, 
S
* 
§c
, 
n
)

49 
d°
 = 
√w
 
T
[
n
];

50 
	`mem˝y
((*)
d°
,(*)
§c
,(
T
)*
n
);

51 
	}
}

52 
ölöe
 
	$powi
(
ba£
, 
times
)

54 
tmp
 = 
ba£
, 
ªt
 = 1.0;

56 
t
=
times
;Å>0;Å/=2)

58 if(
t
%2==1Ë
ªt
*=
tmp
;

59 
tmp
 =Åmp *Åmp;

61  
ªt
;

62 
	}
}

63 
	#INF
 
HUGE_VAL


	)

64 
	#TAU
 1e-12

	)

65 
	#MÆloc
(
ty≥
,
n
Ë—y≥ *)
	`mÆloc
(“)*—y≥))

	)

67 
	$¥öt_°rög_°dout
(c⁄° *
s
)

69 
	`Âuts
(
s
,
°dout
);

70 
	`fÊush
(
°dout
);

71 
	}
}

72 (*
svm_¥öt_°rög
Ë(c⁄° *Ë&
¥öt_°rög_°dout
;

74 
	$öfo
(c⁄° *
fmt
,...)

76 
buf
[
BUFSIZ
];

77 
va_li°
 
≠
;

78 
	`va_°¨t
(
≠
,
fmt
);

79 
	`v•rötf
(
buf
,
fmt
,
≠
);

80 
	`va_íd
(
≠
);

81 (*
svm_¥öt_°rög
)(
buf
);

82 
	}
}

84 
	$öfo
(c⁄° *
fmt
,...Ë{
	}
}

93 ˛as†
	cCache


95 
	mpublic
:

96 
Cache
(
l
,
size
);

97 ~
Cache
();

102 
gë_d©a
(c⁄° 
ödex
, 
QÊﬂt
 **
d©a
, 
Àn
);

103 
sw≠_ödex
(
i
, 
j
);

104 
	m¥iv©e
:

105 
l
;

106 
	msize
;

107 
	shód_t


109 
hód_t
 *
	m¥ev
, *
	m√xt
;

110 
QÊﬂt
 *
	md©a
;

111 
	mÀn
;

114 
hód_t
 *
	ghód
;

115 
hód_t
 
	gÃu_hód
;

116 
Ãu_dñëe
(
hód_t
 *
h
);

117 
Ãu_ö£π
(
hód_t
 *
h
);

120 
	gCache
::
	$Cache
(
l_
,
size_
):
	`l
÷_),
	$size
(
size_
)

122 
hód
 = (
hód_t
 *)
	`ˇŒoc
(
l
,(head_t));

123 
size
 /(
QÊﬂt
);

124 
size
 -
l
 * (
hód_t
Ë/ (
QÊﬂt
);

125 
size
 = 
	`max
(size, 2 * (Ë
l
);

126 
Ãu_hód
.
√xt
 =Üru_hód.
¥ev
 = &lru_head;

127 
	}
}

129 
	gCache
::~
	$Cache
()

131 
hód_t
 *
h
 = 
Ãu_hód
.
√xt
; h != &lru_head; h=h->next)

132 
	`‰ì
(
h
->
d©a
);

133 
	`‰ì
(
hód
);

134 
	}
}

136 
	gCache
::
	$Ãu_dñëe
(
hód_t
 *
h
)

139 
h
->
¥ev
->
√xt
 = h->next;

140 
h
->
√xt
->
¥ev
 = h->prev;

141 
	}
}

143 
	gCache
::
	$Ãu_ö£π
(
hód_t
 *
h
)

146 
h
->
√xt
 = &
Ãu_hód
;

147 
h
->
¥ev
 = 
Ãu_hód
.prev;

148 
h
->
¥ev
->
√xt
 = h;

149 
h
->
√xt
->
¥ev
 = h;

150 
	}
}

152 
	gCache
::
	$gë_d©a
(c⁄° 
ödex
, 
QÊﬂt
 **
d©a
, 
Àn
)

154 
hód_t
 *
h
 = &
hód
[
ödex
];

155 if(
h
->
Àn
Ë
	`Ãu_dñëe
(h);

156 
m‹e
 = 
Àn
 - 
h
->len;

158 if(
m‹e
 > 0)

161 
size
 < 
m‹e
)

163 
hód_t
 *
ﬁd
 = 
Ãu_hód
.
√xt
;

164 
	`Ãu_dñëe
(
ﬁd
);

165 
	`‰ì
(
ﬁd
->
d©a
);

166 
size
 +
ﬁd
->
Àn
;

167 
ﬁd
->
d©a
 = 0;

168 
ﬁd
->
Àn
 = 0;

172 
h
->
d©a
 = (
QÊﬂt
 *)
	`ªÆloc
(h->d©a,(QÊﬂt)*
Àn
);

173 
size
 -
m‹e
;

174 
	`sw≠
(
h
->
Àn
,len);

177 
	`Ãu_ö£π
(
h
);

178 *
d©a
 = 
h
->data;

179  
Àn
;

180 
	}
}

182 
	gCache
::
	$sw≠_ödex
(
i
, 
j
)

184 if(
i
==
j
) ;

186 if(
hód
[
i
].
Àn
Ë
	`Ãu_dñëe
(&head[i]);

187 if(
hód
[
j
].
Àn
Ë
	`Ãu_dñëe
(&head[j]);

188 
	`sw≠
(
hód
[
i
].
d©a
,hód[
j
].data);

189 
	`sw≠
(
hód
[
i
].
Àn
,hód[
j
].len);

190 if(
hód
[
i
].
Àn
Ë
	`Ãu_ö£π
(&head[i]);

191 if(
hód
[
j
].
Àn
Ë
	`Ãu_ö£π
(&head[j]);

193 if(
i
>
j
Ë
	`sw≠
(i,j);

194 
hód_t
 *
h
 = 
Ãu_hód
.
√xt
; h!=&lru_head; h=h->next)

196 if(
h
->
Àn
 > 
i
)

198 if(
h
->
Àn
 > 
j
)

199 
	`sw≠
(
h
->
d©a
[
i
],h->d©a[
j
]);

203 
	`Ãu_dñëe
(
h
);

204 
	`‰ì
(
h
->
d©a
);

205 
size
 +
h
->
Àn
;

206 
h
->
d©a
 = 0;

207 
h
->
Àn
 = 0;

211 
	}
}

220 ˛as†
	cQM©rix
 {

221 
	mpublic
:

222 
vútuÆ
 
QÊﬂt
 *
	$gë_Q
(
cﬁumn
, 
Àn
) const = 0;

223 
vútuÆ
 *
	$gë_QD
() const = 0;

224 
vútuÆ
 
	$sw≠_ödex
(
i
, 
j
) const = 0;

225 
vútuÆ
 ~
	$QM©rix
() {}

226 
	}
};

228 ˛as†
	cKî√l
: 
public
 
QM©rix
 {

229 
public
:

230 
Kî√l
(
l
, 
svm_node
 * c⁄° * 
x
, c⁄° 
svm_∑ømëî
& 
∑øm
);

231 
	mvútuÆ
 ~
Kî√l
();

233 
k_fun˘i⁄
(c⁄° 
svm_node
 *
x
, c⁄° svm_nodê*
y
,

234 c⁄° 
svm_∑ømëî
& 
∑øm
);

235 
vútuÆ
 
QÊﬂt
 *
	$gë_Q
(
cﬁumn
, 
Àn
) const = 0;

236 
vútuÆ
 *
	$gë_QD
() const = 0;

237 
vútuÆ
 
	$sw≠_ödex
(
i
, 
j
) const

239 
	`sw≠
(
x
[
i
],x[
j
]);

240 if(
x_squ¨e
Ë
	`sw≠
(x_squ¨e[
i
],x_squ¨e[
j
]);

242 
¥Ÿe˘ed
:

244 (
Kî√l
::*
kî√l_fun˘i⁄
)(
i
, 
j
) const;

246 
¥iv©e
:

247 c⁄° 
svm_node
 **
x
;

248 *
x_squ¨e
;

251 c⁄° 
kî√l_ty≥
;

252 c⁄° 
degªe
;

253 c⁄° 
gamma
;

254 c⁄° 
c€f0
;

256 
	`dŸ
(c⁄° 
svm_node
 *
px
, c⁄° svm_nodê*
py
);

257 
	$kî√l_löór
(
i
, 
j
) const

259  
	`dŸ
(
x
[
i
],x[
j
]);

260 
	}
}

261 
	$kî√l_pﬁy
(
i
, 
j
) const

263  
	`powi
(
gamma
*
	`dŸ
(
x
[
i
],x[
j
])+
c€f0
,
degªe
);

264 
	}
}

265 
	$kî√l_rbf
(
i
, 
j
) const

267  
	`exp
(-
gamma
*(
x_squ¨e
[
i
]+x_squ¨e[
j
]-2*
	`dŸ
(
x
[i],x[j])));

268 
	}
}

269 
	$kî√l_sigmoid
(
i
, 
j
) const

271  
	`ènh
(
gamma
*
	`dŸ
(
x
[
i
],x[
j
])+
c€f0
);

272 
	}
}

273 
	$kî√l_¥ecompuãd
(
i
, 
j
) const

275  
x
[
i
][()(x[
j
][0].
vÆue
)].value;

276 
	}
}

279 
	gKî√l
::
	$Kî√l
(
l
, 
svm_node
 * c⁄° * 
x_
, c⁄° 
svm_∑ømëî
& 
∑øm
)

280 :
	`kî√l_ty≥
(
∑øm
.
kî√l_ty≥
), 
	`degªe
’¨am.
degªe
),

281 
	`gamma
(
∑øm
.
gamma
), 
	$c€f0
(
∑øm
.
c€f0
)

283 
kî√l_ty≥
)

285 
LINEAR
:

286 
kî√l_fun˘i⁄
 = &
Kî√l
::
kî√l_löór
;

288 
POLY
:

289 
kî√l_fun˘i⁄
 = &
Kî√l
::
kî√l_pﬁy
;

291 
RBF
:

292 
kî√l_fun˘i⁄
 = &
Kî√l
::
kî√l_rbf
;

294 
SIGMOID
:

295 
kî√l_fun˘i⁄
 = &
Kî√l
::
kî√l_sigmoid
;

297 
PRECOMPUTED
:

298 
kî√l_fun˘i⁄
 = &
Kî√l
::
kî√l_¥ecompuãd
;

302 
	`˛⁄e
(
x
,
x_
,
l
);

304 if(
kî√l_ty≥
 =
RBF
)

306 
x_squ¨e
 = 
√w
 [
l
];

307 
i
=0;i<
l
;i++)

308 
x_squ¨e
[
i
] = 
	`dŸ
(
x
[i],x[i]);

311 
x_squ¨e
 = 0;

312 
	}
}

314 
	gKî√l
::~
	$Kî√l
()

316 
dñëe
[] 
x
;

317 
dñëe
[] 
x_squ¨e
;

318 
	}
}

320 
	gKî√l
::
	$dŸ
(c⁄° 
svm_node
 *
px
, c⁄° svm_nodê*
py
)

322 
sum
 = 0;

323 
px
->
ödex
 !-1 && 
py
->index != -1)

325 if(
px
->
ödex
 =
py
->index)

327 
sum
 +
px
->
vÆue
 * 
py
->value;

328 ++
px
;

329 ++
py
;

333 if(
px
->
ödex
 > 
py
->index)

334 ++
py
;

336 ++
px
;

339  
sum
;

340 
	}
}

342 
	gKî√l
::
	$k_fun˘i⁄
(c⁄° 
svm_node
 *
x
, c⁄° svm_nodê*
y
,

343 c⁄° 
svm_∑ømëî
& 
∑øm
)

345 
∑øm
.
kî√l_ty≥
)

347 
LINEAR
:

348  
	`dŸ
(
x
,
y
);

349 
POLY
:

350  
	`powi
(
∑øm
.
gamma
*
	`dŸ
(
x
,
y
)+∑øm.
c€f0
,∑øm.
degªe
);

351 
RBF
:

353 
sum
 = 0;

354 
x
->
ödex
 !-1 && 
y
->index !=-1)

356 if(
x
->
ödex
 =
y
->index)

358 
d
 = 
x
->
vÆue
 - 
y
->value;

359 
sum
 +
d
*d;

360 ++
x
;

361 ++
y
;

365 if(
x
->
ödex
 > 
y
->index)

367 
sum
 +
y
->
vÆue
 * y->value;

368 ++
y
;

372 
sum
 +
x
->
vÆue
 * x->value;

373 ++
x
;

378 
x
->
ödex
 != -1)

380 
sum
 +
x
->
vÆue
 * x->value;

381 ++
x
;

384 
y
->
ödex
 != -1)

386 
sum
 +
y
->
vÆue
 * y->value;

387 ++
y
;

390  
	`exp
(-
∑øm
.
gamma
*
sum
);

392 
SIGMOID
:

393  
	`ènh
(
∑øm
.
gamma
*
	`dŸ
(
x
,
y
)+∑øm.
c€f0
);

394 
PRECOMPUTED
:

395  
x
[()(
y
->
vÆue
)].value;

399 
	}
}

419 ˛as†
	cSﬁvî
 {

420 
	mpublic
:

421 
	$Sﬁvî
() {};

422 
vútuÆ
 ~
	$Sﬁvî
(Ë{
	}
};

424 
	sSﬁuti⁄Info
 {

425 
	gobj
;

426 
	grho
;

427 
	guµî_bound_p
;

428 
	guµî_bound_n
;

429 
	gr
;

432 
Sﬁve
(
l
, c⁄° 
QM©rix
& 
Q
, c⁄° *
p_
, c⁄° 
sch¨
 *
y_
,

433 *
Æpha_
, 
Cp
, 
Cn
, 
ïs
,

434 
Sﬁuti⁄Info
* 
si
, 
shrökög
);

435 
	g¥Ÿe˘ed
:

436 
a˘ive_size
;

437 
sch¨
 *
	gy
;

438 *
	gG
;

439 íum { 
	gLOWER_BOUND
, 
	gUPPER_BOUND
, 
	gFREE
 };

440 *
	gÆpha_°©us
;

441 *
	gÆpha
;

442 c⁄° 
QM©rix
 *
	gQ
;

443 c⁄° *
	gQD
;

444 
	gïs
;

445 
	gCp
,
	gCn
;

446 *
	gp
;

447 *
	ga˘ive_£t
;

448 *
	gG_b¨
;

449 
	gl
;

450 
boﬁ
 
	gunshrök
;

452 
	$gë_C
(
i
)

454  (
y
[
i
] > 0)? 
Cp
 : 
Cn
;

455 
	}
}

456 
	$upd©e_Æpha_°©us
(
i
)

458 if(
Æpha
[
i
] >
	`gë_C
(i))

459 
Æpha_°©us
[
i
] = 
UPPER_BOUND
;

460 if(
Æpha
[
i
] <= 0)

461 
Æpha_°©us
[
i
] = 
LOWER_BOUND
;

462 
Æpha_°©us
[
i
] = 
FREE
;

463 
	}
}

464 
boﬁ
 
	$is_uµî_bound
(
i
Ë{  
Æpha_°©us
[i] =
UPPER_BOUND
; 
	}
}

465 
boﬁ
 
	$is_lowî_bound
(
i
Ë{  
Æpha_°©us
[i] =
LOWER_BOUND
; 
	}
}

466 
boﬁ
 
	$is_‰ì
(
i
Ë{  
Æpha_°©us
[i] =
FREE
; 
	}
}

467 
sw≠_ödex
(
i
, 
j
);

468 
ªc⁄°ru˘_gødõ¡
();

469 
vútuÆ
 
£À˘_w‹kög_£t
(&
i
, &
j
);

470 
vútuÆ
 
ˇlcuœã_rho
();

471 
vútuÆ
 
do_shrökög
();

472 
	g¥iv©e
:

473 
boﬁ
 
be_shrunk
(
i
, 
Gmax1
, 
Gmax2
);

476 
	gSﬁvî
::
	$sw≠_ödex
(
i
, 
j
)

478 
Q
->
	`sw≠_ödex
(
i
,
j
);

479 
	`sw≠
(
y
[
i
],y[
j
]);

480 
	`sw≠
(
G
[
i
],G[
j
]);

481 
	`sw≠
(
Æpha_°©us
[
i
],Æpha_°©us[
j
]);

482 
	`sw≠
(
Æpha
[
i
],Æpha[
j
]);

483 
	`sw≠
(
p
[
i
],p[
j
]);

484 
	`sw≠
(
a˘ive_£t
[
i
],a˘ive_£t[
j
]);

485 
	`sw≠
(
G_b¨
[
i
],G_b¨[
j
]);

486 
	}
}

488 
	gSﬁvî
::
	$ªc⁄°ru˘_gødõ¡
()

492 if(
a˘ive_size
 =
l
) ;

494 
i
,
j
;

495 
ƒ_‰ì
 = 0;

497 
j
=
a˘ive_size
;j<
l
;j++)

498 
G
[
j
] = 
G_b¨
[j] + 
p
[j];

500 
j
=0;j<
a˘ive_size
;j++)

501 if(
	`is_‰ì
(
j
))

502 
ƒ_‰ì
++;

504 if(2*
ƒ_‰ì
 < 
a˘ive_size
)

505 
	`öfo
("\nWARNING: using -h 0 may be faster\n");

507 i‡(
ƒ_‰ì
*
l
 > 2*
a˘ive_size
*(l-active_size))

509 
i
=
a˘ive_size
;i<
l
;i++)

511 c⁄° 
QÊﬂt
 *
Q_i
 = 
Q
->
	`gë_Q
(
i
,
a˘ive_size
);

512 
j
=0;j<
a˘ive_size
;j++)

513 if(
	`is_‰ì
(
j
))

514 
G
[
i
] +
Æpha
[
j
] * 
Q_i
[j];

519 
i
=0;i<
a˘ive_size
;i++)

520 if(
	`is_‰ì
(
i
))

522 c⁄° 
QÊﬂt
 *
Q_i
 = 
Q
->
	`gë_Q
(
i
,
l
);

523 
Æpha_i
 = 
Æpha
[
i
];

524 
j
=
a˘ive_size
;j<
l
;j++)

525 
G
[
j
] +
Æpha_i
 * 
Q_i
[j];

528 
	}
}

530 
	gSﬁvî
::
	$Sﬁve
(
l
, c⁄° 
QM©rix
& 
Q
, c⁄° *
p_
, c⁄° 
sch¨
 *
y_
,

531 *
Æpha_
, 
Cp
, 
Cn
, 
ïs
,

532 
Sﬁuti⁄Info
* 
si
, 
shrökög
)

534 
this
->
l
 =Ü;

535 
this
->
Q
 = &Q;

536 
QD
=
Q
.
	`gë_QD
();

537 
	`˛⁄e
(
p
, 
p_
,
l
);

538 
	`˛⁄e
(
y
, 
y_
,
l
);

539 
	`˛⁄e
(
Æpha
,
Æpha_
,
l
);

540 
this
->
Cp
 = Cp;

541 
this
->
Cn
 = Cn;

542 
this
->
ïs
 =Éps;

543 
unshrök
 = 
Ál£
;

547 
Æpha_°©us
 = 
√w
 [
l
];

548 
i
=0;i<
l
;i++)

549 
	`upd©e_Æpha_°©us
(
i
);

554 
a˘ive_£t
 = 
√w
 [
l
];

555 
i
=0;i<
l
;i++)

556 
a˘ive_£t
[
i
] = i;

557 
a˘ive_size
 = 
l
;

562 
G
 = 
√w
 [
l
];

563 
G_b¨
 = 
√w
 [
l
];

564 
i
;

565 
i
=0;i<
l
;i++)

567 
G
[
i
] = 
p
[i];

568 
G_b¨
[
i
] = 0;

570 
i
=0;i<
l
;i++)

571 if(!
	`is_lowî_bound
(
i
))

573 c⁄° 
QÊﬂt
 *
Q_i
 = 
Q
.
	`gë_Q
(
i
,
l
);

574 
Æpha_i
 = 
Æpha
[
i
];

575 
j
;

576 
j
=0;j<
l
;j++)

577 
G
[
j
] +
Æpha_i
*
Q_i
[j];

578 if(
	`is_uµî_bound
(
i
))

579 
j
=0;j<
l
;j++)

580 
G_b¨
[
j
] +
	`gë_C
(
i
Ë* 
Q_i
[j];

586 
ôî
 = 0;

587 
max_ôî
 = 
	`max
(10000000, 
l
>
INT_MAX
/100 ? INT_MAX : 100*l);

588 
cou¡î
 = 
	`mö
(
l
,1000)+1;

590 
ôî
 < 
max_ôî
)

594 if(--
cou¡î
 == 0)

596 
cou¡î
 = 
	`mö
(
l
,1000);

597 if(
shrökög
Ë
	`do_shrökög
();

598 
	`öfo
(".");

601 
i
,
j
;

602 if(
	`£À˘_w‹kög_£t
(
i
,
j
)!=0)

605 
	`ªc⁄°ru˘_gødõ¡
();

607 
a˘ive_size
 = 
l
;

608 
	`öfo
("*");

609 if(
	`£À˘_w‹kög_£t
(
i
,
j
)!=0)

612 
cou¡î
 = 1;

615 ++
ôî
;

619 c⁄° 
QÊﬂt
 *
Q_i
 = 
Q
.
	`gë_Q
(
i
,
a˘ive_size
);

620 c⁄° 
QÊﬂt
 *
Q_j
 = 
Q
.
	`gë_Q
(
j
,
a˘ive_size
);

622 
C_i
 = 
	`gë_C
(
i
);

623 
C_j
 = 
	`gë_C
(
j
);

625 
ﬁd_Æpha_i
 = 
Æpha
[
i
];

626 
ﬁd_Æpha_j
 = 
Æpha
[
j
];

628 if(
y
[
i
]!=y[
j
])

630 
quad_c€f
 = 
QD
[
i
]+QD[
j
]+2*
Q_i
[j];

631 i‡(
quad_c€f
 <= 0)

632 
quad_c€f
 = 
TAU
;

633 
dñè
 = (-
G
[
i
]-G[
j
])/
quad_c€f
;

634 
diff
 = 
Æpha
[
i
] -áÕha[
j
];

635 
Æpha
[
i
] +
dñè
;

636 
Æpha
[
j
] +
dñè
;

638 if(
diff
 > 0)

640 if(
Æpha
[
j
] < 0)

642 
Æpha
[
j
] = 0;

643 
Æpha
[
i
] = 
diff
;

648 if(
Æpha
[
i
] < 0)

650 
Æpha
[
i
] = 0;

651 
Æpha
[
j
] = -
diff
;

654 if(
diff
 > 
C_i
 - 
C_j
)

656 if(
Æpha
[
i
] > 
C_i
)

658 
Æpha
[
i
] = 
C_i
;

659 
Æpha
[
j
] = 
C_i
 - 
diff
;

664 if(
Æpha
[
j
] > 
C_j
)

666 
Æpha
[
j
] = 
C_j
;

667 
Æpha
[
i
] = 
C_j
 + 
diff
;

673 
quad_c€f
 = 
QD
[
i
]+QD[
j
]-2*
Q_i
[j];

674 i‡(
quad_c€f
 <= 0)

675 
quad_c€f
 = 
TAU
;

676 
dñè
 = (
G
[
i
]-G[
j
])/
quad_c€f
;

677 
sum
 = 
Æpha
[
i
] +áÕha[
j
];

678 
Æpha
[
i
] -
dñè
;

679 
Æpha
[
j
] +
dñè
;

681 if(
sum
 > 
C_i
)

683 if(
Æpha
[
i
] > 
C_i
)

685 
Æpha
[
i
] = 
C_i
;

686 
Æpha
[
j
] = 
sum
 - 
C_i
;

691 if(
Æpha
[
j
] < 0)

693 
Æpha
[
j
] = 0;

694 
Æpha
[
i
] = 
sum
;

697 if(
sum
 > 
C_j
)

699 if(
Æpha
[
j
] > 
C_j
)

701 
Æpha
[
j
] = 
C_j
;

702 
Æpha
[
i
] = 
sum
 - 
C_j
;

707 if(
Æpha
[
i
] < 0)

709 
Æpha
[
i
] = 0;

710 
Æpha
[
j
] = 
sum
;

717 
dñè_Æpha_i
 = 
Æpha
[
i
] - 
ﬁd_Æpha_i
;

718 
dñè_Æpha_j
 = 
Æpha
[
j
] - 
ﬁd_Æpha_j
;

720 
k
=0;k<
a˘ive_size
;k++)

722 
G
[
k
] +
Q_i
[k]*
dñè_Æpha_i
 + 
Q_j
[k]*
dñè_Æpha_j
;

728 
boﬁ
 
ui
 = 
	`is_uµî_bound
(
i
);

729 
boﬁ
 
uj
 = 
	`is_uµî_bound
(
j
);

730 
	`upd©e_Æpha_°©us
(
i
);

731 
	`upd©e_Æpha_°©us
(
j
);

732 
k
;

733 if(
ui
 !
	`is_uµî_bound
(
i
))

735 
Q_i
 = 
Q
.
	`gë_Q
(
i
,
l
);

736 if(
ui
)

737 
k
=0;k<
l
;k++)

738 
G_b¨
[
k
] -
C_i
 * 
Q_i
[k];

740 
k
=0;k<
l
;k++)

741 
G_b¨
[
k
] +
C_i
 * 
Q_i
[k];

744 if(
uj
 !
	`is_uµî_bound
(
j
))

746 
Q_j
 = 
Q
.
	`gë_Q
(
j
,
l
);

747 if(
uj
)

748 
k
=0;k<
l
;k++)

749 
G_b¨
[
k
] -
C_j
 * 
Q_j
[k];

751 
k
=0;k<
l
;k++)

752 
G_b¨
[
k
] +
C_j
 * 
Q_j
[k];

757 if(
ôî
 >
max_ôî
)

759 if(
a˘ive_size
 < 
l
)

762 
	`ªc⁄°ru˘_gødõ¡
();

763 
a˘ive_size
 = 
l
;

764 
	`öfo
("*");

766 
	`öfo
("\nWARNING:Ñeaching maxÇumber of iterations");

771 
si
->
rho
 = 
	`ˇlcuœã_rho
();

775 
v
 = 0;

776 
i
;

777 
i
=0;i<
l
;i++)

778 
v
 +
Æpha
[
i
] * (
G
[i] + 
p
[i]);

780 
si
->
obj
 = 
v
/2;

785 
i
=0;i<
l
;i++)

786 
Æpha_
[
a˘ive_£t
[
i
]] = 
Æpha
[i];

797 
si
->
uµî_bound_p
 = 
Cp
;

798 
si
->
uµî_bound_n
 = 
Cn
;

800 
	`öfo
("\n›timiz©i⁄ föished, #ôî = %d\n",
ôî
);

802 
dñëe
[] 
p
;

803 
dñëe
[] 
y
;

804 
dñëe
[] 
Æpha
;

805 
dñëe
[] 
Æpha_°©us
;

806 
dñëe
[] 
a˘ive_£t
;

807 
dñëe
[] 
G
;

808 
dñëe
[] 
G_b¨
;

809 
	}
}

812 
	gSﬁvî
::
	$£À˘_w‹kög_£t
(&
out_i
, &
out_j
)

820 
Gmax
 = -
INF
;

821 
Gmax2
 = -
INF
;

822 
Gmax_idx
 = -1;

823 
Gmö_idx
 = -1;

824 
obj_diff_mö
 = 
INF
;

826 
t
=0;t<
a˘ive_size
;t++)

827 if(
y
[
t
]==+1)

829 if(!
	`is_uµî_bound
(
t
))

830 if(-
G
[
t
] >
Gmax
)

832 
Gmax
 = -
G
[
t
];

833 
Gmax_idx
 = 
t
;

838 if(!
	`is_lowî_bound
(
t
))

839 if(
G
[
t
] >
Gmax
)

841 
Gmax
 = 
G
[
t
];

842 
Gmax_idx
 = 
t
;

846 
i
 = 
Gmax_idx
;

847 c⁄° 
QÊﬂt
 *
Q_i
 = 
NULL
;

848 if(
i
 != -1)

849 
Q_i
 = 
Q
->
	`gë_Q
(
i
,
a˘ive_size
);

851 
j
=0;j<
a˘ive_size
;j++)

853 if(
y
[
j
]==+1)

855 i‡(!
	`is_lowî_bound
(
j
))

857 
gød_diff
=
Gmax
+
G
[
j
];

858 i‡(
G
[
j
] >
Gmax2
)

859 
Gmax2
 = 
G
[
j
];

860 i‡(
gød_diff
 > 0)

862 
obj_diff
;

863 
quad_c€f
 = 
QD
[
i
]+QD[
j
]-2.0*
y
[i]*
Q_i
[j];

864 i‡(
quad_c€f
 > 0)

865 
obj_diff
 = -(
gød_diff
*gød_diff)/
quad_c€f
;

867 
obj_diff
 = -(
gød_diff
*gød_diff)/
TAU
;

869 i‡(
obj_diff
 <
obj_diff_mö
)

871 
Gmö_idx
=
j
;

872 
obj_diff_mö
 = 
obj_diff
;

879 i‡(!
	`is_uµî_bound
(
j
))

881 
gød_diff

Gmax
-
G
[
j
];

882 i‡(-
G
[
j
] >
Gmax2
)

883 
Gmax2
 = -
G
[
j
];

884 i‡(
gød_diff
 > 0)

886 
obj_diff
;

887 
quad_c€f
 = 
QD
[
i
]+QD[
j
]+2.0*
y
[i]*
Q_i
[j];

888 i‡(
quad_c€f
 > 0)

889 
obj_diff
 = -(
gød_diff
*gød_diff)/
quad_c€f
;

891 
obj_diff
 = -(
gød_diff
*gød_diff)/
TAU
;

893 i‡(
obj_diff
 <
obj_diff_mö
)

895 
Gmö_idx
=
j
;

896 
obj_diff_mö
 = 
obj_diff
;

903 if(
Gmax
+
Gmax2
 < 
ïs
)

906 
out_i
 = 
Gmax_idx
;

907 
out_j
 = 
Gmö_idx
;

909 
	}
}

911 
boﬁ
 
	gSﬁvî
::
	$be_shrunk
(
i
, 
Gmax1
, 
Gmax2
)

913 if(
	`is_uµî_bound
(
i
))

915 if(
y
[
i
]==+1)

916 (-
G
[
i
] > 
Gmax1
);

918 (-
G
[
i
] > 
Gmax2
);

920 if(
	`is_lowî_bound
(
i
))

922 if(
y
[
i
]==+1)

923 (
G
[
i
] > 
Gmax2
);

925 (
G
[
i
] > 
Gmax1
);

928 (
Ál£
);

929 
	}
}

931 
	gSﬁvî
::
	$do_shrökög
()

933 
i
;

934 
Gmax1
 = -
INF
;

935 
Gmax2
 = -
INF
;

938 
i
=0;i<
a˘ive_size
;i++)

940 if(
y
[
i
]==+1)

942 if(!
	`is_uµî_bound
(
i
))

944 if(-
G
[
i
] >
Gmax1
)

945 
Gmax1
 = -
G
[
i
];

947 if(!
	`is_lowî_bound
(
i
))

949 if(
G
[
i
] >
Gmax2
)

950 
Gmax2
 = 
G
[
i
];

955 if(!
	`is_uµî_bound
(
i
))

957 if(-
G
[
i
] >
Gmax2
)

958 
Gmax2
 = -
G
[
i
];

960 if(!
	`is_lowî_bound
(
i
))

962 if(
G
[
i
] >
Gmax1
)

963 
Gmax1
 = 
G
[
i
];

968 if(
unshrök
 =
Ál£
 && 
Gmax1
 + 
Gmax2
 <
ïs
*10)

970 
unshrök
 = 
åue
;

971 
	`ªc⁄°ru˘_gødõ¡
();

972 
a˘ive_size
 = 
l
;

973 
	`öfo
("*");

976 
i
=0;i<
a˘ive_size
;i++)

977 i‡(
	`be_shrunk
(
i
, 
Gmax1
, 
Gmax2
))

979 
a˘ive_size
--;

980 
a˘ive_size
 > 
i
)

982 i‡(!
	`be_shrunk
(
a˘ive_size
, 
Gmax1
, 
Gmax2
))

984 
	`sw≠_ödex
(
i
,
a˘ive_size
);

987 
a˘ive_size
--;

990 
	}
}

992 
	gSﬁvî
::
	$ˇlcuœã_rho
()

994 
r
;

995 
ƒ_‰ì
 = 0;

996 
ub
 = 
INF
, 
lb
 = -INF, 
sum_‰ì
 = 0;

997 
i
=0;i<
a˘ive_size
;i++)

999 
yG
 = 
y
[
i
]*
G
[i];

1001 if(
	`is_uµî_bound
(
i
))

1003 if(
y
[
i
]==-1)

1004 
ub
 = 
	`mö
(ub,
yG
);

1006 
lb
 = 
	`max
÷b,
yG
);

1008 if(
	`is_lowî_bound
(
i
))

1010 if(
y
[
i
]==+1)

1011 
ub
 = 
	`mö
(ub,
yG
);

1013 
lb
 = 
	`max
÷b,
yG
);

1017 ++
ƒ_‰ì
;

1018 
sum_‰ì
 +
yG
;

1022 if(
ƒ_‰ì
>0)

1023 
r
 = 
sum_‰ì
/
ƒ_‰ì
;

1025 
r
 = (
ub
+
lb
)/2;

1027  
r
;

1028 
	}
}

1035 ˛as†
	cSﬁvî_NU
 : 
public
 
Sﬁvî


1037 
public
:

1038 
	$Sﬁvî_NU
() {}

1039 
	$Sﬁve
(
l
, c⁄° 
QM©rix
& 
Q
, c⁄° *
p
, c⁄° 
sch¨
 *
y
,

1040 *
Æpha
, 
Cp
, 
Cn
, 
ïs
,

1041 
Sﬁuti⁄Info
* 
si
, 
shrökög
)

1043 
this
->
si
 = si;

1044 
Sﬁvî
::
	`Sﬁve
(
l
,
Q
,
p
,
y
,
Æpha
,
Cp
,
Cn
,
ïs
,
si
,
shrökög
);

1045 
	}
}

1046 
	g¥iv©e
:

1047 
Sﬁuti⁄Info
 *
si
;

1048 
£À˘_w‹kög_£t
(&
i
, &
j
);

1049 
ˇlcuœã_rho
();

1050 
boﬁ
 
be_shrunk
(
i
, 
Gmax1
, 
Gmax2
, 
Gmax3
, 
Gmax4
);

1051 
do_shrökög
();

1055 
	gSﬁvî_NU
::
	$£À˘_w‹kög_£t
(&
out_i
, &
out_j
)

1063 
Gmaxp
 = -
INF
;

1064 
Gmaxp2
 = -
INF
;

1065 
Gmaxp_idx
 = -1;

1067 
Gmaxn
 = -
INF
;

1068 
Gmaxn2
 = -
INF
;

1069 
Gmaxn_idx
 = -1;

1071 
Gmö_idx
 = -1;

1072 
obj_diff_mö
 = 
INF
;

1074 
t
=0;t<
a˘ive_size
;t++)

1075 if(
y
[
t
]==+1)

1077 if(!
	`is_uµî_bound
(
t
))

1078 if(-
G
[
t
] >
Gmaxp
)

1080 
Gmaxp
 = -
G
[
t
];

1081 
Gmaxp_idx
 = 
t
;

1086 if(!
	`is_lowî_bound
(
t
))

1087 if(
G
[
t
] >
Gmaxn
)

1089 
Gmaxn
 = 
G
[
t
];

1090 
Gmaxn_idx
 = 
t
;

1094 
ù
 = 
Gmaxp_idx
;

1095 
ö
 = 
Gmaxn_idx
;

1096 c⁄° 
QÊﬂt
 *
Q_ù
 = 
NULL
;

1097 c⁄° 
QÊﬂt
 *
Q_ö
 = 
NULL
;

1098 if(
ù
 != -1)

1099 
Q_ù
 = 
Q
->
	`gë_Q
(
ù
,
a˘ive_size
);

1100 if(
ö
 != -1)

1101 
Q_ö
 = 
Q
->
	`gë_Q
(
ö
,
a˘ive_size
);

1103 
j
=0;j<
a˘ive_size
;j++)

1105 if(
y
[
j
]==+1)

1107 i‡(!
	`is_lowî_bound
(
j
))

1109 
gød_diff
=
Gmaxp
+
G
[
j
];

1110 i‡(
G
[
j
] >
Gmaxp2
)

1111 
Gmaxp2
 = 
G
[
j
];

1112 i‡(
gød_diff
 > 0)

1114 
obj_diff
;

1115 
quad_c€f
 = 
QD
[
ù
]+QD[
j
]-2*
Q_ù
[j];

1116 i‡(
quad_c€f
 > 0)

1117 
obj_diff
 = -(
gød_diff
*gød_diff)/
quad_c€f
;

1119 
obj_diff
 = -(
gød_diff
*gød_diff)/
TAU
;

1121 i‡(
obj_diff
 <
obj_diff_mö
)

1123 
Gmö_idx
=
j
;

1124 
obj_diff_mö
 = 
obj_diff
;

1131 i‡(!
	`is_uµî_bound
(
j
))

1133 
gød_diff
=
Gmaxn
-
G
[
j
];

1134 i‡(-
G
[
j
] >
Gmaxn2
)

1135 
Gmaxn2
 = -
G
[
j
];

1136 i‡(
gød_diff
 > 0)

1138 
obj_diff
;

1139 
quad_c€f
 = 
QD
[
ö
]+QD[
j
]-2*
Q_ö
[j];

1140 i‡(
quad_c€f
 > 0)

1141 
obj_diff
 = -(
gød_diff
*gød_diff)/
quad_c€f
;

1143 
obj_diff
 = -(
gød_diff
*gød_diff)/
TAU
;

1145 i‡(
obj_diff
 <
obj_diff_mö
)

1147 
Gmö_idx
=
j
;

1148 
obj_diff_mö
 = 
obj_diff
;

1155 if(
	`max
(
Gmaxp
+
Gmaxp2
,
Gmaxn
+
Gmaxn2
Ë< 
ïs
)

1158 i‡(
y
[
Gmö_idx
] == +1)

1159 
out_i
 = 
Gmaxp_idx
;

1161 
out_i
 = 
Gmaxn_idx
;

1162 
out_j
 = 
Gmö_idx
;

1165 
	}
}

1167 
boﬁ
 
	gSﬁvî_NU
::
	$be_shrunk
(
i
, 
Gmax1
, 
Gmax2
, 
Gmax3
, 
Gmax4
)

1169 if(
	`is_uµî_bound
(
i
))

1171 if(
y
[
i
]==+1)

1172 (-
G
[
i
] > 
Gmax1
);

1174 (-
G
[
i
] > 
Gmax4
);

1176 if(
	`is_lowî_bound
(
i
))

1178 if(
y
[
i
]==+1)

1179 (
G
[
i
] > 
Gmax2
);

1181 (
G
[
i
] > 
Gmax3
);

1184 (
Ál£
);

1185 
	}
}

1187 
	gSﬁvî_NU
::
	$do_shrökög
()

1189 
Gmax1
 = -
INF
;

1190 
Gmax2
 = -
INF
;

1191 
Gmax3
 = -
INF
;

1192 
Gmax4
 = -
INF
;

1195 
i
;

1196 
i
=0;i<
a˘ive_size
;i++)

1198 if(!
	`is_uµî_bound
(
i
))

1200 if(
y
[
i
]==+1)

1202 if(-
G
[
i
] > 
Gmax1
) Gmax1 = -G[i];

1204 if(-
G
[
i
] > 
Gmax4
) Gmax4 = -G[i];

1206 if(!
	`is_lowî_bound
(
i
))

1208 if(
y
[
i
]==+1)

1210 if(
G
[
i
] > 
Gmax2
) Gmax2 = G[i];

1212 if(
G
[
i
] > 
Gmax3
) Gmax3 = G[i];

1216 if(
unshrök
 =
Ál£
 && 
	`max
(
Gmax1
+
Gmax2
,
Gmax3
+
Gmax4
Ë<
ïs
*10)

1218 
unshrök
 = 
åue
;

1219 
	`ªc⁄°ru˘_gødõ¡
();

1220 
a˘ive_size
 = 
l
;

1223 
i
=0;i<
a˘ive_size
;i++)

1224 i‡(
	`be_shrunk
(
i
, 
Gmax1
, 
Gmax2
, 
Gmax3
, 
Gmax4
))

1226 
a˘ive_size
--;

1227 
a˘ive_size
 > 
i
)

1229 i‡(!
	`be_shrunk
(
a˘ive_size
, 
Gmax1
, 
Gmax2
, 
Gmax3
, 
Gmax4
))

1231 
	`sw≠_ödex
(
i
,
a˘ive_size
);

1234 
a˘ive_size
--;

1237 
	}
}

1239 
	gSﬁvî_NU
::
	$ˇlcuœã_rho
()

1241 
ƒ_‰ì1
 = 0,
ƒ_‰ì2
 = 0;

1242 
ub1
 = 
INF
, 
ub2
 = INF;

1243 
lb1
 = -
INF
, 
lb2
 = -INF;

1244 
sum_‰ì1
 = 0, 
sum_‰ì2
 = 0;

1246 
i
=0;i<
a˘ive_size
;i++)

1248 if(
y
[
i
]==+1)

1250 if(
	`is_uµî_bound
(
i
))

1251 
lb1
 = 
	`max
÷b1,
G
[
i
]);

1252 if(
	`is_lowî_bound
(
i
))

1253 
ub1
 = 
	`mö
(ub1,
G
[
i
]);

1256 ++
ƒ_‰ì1
;

1257 
sum_‰ì1
 +
G
[
i
];

1262 if(
	`is_uµî_bound
(
i
))

1263 
lb2
 = 
	`max
÷b2,
G
[
i
]);

1264 if(
	`is_lowî_bound
(
i
))

1265 
ub2
 = 
	`mö
(ub2,
G
[
i
]);

1268 ++
ƒ_‰ì2
;

1269 
sum_‰ì2
 +
G
[
i
];

1274 
r1
,
r2
;

1275 if(
ƒ_‰ì1
 > 0)

1276 
r1
 = 
sum_‰ì1
/
ƒ_‰ì1
;

1278 
r1
 = (
ub1
+
lb1
)/2;

1280 if(
ƒ_‰ì2
 > 0)

1281 
r2
 = 
sum_‰ì2
/
ƒ_‰ì2
;

1283 
r2
 = (
ub2
+
lb2
)/2;

1285 
si
->
r
 = (
r1
+
r2
)/2;

1286  (
r1
-
r2
)/2;

1287 
	}
}

1292 ˛as†
	cSVC_Q
: 
public
 
Kî√l


1294 
public
:

1295 
	$SVC_Q
(c⁄° 
svm_¥obÀm
& 
¥ob
, c⁄° 
svm_∑ømëî
& 
∑øm
, c⁄° 
sch¨
 *
y_
)

1296 :
	$Kî√l
(
¥ob
.
l
,Örob.
x
, 
∑øm
)

1298 
	`˛⁄e
(
y
,
y_
,
¥ob
.
l
);

1299 
ˇche
 = 
√w
 
	`Cache
(
¥ob
.
l
,()(
∑øm
.
ˇche_size
*(1<<20)));

1300 
QD
 = 
√w
 [
¥ob
.
l
];

1301 
i
=0;i<
¥ob
.
l
;i++)

1302 
QD
[
i
] = (
this
->*
kî√l_fun˘i⁄
)(i,i);

1305 
QÊﬂt
 *
	$gë_Q
(
i
, 
Àn
) const

1307 
QÊﬂt
 *
d©a
;

1308 
°¨t
, 
j
;

1309 if((
°¨t
 = 
ˇche
->
	`gë_d©a
(
i
,&
d©a
,
Àn
)) <Üen)

1311 
j
=
°¨t
;j<
Àn
;j++)

1312 
d©a
[
j
] = (
QÊﬂt
)(
y
[
i
]*y[j]*(
this
->*
kî√l_fun˘i⁄
)(i,j));

1314  
d©a
;

1315 
	}
}

1317 *
	$gë_QD
() const

1319  
QD
;

1320 
	}
}

1322 
	$sw≠_ödex
(
i
, 
j
) const

1324 
ˇche
->
	`sw≠_ödex
(
i
,
j
);

1325 
Kî√l
::
	`sw≠_ödex
(
i
,
j
);

1326 
	`sw≠
(
y
[
i
],y[
j
]);

1327 
	`sw≠
(
QD
[
i
],QD[
j
]);

1328 
	}
}

1330 ~
	$SVC_Q
()

1332 
dñëe
[] 
y
;

1333 
dñëe
 
ˇche
;

1334 
dñëe
[] 
QD
;

1335 
	}
}

1336 
	g¥iv©e
:

1337 
sch¨
 *
y
;

1338 
Cache
 *
	gˇche
;

1339 *
	gQD
;

1342 ˛as†
	cONE_CLASS_Q
: 
public
 
Kî√l


1344 
public
:

1345 
	$ONE_CLASS_Q
(c⁄° 
svm_¥obÀm
& 
¥ob
, c⁄° 
svm_∑ømëî
& 
∑øm
)

1346 :
	$Kî√l
(
¥ob
.
l
,Örob.
x
, 
∑øm
)

1348 
ˇche
 = 
√w
 
	`Cache
(
¥ob
.
l
,()(
∑øm
.
ˇche_size
*(1<<20)));

1349 
QD
 = 
√w
 [
¥ob
.
l
];

1350 
i
=0;i<
¥ob
.
l
;i++)

1351 
QD
[
i
] = (
this
->*
kî√l_fun˘i⁄
)(i,i);

1354 
QÊﬂt
 *
	$gë_Q
(
i
, 
Àn
) const

1356 
QÊﬂt
 *
d©a
;

1357 
°¨t
, 
j
;

1358 if((
°¨t
 = 
ˇche
->
	`gë_d©a
(
i
,&
d©a
,
Àn
)) <Üen)

1360 
j
=
°¨t
;j<
Àn
;j++)

1361 
d©a
[
j
] = (
QÊﬂt
)(
this
->*
kî√l_fun˘i⁄
)(
i
,j);

1363  
d©a
;

1364 
	}
}

1366 *
	$gë_QD
() const

1368  
QD
;

1369 
	}
}

1371 
	$sw≠_ödex
(
i
, 
j
) const

1373 
ˇche
->
	`sw≠_ödex
(
i
,
j
);

1374 
Kî√l
::
	`sw≠_ödex
(
i
,
j
);

1375 
	`sw≠
(
QD
[
i
],QD[
j
]);

1376 
	}
}

1378 ~
	$ONE_CLASS_Q
()

1380 
dñëe
 
ˇche
;

1381 
dñëe
[] 
QD
;

1382 
	}
}

1383 
	g¥iv©e
:

1384 
Cache
 *
ˇche
;

1385 *
	gQD
;

1388 ˛as†
	cSVR_Q
: 
public
 
Kî√l


1390 
public
:

1391 
	$SVR_Q
(c⁄° 
svm_¥obÀm
& 
¥ob
, c⁄° 
svm_∑ømëî
& 
∑øm
)

1392 :
	$Kî√l
(
¥ob
.
l
,Örob.
x
, 
∑øm
)

1394 
l
 = 
¥ob
.l;

1395 
ˇche
 = 
√w
 
	`Cache
(
l
,()(
∑øm
.
ˇche_size
*(1<<20)));

1396 
QD
 = 
√w
 [2*
l
];

1397 
sign
 = 
√w
 
sch¨
[2*
l
];

1398 
ödex
 = 
√w
 [2*
l
];

1399 
k
=0;k<
l
;k++)

1401 
sign
[
k
] = 1;

1402 
sign
[
k
+
l
] = -1;

1403 
ödex
[
k
] = k;

1404 
ödex
[
k
+
l
] = k;

1405 
QD
[
k
] = (
this
->*
kî√l_fun˘i⁄
)(k,k);

1406 
QD
[
k
+
l
] = QD[k];

1408 
buf„r
[0] = 
√w
 
QÊﬂt
[2*
l
];

1409 
buf„r
[1] = 
√w
 
QÊﬂt
[2*
l
];

1410 
√xt_buf„r
 = 0;

1413 
	$sw≠_ödex
(
i
, 
j
) const

1415 
	`sw≠
(
sign
[
i
],sign[
j
]);

1416 
	`sw≠
(
ödex
[
i
],ödex[
j
]);

1417 
	`sw≠
(
QD
[
i
],QD[
j
]);

1418 
	}
}

1420 
QÊﬂt
 *
	$gë_Q
(
i
, 
Àn
) const

1422 
QÊﬂt
 *
d©a
;

1423 
j
, 
ªÆ_i
 = 
ödex
[
i
];

1424 if(
ˇche
->
	`gë_d©a
(
ªÆ_i
,&
d©a
,
l
) <Ü)

1426 
j
=0;j<
l
;j++)

1427 
d©a
[
j
] = (
QÊﬂt
)(
this
->*
kî√l_fun˘i⁄
)(
ªÆ_i
,j);

1431 
QÊﬂt
 *
buf
 = 
buf„r
[
√xt_buf„r
];

1432 
√xt_buf„r
 = 1 -Çext_buffer;

1433 
sch¨
 
si
 = 
sign
[
i
];

1434 
j
=0;j<
Àn
;j++)

1435 
buf
[
j
] = (
QÊﬂt
Ë
si
 * (QÊﬂtË
sign
[j] * 
d©a
[
ödex
[j]];

1436  
buf
;

1437 
	}
}

1439 *
	$gë_QD
() const

1441  
QD
;

1442 
	}
}

1444 ~
	$SVR_Q
()

1446 
dñëe
 
ˇche
;

1447 
dñëe
[] 
sign
;

1448 
dñëe
[] 
ödex
;

1449 
dñëe
[] 
buf„r
[0];

1450 
dñëe
[] 
buf„r
[1];

1451 
dñëe
[] 
QD
;

1452 
	}
}

1453 
	g¥iv©e
:

1454 
l
;

1455 
Cache
 *
	gˇche
;

1456 
sch¨
 *
	gsign
;

1457 *
	gödex
;

1458 
muèbÀ
 
	g√xt_buf„r
;

1459 
QÊﬂt
 *
	gbuf„r
[2];

1460 *
	gQD
;

1466 
	$sﬁve_c_svc
(

1467 c⁄° 
svm_¥obÀm
 *
¥ob
, c⁄° 
svm_∑ømëî
* 
∑øm
,

1468 *
Æpha
, 
Sﬁvî
::
Sﬁuti⁄Info
* 
si
, 
Cp
, 
Cn
)

1470 
l
 = 
¥ob
->l;

1471 *
möus_⁄es
 = 
√w
 [
l
];

1472 
sch¨
 *
y
 = 
√w
 sch¨[
l
];

1474 
i
;

1476 
i
=0;i<
l
;i++)

1478 
Æpha
[
i
] = 0;

1479 
möus_⁄es
[
i
] = -1;

1480 if(
¥ob
->
y
[
i
] > 0) y[i] = +1; y[i] = -1;

1483 
Sﬁvî
 
s
;

1484 
s
.
	`Sﬁve
(
l
, 
	`SVC_Q
(*
¥ob
,*
∑øm
,
y
), 
möus_⁄es
, y,

1485 
Æpha
, 
Cp
, 
Cn
, 
∑øm
->
ïs
, 
si
,Ö¨am->
shrökög
);

1487 
sum_Æpha
=0;

1488 
i
=0;i<
l
;i++)

1489 
sum_Æpha
 +
Æpha
[
i
];

1491 i‡(
Cp
==
Cn
)

1492 
	`öfo
("nu = %f\n", 
sum_Æpha
/(
Cp
*
¥ob
->
l
));

1494 
i
=0;i<
l
;i++)

1495 
Æpha
[
i
] *
y
[i];

1497 
dñëe
[] 
möus_⁄es
;

1498 
dñëe
[] 
y
;

1499 
	}
}

1501 
	$sﬁve_nu_svc
(

1502 c⁄° 
svm_¥obÀm
 *
¥ob
, c⁄° 
svm_∑ømëî
 *
∑øm
,

1503 *
Æpha
, 
Sﬁvî
::
Sﬁuti⁄Info
* 
si
)

1505 
i
;

1506 
l
 = 
¥ob
->l;

1507 
nu
 = 
∑øm
->nu;

1509 
sch¨
 *
y
 = 
√w
 sch¨[
l
];

1511 
i
=0;i<
l
;i++)

1512 if(
¥ob
->
y
[
i
]>0)

1513 
y
[
i
] = +1;

1515 
y
[
i
] = -1;

1517 
sum_pos
 = 
nu
*
l
/2;

1518 
sum_√g
 = 
nu
*
l
/2;

1520 
i
=0;i<
l
;i++)

1521 if(
y
[
i
] == +1)

1523 
Æpha
[
i
] = 
	`mö
(1.0,
sum_pos
);

1524 
sum_pos
 -
Æpha
[
i
];

1528 
Æpha
[
i
] = 
	`mö
(1.0,
sum_√g
);

1529 
sum_√g
 -
Æpha
[
i
];

1532 *
zîos
 = 
√w
 [
l
];

1534 
i
=0;i<
l
;i++)

1535 
zîos
[
i
] = 0;

1537 
Sﬁvî_NU
 
s
;

1538 
s
.
	`Sﬁve
(
l
, 
	`SVC_Q
(*
¥ob
,*
∑øm
,
y
), 
zîos
, y,

1539 
Æpha
, 1.0, 1.0, 
∑øm
->
ïs
, 
si
,Ö¨am->
shrökög
);

1540 
r
 = 
si
->r;

1542 
	`öfo
("C = %f\n",1/
r
);

1544 
i
=0;i<
l
;i++)

1545 
Æpha
[
i
] *
y
[i]/
r
;

1547 
si
->
rho
 /
r
;

1548 
si
->
obj
 /(
r
*r);

1549 
si
->
uµî_bound_p
 = 1/
r
;

1550 
si
->
uµî_bound_n
 = 1/
r
;

1552 
dñëe
[] 
y
;

1553 
dñëe
[] 
zîos
;

1554 
	}
}

1556 
	$sﬁve_⁄e_˛ass
(

1557 c⁄° 
svm_¥obÀm
 *
¥ob
, c⁄° 
svm_∑ømëî
 *
∑øm
,

1558 *
Æpha
, 
Sﬁvî
::
Sﬁuti⁄Info
* 
si
)

1560 
l
 = 
¥ob
->l;

1561 *
zîos
 = 
√w
 [
l
];

1562 
sch¨
 *
⁄es
 = 
√w
 sch¨[
l
];

1563 
i
;

1565 
n
 = ()(
∑øm
->
nu
*
¥ob
->
l
);

1567 
i
=0;i<
n
;i++)

1568 
Æpha
[
i
] = 1;

1569 if(
n
<
¥ob
->
l
)

1570 
Æpha
[
n
] = 
∑øm
->
nu
 * 
¥ob
->
l
 -Ç;

1571 
i
=
n
+1;i<
l
;i++)

1572 
Æpha
[
i
] = 0;

1574 
i
=0;i<
l
;i++)

1576 
zîos
[
i
] = 0;

1577 
⁄es
[
i
] = 1;

1580 
Sﬁvî
 
s
;

1581 
s
.
	`Sﬁve
(
l
, 
	`ONE_CLASS_Q
(*
¥ob
,*
∑øm
), 
zîos
, 
⁄es
,

1582 
Æpha
, 1.0, 1.0, 
∑øm
->
ïs
, 
si
,Ö¨am->
shrökög
);

1584 
dñëe
[] 
zîos
;

1585 
dñëe
[] 
⁄es
;

1586 
	}
}

1588 
	$sﬁve_ïsû⁄_svr
(

1589 c⁄° 
svm_¥obÀm
 *
¥ob
, c⁄° 
svm_∑ømëî
 *
∑øm
,

1590 *
Æpha
, 
Sﬁvî
::
Sﬁuti⁄Info
* 
si
)

1592 
l
 = 
¥ob
->l;

1593 *
Æpha2
 = 
√w
 [2*
l
];

1594 *
löór_ãrm
 = 
√w
 [2*
l
];

1595 
sch¨
 *
y
 = 
√w
 sch¨[2*
l
];

1596 
i
;

1598 
i
=0;i<
l
;i++)

1600 
Æpha2
[
i
] = 0;

1601 
löór_ãrm
[
i
] = 
∑øm
->
p
 - 
¥ob
->
y
[i];

1602 
y
[
i
] = 1;

1604 
Æpha2
[
i
+
l
] = 0;

1605 
löór_ãrm
[
i
+
l
] = 
∑øm
->
p
 + 
¥ob
->
y
[i];

1606 
y
[
i
+
l
] = -1;

1609 
Sﬁvî
 
s
;

1610 
s
.
	`Sﬁve
(2*
l
, 
	`SVR_Q
(*
¥ob
,*
∑øm
), 
löór_ãrm
, 
y
,

1611 
Æpha2
, 
∑øm
->
C
,Ö¨am->C,Ö¨am->
ïs
, 
si
,Ö¨am->
shrökög
);

1613 
sum_Æpha
 = 0;

1614 
i
=0;i<
l
;i++)

1616 
Æpha
[
i
] = 
Æpha2
[i] -áÕha2[i+
l
];

1617 
sum_Æpha
 +
	`Ábs
(
Æpha
[
i
]);

1619 
	`öfo
("nu = %f\n",
sum_Æpha
/(
∑øm
->
C
*
l
));

1621 
dñëe
[] 
Æpha2
;

1622 
dñëe
[] 
löór_ãrm
;

1623 
dñëe
[] 
y
;

1624 
	}
}

1626 
	$sﬁve_nu_svr
(

1627 c⁄° 
svm_¥obÀm
 *
¥ob
, c⁄° 
svm_∑ømëî
 *
∑øm
,

1628 *
Æpha
, 
Sﬁvî
::
Sﬁuti⁄Info
* 
si
)

1630 
l
 = 
¥ob
->l;

1631 
C
 = 
∑øm
->C;

1632 *
Æpha2
 = 
√w
 [2*
l
];

1633 *
löór_ãrm
 = 
√w
 [2*
l
];

1634 
sch¨
 *
y
 = 
√w
 sch¨[2*
l
];

1635 
i
;

1637 
sum
 = 
C
 * 
∑øm
->
nu
 * 
l
 / 2;

1638 
i
=0;i<
l
;i++)

1640 
Æpha2
[
i
] =áÕha2[i+
l
] = 
	`mö
(
sum
,
C
);

1641 
sum
 -
Æpha2
[
i
];

1643 
löór_ãrm
[
i
] = - 
¥ob
->
y
[i];

1644 
y
[
i
] = 1;

1646 
löór_ãrm
[
i
+
l
] = 
¥ob
->
y
[i];

1647 
y
[
i
+
l
] = -1;

1650 
Sﬁvî_NU
 
s
;

1651 
s
.
	`Sﬁve
(2*
l
, 
	`SVR_Q
(*
¥ob
,*
∑øm
), 
löór_ãrm
, 
y
,

1652 
Æpha2
, 
C
, C, 
∑øm
->
ïs
, 
si
,Ö¨am->
shrökög
);

1654 
	`öfo
("ïsû⁄ = %f\n",-
si
->
r
);

1656 
i
=0;i<
l
;i++)

1657 
Æpha
[
i
] = 
Æpha2
[i] -áÕha2[i+
l
];

1659 
dñëe
[] 
Æpha2
;

1660 
dñëe
[] 
löór_ãrm
;

1661 
dñëe
[] 
y
;

1662 
	}
}

1667 
	sdecisi⁄_fun˘i⁄


1669 *
	mÆpha
;

1670 
	mrho
;

1673 
decisi⁄_fun˘i⁄
 
	$svm_åaö_⁄e
(

1674 c⁄° 
svm_¥obÀm
 *
¥ob
, c⁄° 
svm_∑ømëî
 *
∑øm
,

1675 
Cp
, 
Cn
)

1677 *
Æpha
 = 
	`MÆloc
(,
¥ob
->
l
);

1678 
Sﬁvî
::
Sﬁuti⁄Info
 
si
;

1679 
∑øm
->
svm_ty≥
)

1681 
C_SVC
:

1682 
	`sﬁve_c_svc
(
¥ob
,
∑øm
,
Æpha
,&
si
,
Cp
,
Cn
);

1684 
NU_SVC
:

1685 
	`sﬁve_nu_svc
(
¥ob
,
∑øm
,
Æpha
,&
si
);

1687 
ONE_CLASS
:

1688 
	`sﬁve_⁄e_˛ass
(
¥ob
,
∑øm
,
Æpha
,&
si
);

1690 
EPSILON_SVR
:

1691 
	`sﬁve_ïsû⁄_svr
(
¥ob
,
∑øm
,
Æpha
,&
si
);

1693 
NU_SVR
:

1694 
	`sﬁve_nu_svr
(
¥ob
,
∑øm
,
Æpha
,&
si
);

1698 
	`öfo
("obj = %f,Ñhÿ%f\n",
si
.
obj
,si.
rho
);

1702 
nSV
 = 0;

1703 
nBSV
 = 0;

1704 
i
=0;i<
¥ob
->
l
;i++)

1706 if(
	`Ábs
(
Æpha
[
i
]) > 0)

1708 ++
nSV
;

1709 if(
¥ob
->
y
[
i
] > 0)

1711 if(
	`Ábs
(
Æpha
[
i
]Ë>
si
.
uµî_bound_p
)

1712 ++
nBSV
;

1716 if(
	`Ábs
(
Æpha
[
i
]Ë>
si
.
uµî_bound_n
)

1717 ++
nBSV
;

1722 
	`öfo
("nSV = %d,ÇBSV = %d\n",
nSV
,
nBSV
);

1724 
decisi⁄_fun˘i⁄
 
f
;

1725 
f
.
Æpha
 =álpha;

1726 
f
.
rho
 = 
si
.rho;

1727  
f
;

1728 
	}
}

1731 
	$sigmoid_åaö
(

1732 
l
, c⁄° *
dec_vÆues
, c⁄° *
œbñs
,

1733 & 
A
, & 
B
)

1735 
¥i‹1
=0, 
¥i‹0
 = 0;

1736 
i
;

1738 
i
=0;i<
l
;i++)

1739 i‡(
œbñs
[
i
] > 0Ë
¥i‹1
+=1;

1740 
¥i‹0
+=1;

1742 
max_ôî
=100;

1743 
mö_°ï
=1e-10;

1744 
sigma
=1e-12;

1745 
ïs
=1e-5;

1746 
hiT¨gë
=(
¥i‹1
+1.0)/(prior1+2.0);

1747 
loT¨gë
=1/(
¥i‹0
+2.0);

1748 *
t
=
	`MÆloc
(,
l
);

1749 
fApB
,
p
,
q
,
h11
,
h22
,
h21
,
g1
,
g2
,
dë
,
dA
,
dB
,
gd
,
°ïsize
;

1750 
√wA
,
√wB
,
√wf
,
d1
,
d2
;

1751 
ôî
;

1754 
A
=0.0; 
B
=
	`log
((
¥i‹0
+1.0)/(
¥i‹1
+1.0));

1755 
fvÆ
 = 0.0;

1757 
i
=0;i<
l
;i++)

1759 i‡(
œbñs
[
i
]>0Ë
t
[i]=
hiT¨gë
;

1760 
t
[
i
]=
loT¨gë
;

1761 
fApB
 = 
dec_vÆues
[
i
]*
A
+
B
;

1762 i‡(
fApB
>=0)

1763 
fvÆ
 +
t
[
i
]*
fApB
 + 
	`log
(1+
	`exp
(-fApB));

1765 
fvÆ
 +(
t
[
i
] - 1)*
fApB
 +
	`log
(1+
	`exp
(fApB));

1767 
ôî
=0;ôî<
max_ôî
;iter++)

1770 
h11
=
sigma
;

1771 
h22
=
sigma
;

1772 
h21
=0.0;
g1
=0.0;
g2
=0.0;

1773 
i
=0;i<
l
;i++)

1775 
fApB
 = 
dec_vÆues
[
i
]*
A
+
B
;

1776 i‡(
fApB
 >= 0)

1778 
p
=
	`exp
(-
fApB
)/(1.0+exp(-fApB));

1779 
q
=1.0/(1.0+
	`exp
(-
fApB
));

1783 
p
=1.0/(1.0+
	`exp
(
fApB
));

1784 
q
=
	`exp
(
fApB
)/(1.0+exp(fApB));

1786 
d2
=
p
*
q
;

1787 
h11
+=
dec_vÆues
[
i
]*dec_vÆues[i]*
d2
;

1788 
h22
+=
d2
;

1789 
h21
+=
dec_vÆues
[
i
]*
d2
;

1790 
d1
=
t
[
i
]-
p
;

1791 
g1
+=
dec_vÆues
[
i
]*
d1
;

1792 
g2
+=
d1
;

1796 i‡(
	`Ábs
(
g1
)<
ïs
 && fabs(
g2
)<eps)

1800 
dë
=
h11
*
h22
-
h21
*h21;

1801 
dA
=-(
h22
*
g1
 - 
h21
 * 
g2
Ë/ 
dë
;

1802 
dB
=-(-
h21
*
g1
+ 
h11
 * 
g2
Ë/ 
dë
;

1803 
gd
=
g1
*
dA
+
g2
*
dB
;

1806 
°ïsize
 = 1;

1807 
°ïsize
 >
mö_°ï
)

1809 
√wA
 = 
A
 + 
°ïsize
 * 
dA
;

1810 
√wB
 = 
B
 + 
°ïsize
 * 
dB
;

1813 
√wf
 = 0.0;

1814 
i
=0;i<
l
;i++)

1816 
fApB
 = 
dec_vÆues
[
i
]*
√wA
+
√wB
;

1817 i‡(
fApB
 >= 0)

1818 
√wf
 +
t
[
i
]*
fApB
 + 
	`log
(1+
	`exp
(-fApB));

1820 
√wf
 +(
t
[
i
] - 1)*
fApB
 +
	`log
(1+
	`exp
(fApB));

1823 i‡(
√wf
<
fvÆ
+0.0001*
°ïsize
*
gd
)

1825 
A
=
√wA
;
B
=
√wB
;
fvÆ
=
√wf
;

1829 
°ïsize
 = stepsize / 2.0;

1832 i‡(
°ïsize
 < 
mö_°ï
)

1834 
	`öfo
("Line search fails inÅwo-classÖrobabilityÉstimates\n");

1839 i‡(
ôî
>=
max_ôî
)

1840 
	`öfo
("Reaching maximal iterations inÅwo-classÖrobabilityÉstimates\n");

1841 
	`‰ì
(
t
);

1842 
	}
}

1844 
	$sigmoid_¥edi˘
(
decisi⁄_vÆue
, 
A
, 
B
)

1846 
fApB
 = 
decisi⁄_vÆue
*
A
+
B
;

1848 i‡(
fApB
 >= 0)

1849  
	`exp
(-
fApB
)/(1.0+exp(-fApB));

1851  1.0/(1+
	`exp
(
fApB
)) ;

1852 
	}
}

1855 
	$mu…i˛ass_¥obabûôy
(
k
, **
r
, *
p
)

1857 
t
,
j
;

1858 
ôî
 = 0, 
max_ôî
=
	`max
(100,
k
);

1859 **
Q
=
	`MÆloc
(*,
k
);

1860 *
Qp
=
	`MÆloc
(,
k
);

1861 
pQp
, 
ïs
=0.005/
k
;

1863 
t
=0;t<
k
;t++)

1865 
p
[
t
]=1.0/
k
;

1866 
Q
[
t
]=
	`MÆloc
(,
k
);

1867 
Q
[
t
][t]=0;

1868 
j
=0;j<
t
;j++)

1870 
Q
[
t
][t]+=
r
[
j
][t]*r[j][t];

1871 
Q
[
t
][
j
]=Q[j][t];

1873 
j
=
t
+1;j<
k
;j++)

1875 
Q
[
t
][t]+=
r
[
j
][t]*r[j][t];

1876 
Q
[
t
][
j
]=-
r
[j][t]*r[t][j];

1879 
ôî
=0;ôî<
max_ôî
;iter++)

1882 
pQp
=0;

1883 
t
=0;t<
k
;t++)

1885 
Qp
[
t
]=0;

1886 
j
=0;j<
k
;j++)

1887 
Qp
[
t
]+=
Q
[t][
j
]*
p
[j];

1888 
pQp
+=
p
[
t
]*
Qp
[t];

1890 
max_îr‹
=0;

1891 
t
=0;t<
k
;t++)

1893 
îr‹
=
	`Ábs
(
Qp
[
t
]-
pQp
);

1894 i‡(
îr‹
>
max_îr‹
)

1895 
max_îr‹
=
îr‹
;

1897 i‡(
max_îr‹
<
ïs
) ;

1899 
t
=0;t<
k
;t++)

1901 
diff
=(-
Qp
[
t
]+
pQp
)/
Q
[t][t];

1902 
p
[
t
]+=
diff
;

1903 
pQp
=’Qp+
diff
*(diff*
Q
[
t
][t]+2*
Qp
[t]))/(1+diff)/(1+diff);

1904 
j
=0;j<
k
;j++)

1906 
Qp
[
j
]=(Qp[j]+
diff
*
Q
[
t
][j])/(1+diff);

1907 
p
[
j
]/=(1+
diff
);

1911 i‡(
ôî
>=
max_ôî
)

1912 
	`öfo
("Exceeds max_iter in multiclass_prob\n");

1913 
t
=0;t<
k
;t++Ë
	`‰ì
(
Q
[t]);

1914 
	`‰ì
(
Q
);

1915 
	`‰ì
(
Qp
);

1916 
	}
}

1919 
	$svm_bö¨y_svc_¥obabûôy
(

1920 c⁄° 
svm_¥obÀm
 *
¥ob
, c⁄° 
svm_∑ømëî
 *
∑øm
,

1921 
Cp
, 
Cn
, & 
¥obA
, & 
¥obB
)

1923 
i
;

1924 
ƒ_fﬁd
 = 5;

1925 *
≥rm
 = 
	`MÆloc
(,
¥ob
->
l
);

1926 *
dec_vÆues
 = 
	`MÆloc
(,
¥ob
->
l
);

1929 
i
=0;i<
¥ob
->
l
;i++Ë
≥rm
[i]=i;

1930 
i
=0;i<
¥ob
->
l
;i++)

1932 
j
 = 
i
+
	`ønd
()%(
¥ob
->
l
-i);

1933 
	`sw≠
(
≥rm
[
i
],≥rm[
j
]);

1935 
i
=0;i<
ƒ_fﬁd
;i++)

1937 
begö
 = 
i
*
¥ob
->
l
/
ƒ_fﬁd
;

1938 
íd
 = (
i
+1)*
¥ob
->
l
/
ƒ_fﬁd
;

1939 
j
,
k
;

1940 
svm_¥obÀm
 
sub¥ob
;

1942 
sub¥ob
.
l
 = 
¥ob
->l-(
íd
-
begö
);

1943 
sub¥ob
.
x
 = 
	`MÆloc
(
svm_node
*,sub¥ob.
l
);

1944 
sub¥ob
.
y
 = 
	`MÆloc
(,sub¥ob.
l
);

1946 
k
=0;

1947 
j
=0;j<
begö
;j++)

1949 
sub¥ob
.
x
[
k
] = 
¥ob
->x[
≥rm
[
j
]];

1950 
sub¥ob
.
y
[
k
] = 
¥ob
->y[
≥rm
[
j
]];

1951 ++
k
;

1953 
j
=
íd
;j<
¥ob
->
l
;j++)

1955 
sub¥ob
.
x
[
k
] = 
¥ob
->x[
≥rm
[
j
]];

1956 
sub¥ob
.
y
[
k
] = 
¥ob
->y[
≥rm
[
j
]];

1957 ++
k
;

1959 
p_cou¡
=0,
n_cou¡
=0;

1960 
j
=0;j<
k
;j++)

1961 if(
sub¥ob
.
y
[
j
]>0)

1962 
p_cou¡
++;

1964 
n_cou¡
++;

1966 if(
p_cou¡
==0 && 
n_cou¡
==0)

1967 
j
=
begö
;j<
íd
;j++)

1968 
dec_vÆues
[
≥rm
[
j
]] = 0;

1969 if(
p_cou¡
 > 0 && 
n_cou¡
 == 0)

1970 
j
=
begö
;j<
íd
;j++)

1971 
dec_vÆues
[
≥rm
[
j
]] = 1;

1972 if(
p_cou¡
 =0 && 
n_cou¡
 > 0)

1973 
j
=
begö
;j<
íd
;j++)

1974 
dec_vÆues
[
≥rm
[
j
]] = -1;

1977 
svm_∑ømëî
 
sub∑øm
 = *
∑øm
;

1978 
sub∑øm
.
¥obabûôy
=0;

1979 
sub∑øm
.
C
=1.0;

1980 
sub∑øm
.
ƒ_weight
=2;

1981 
sub∑øm
.
weight_œbñ
 = 
	`MÆloc
(,2);

1982 
sub∑øm
.
weight
 = 
	`MÆloc
(,2);

1983 
sub∑øm
.
weight_œbñ
[0]=+1;

1984 
sub∑øm
.
weight_œbñ
[1]=-1;

1985 
sub∑øm
.
weight
[0]=
Cp
;

1986 
sub∑øm
.
weight
[1]=
Cn
;

1987 
svm_modñ
 *
submodñ
 = 
	`svm_åaö
(&
sub¥ob
,&
sub∑øm
);

1988 
j
=
begö
;j<
íd
;j++)

1990 
	`svm_¥edi˘_vÆues
(
submodñ
,
¥ob
->
x
[
≥rm
[
j
]],&(
dec_vÆues
[perm[j]]));

1992 
dec_vÆues
[
≥rm
[
j
]] *
submodñ
->
œbñ
[0];

1994 
	`svm_‰ì_™d_de°roy_modñ
(&
submodñ
);

1995 
	`svm_de°roy_∑øm
(&
sub∑øm
);

1997 
	`‰ì
(
sub¥ob
.
x
);

1998 
	`‰ì
(
sub¥ob
.
y
);

2000 
	`sigmoid_åaö
(
¥ob
->
l
,
dec_vÆues
,¥ob->
y
,
¥obA
,
¥obB
);

2001 
	`‰ì
(
dec_vÆues
);

2002 
	`‰ì
(
≥rm
);

2003 
	}
}

2006 
	$svm_svr_¥obabûôy
(

2007 c⁄° 
svm_¥obÀm
 *
¥ob
, c⁄° 
svm_∑ømëî
 *
∑øm
)

2009 
i
;

2010 
ƒ_fﬁd
 = 5;

2011 *
ymv
 = 
	`MÆloc
(,
¥ob
->
l
);

2012 
m´
 = 0;

2014 
svm_∑ømëî
 
√w∑øm
 = *
∑øm
;

2015 
√w∑øm
.
¥obabûôy
 = 0;

2016 
	`svm_¸oss_vÆid©i⁄
(
¥ob
,&
√w∑øm
,
ƒ_fﬁd
,
ymv
);

2017 
i
=0;i<
¥ob
->
l
;i++)

2019 
ymv
[
i
]=
¥ob
->
y
[i]-ymv[i];

2020 
m´
 +
	`Ábs
(
ymv
[
i
]);

2022 
m´
 /
¥ob
->
l
;

2023 
°d
=
	`sqπ
(2*
m´
*mae);

2024 
cou¡
=0;

2025 
m´
=0;

2026 
i
=0;i<
¥ob
->
l
;i++)

2027 i‡(
	`Ábs
(
ymv
[
i
]Ë> 5*
°d
)

2028 
cou¡
=count+1;

2030 
m´
+=
	`Ábs
(
ymv
[
i
]);

2031 
m´
 /(
¥ob
->
l
-
cou¡
);

2032 
	`öfo
("Prob. modñ f‹Åe° d©a:Å¨gë vÆuê¥edi˘ed vÆuê+ z,\nz: L≠œ˚ di°ributi⁄É^(-|z|/sigma)/(2sigma),sigma%g\n",
m´
);

2033 
	`‰ì
(
ymv
);

2034  
m´
;

2035 
	}
}

2040 
	$svm_group_˛as£s
(c⁄° 
svm_¥obÀm
 *
¥ob
, *
ƒ_˛ass_ªt
, **
œbñ_ªt
, **
°¨t_ªt
, **
cou¡_ªt
, *
≥rm
)

2042 
l
 = 
¥ob
->l;

2043 
max_ƒ_˛ass
 = 16;

2044 
ƒ_˛ass
 = 0;

2045 *
œbñ
 = 
	`MÆloc
(,
max_ƒ_˛ass
);

2046 *
cou¡
 = 
	`MÆloc
(,
max_ƒ_˛ass
);

2047 *
d©a_œbñ
 = 
	`MÆloc
(,
l
);

2048 
i
;

2050 
i
=0;i<
l
;i++)

2052 
this_œbñ
 = ()
¥ob
->
y
[
i
];

2053 
j
;

2054 
j
=0;j<
ƒ_˛ass
;j++)

2056 if(
this_œbñ
 =
œbñ
[
j
])

2058 ++
cou¡
[
j
];

2062 
d©a_œbñ
[
i
] = 
j
;

2063 if(
j
 =
ƒ_˛ass
)

2065 if(
ƒ_˛ass
 =
max_ƒ_˛ass
)

2067 
max_ƒ_˛ass
 *= 2;

2068 
œbñ
 = (*)
	`ªÆloc
÷abñ,
max_ƒ_˛ass
*());

2069 
cou¡
 = (*)
	`ªÆloc
(cou¡,
max_ƒ_˛ass
*());

2071 
œbñ
[
ƒ_˛ass
] = 
this_œbñ
;

2072 
cou¡
[
ƒ_˛ass
] = 1;

2073 ++
ƒ_˛ass
;

2077 *
°¨t
 = 
	`MÆloc
(,
ƒ_˛ass
);

2078 
°¨t
[0] = 0;

2079 
i
=1;i<
ƒ_˛ass
;i++)

2080 
°¨t
[
i
] = sèπ[i-1]+
cou¡
[i-1];

2081 
i
=0;i<
l
;i++)

2083 
≥rm
[
°¨t
[
d©a_œbñ
[
i
]]] = i;

2084 ++
°¨t
[
d©a_œbñ
[
i
]];

2086 
°¨t
[0] = 0;

2087 
i
=1;i<
ƒ_˛ass
;i++)

2088 
°¨t
[
i
] = sèπ[i-1]+
cou¡
[i-1];

2090 *
ƒ_˛ass_ªt
 = 
ƒ_˛ass
;

2091 *
œbñ_ªt
 = 
œbñ
;

2092 *
°¨t_ªt
 = 
°¨t
;

2093 *
cou¡_ªt
 = 
cou¡
;

2094 
	`‰ì
(
d©a_œbñ
);

2095 
	}
}

2100 
svm_modñ
 *
	$svm_åaö
(c⁄° 
svm_¥obÀm
 *
¥ob
, c⁄° 
svm_∑ømëî
 *
∑øm
)

2102 
svm_modñ
 *
modñ
 = 
	`MÆloc
(svm_model,1);

2103 
modñ
->
∑øm
 = *param;

2104 
modñ
->
‰ì_sv
 = 0;

2106 if(
∑øm
->
svm_ty≥
 =
ONE_CLASS
 ||

2107 
∑øm
->
svm_ty≥
 =
EPSILON_SVR
 ||

2108 
∑øm
->
svm_ty≥
 =
NU_SVR
)

2111 
modñ
->
ƒ_˛ass
 = 2;

2112 
modñ
->
œbñ
 = 
NULL
;

2113 
modñ
->
nSV
 = 
NULL
;

2114 
modñ
->
¥obA
 = 
NULL
; modñ->
¥obB
 = NULL;

2115 
modñ
->
sv_c€f
 = 
	`MÆloc
(*,1);

2117 if(
∑øm
->
¥obabûôy
 &&

2118 (
∑øm
->
svm_ty≥
 =
EPSILON_SVR
 ||

2119 
∑øm
->
svm_ty≥
 =
NU_SVR
))

2121 
modñ
->
¥obA
 = 
	`MÆloc
(,1);

2122 
modñ
->
¥obA
[0] = 
	`svm_svr_¥obabûôy
(
¥ob
,
∑øm
);

2125 
decisi⁄_fun˘i⁄
 
f
 = 
	`svm_åaö_⁄e
(
¥ob
,
∑øm
,0,0);

2126 
modñ
->
rho
 = 
	`MÆloc
(,1);

2127 
modñ
->
rho
[0] = 
f
.rho;

2129 
nSV
 = 0;

2130 
i
;

2131 
i
=0;i<
¥ob
->
l
;i++)

2132 if(
	`Ábs
(
f
.
Æpha
[
i
]Ë> 0Ë++
nSV
;

2133 
modñ
->
l
 = 
nSV
;

2134 
modñ
->
SV
 = 
	`MÆloc
(
svm_node
 *,
nSV
);

2135 
modñ
->
sv_c€f
[0] = 
	`MÆloc
(,
nSV
);

2136 
j
 = 0;

2137 
i
=0;i<
¥ob
->
l
;i++)

2138 if(
	`Ábs
(
f
.
Æpha
[
i
]) > 0)

2140 
modñ
->
SV
[
j
] = 
¥ob
->
x
[
i
];

2141 
modñ
->
sv_c€f
[0][
j
] = 
f
.
Æpha
[
i
];

2142 ++
j
;

2145 
	`‰ì
(
f
.
Æpha
);

2150 
l
 = 
¥ob
->l;

2151 
ƒ_˛ass
;

2152 *
œbñ
 = 
NULL
;

2153 *
°¨t
 = 
NULL
;

2154 *
cou¡
 = 
NULL
;

2155 *
≥rm
 = 
	`MÆloc
(,
l
);

2158 
	`svm_group_˛as£s
(
¥ob
,&
ƒ_˛ass
,&
œbñ
,&
°¨t
,&
cou¡
,
≥rm
);

2159 if(
ƒ_˛ass
 == 1)

2160 
	`öfo
("WARNING:Åraining data in only one class. See README for details.\n");

2162 
svm_node
 **
x
 = 
	`MÆloc
(svm_nodê*,
l
);

2163 
i
;

2164 
i
=0;i<
l
;i++)

2165 
x
[
i
] = 
¥ob
->x[
≥rm
[i]];

2169 *
weighãd_C
 = 
	`MÆloc
(, 
ƒ_˛ass
);

2170 
i
=0;i<
ƒ_˛ass
;i++)

2171 
weighãd_C
[
i
] = 
∑øm
->
C
;

2172 
i
=0;i<
∑øm
->
ƒ_weight
;i++)

2174 
j
;

2175 
j
=0;j<
ƒ_˛ass
;j++)

2176 if(
∑øm
->
weight_œbñ
[
i
] =
œbñ
[
j
])

2178 if(
j
 =
ƒ_˛ass
)

2179 
	`Ârötf
(
°dîr
,"WARNING: cœs†œbñ %d s≥cifõd i¿weighài†nŸ found\n", 
∑øm
->
weight_œbñ
[
i
]);

2181 
weighãd_C
[
j
] *
∑øm
->
weight
[
i
];

2186 
boﬁ
 *
n⁄zîo
 = 
	`MÆloc
(boﬁ,
l
);

2187 
i
=0;i<
l
;i++)

2188 
n⁄zîo
[
i
] = 
Ál£
;

2189 
decisi⁄_fun˘i⁄
 *
f
 = 
	`MÆloc
(decisi⁄_fun˘i⁄,
ƒ_˛ass
*(nr_class-1)/2);

2191 *
¥obA
=
NULL
,*
¥obB
=NULL;

2192 i‡(
∑øm
->
¥obabûôy
)

2194 
¥obA
=
	`MÆloc
(,
ƒ_˛ass
*(nr_class-1)/2);

2195 
¥obB
=
	`MÆloc
(,
ƒ_˛ass
*(nr_class-1)/2);

2198 
p
 = 0;

2199 
i
=0;i<
ƒ_˛ass
;i++)

2200 
j
=
i
+1;j<
ƒ_˛ass
;j++)

2202 
svm_¥obÀm
 
sub_¥ob
;

2203 
si
 = 
°¨t
[
i
], 
sj
 = sèπ[
j
];

2204 
ci
 = 
cou¡
[
i
], 
cj
 = cou¡[
j
];

2205 
sub_¥ob
.
l
 = 
ci
+
cj
;

2206 
sub_¥ob
.
x
 = 
	`MÆloc
(
svm_node
 *,sub_¥ob.
l
);

2207 
sub_¥ob
.
y
 = 
	`MÆloc
(,sub_¥ob.
l
);

2208 
k
;

2209 
k
=0;k<
ci
;k++)

2211 
sub_¥ob
.
x
[
k
] = x[
si
+k];

2212 
sub_¥ob
.
y
[
k
] = +1;

2214 
k
=0;k<
cj
;k++)

2216 
sub_¥ob
.
x
[
ci
+
k
] = x[
sj
+k];

2217 
sub_¥ob
.
y
[
ci
+
k
] = -1;

2220 if(
∑øm
->
¥obabûôy
)

2221 
	`svm_bö¨y_svc_¥obabûôy
(&
sub_¥ob
,
∑øm
,
weighãd_C
[
i
],weighãd_C[
j
],
¥obA
[
p
],
¥obB
[p]);

2223 
f
[
p
] = 
	`svm_åaö_⁄e
(&
sub_¥ob
,
∑øm
,
weighãd_C
[
i
],weighãd_C[
j
]);

2224 
k
=0;k<
ci
;k++)

2225 if(!
n⁄zîo
[
si
+
k
] && 
	`Ábs
(
f
[
p
].
Æpha
[k]) > 0)

2226 
n⁄zîo
[
si
+
k
] = 
åue
;

2227 
k
=0;k<
cj
;k++)

2228 if(!
n⁄zîo
[
sj
+
k
] && 
	`Ábs
(
f
[
p
].
Æpha
[
ci
+k]) > 0)

2229 
n⁄zîo
[
sj
+
k
] = 
åue
;

2230 
	`‰ì
(
sub_¥ob
.
x
);

2231 
	`‰ì
(
sub_¥ob
.
y
);

2232 ++
p
;

2237 
modñ
->
ƒ_˛ass
 =Çr_class;

2239 
modñ
->
œbñ
 = 
	`MÆloc
(,
ƒ_˛ass
);

2240 
i
=0;i<
ƒ_˛ass
;i++)

2241 
modñ
->
œbñ
[
i
] =Üabel[i];

2243 
modñ
->
rho
 = 
	`MÆloc
(,
ƒ_˛ass
*(nr_class-1)/2);

2244 
i
=0;i<
ƒ_˛ass
*(nr_class-1)/2;i++)

2245 
modñ
->
rho
[
i
] = 
f
[i].rho;

2247 if(
∑øm
->
¥obabûôy
)

2249 
modñ
->
¥obA
 = 
	`MÆloc
(,
ƒ_˛ass
*(nr_class-1)/2);

2250 
modñ
->
¥obB
 = 
	`MÆloc
(,
ƒ_˛ass
*(nr_class-1)/2);

2251 
i
=0;i<
ƒ_˛ass
*(nr_class-1)/2;i++)

2253 
modñ
->
¥obA
[
i
] =ÖrobA[i];

2254 
modñ
->
¥obB
[
i
] =ÖrobB[i];

2259 
modñ
->
¥obA
=
NULL
;

2260 
modñ
->
¥obB
=
NULL
;

2263 
tŸÆ_sv
 = 0;

2264 *
nz_cou¡
 = 
	`MÆloc
(,
ƒ_˛ass
);

2265 
modñ
->
nSV
 = 
	`MÆloc
(,
ƒ_˛ass
);

2266 
i
=0;i<
ƒ_˛ass
;i++)

2268 
nSV
 = 0;

2269 
j
=0;j<
cou¡
[
i
];j++)

2270 if(
n⁄zîo
[
°¨t
[
i
]+
j
])

2272 ++
nSV
;

2273 ++
tŸÆ_sv
;

2275 
modñ
->
nSV
[
i
] =ÇSV;

2276 
nz_cou¡
[
i
] = 
nSV
;

2279 
	`öfo
("TŸÆÇSV = %d\n",
tŸÆ_sv
);

2281 
modñ
->
l
 = 
tŸÆ_sv
;

2282 
modñ
->
SV
 = 
	`MÆloc
(
svm_node
 *,
tŸÆ_sv
);

2283 
p
 = 0;

2284 
i
=0;i<
l
;i++)

2285 if(
n⁄zîo
[
i
]Ë
modñ
->
SV
[
p
++] = 
x
[i];

2287 *
nz_°¨t
 = 
	`MÆloc
(,
ƒ_˛ass
);

2288 
nz_°¨t
[0] = 0;

2289 
i
=1;i<
ƒ_˛ass
;i++)

2290 
nz_°¨t
[
i
] =Çz_°¨t[i-1]+
nz_cou¡
[i-1];

2292 
modñ
->
sv_c€f
 = 
	`MÆloc
(*,
ƒ_˛ass
-1);

2293 
i
=0;i<
ƒ_˛ass
-1;i++)

2294 
modñ
->
sv_c€f
[
i
] = 
	`MÆloc
(,
tŸÆ_sv
);

2296 
p
 = 0;

2297 
i
=0;i<
ƒ_˛ass
;i++)

2298 
j
=
i
+1;j<
ƒ_˛ass
;j++)

2304 
si
 = 
°¨t
[
i
];

2305 
sj
 = 
°¨t
[
j
];

2306 
ci
 = 
cou¡
[
i
];

2307 
cj
 = 
cou¡
[
j
];

2309 
q
 = 
nz_°¨t
[
i
];

2310 
k
;

2311 
k
=0;k<
ci
;k++)

2312 if(
n⁄zîo
[
si
+
k
])

2313 
modñ
->
sv_c€f
[
j
-1][
q
++] = 
f
[
p
].
Æpha
[
k
];

2314 
q
 = 
nz_°¨t
[
j
];

2315 
k
=0;k<
cj
;k++)

2316 if(
n⁄zîo
[
sj
+
k
])

2317 
modñ
->
sv_c€f
[
i
][
q
++] = 
f
[
p
].
Æpha
[
ci
+
k
];

2318 ++
p
;

2321 
	`‰ì
(
œbñ
);

2322 
	`‰ì
(
¥obA
);

2323 
	`‰ì
(
¥obB
);

2324 
	`‰ì
(
cou¡
);

2325 
	`‰ì
(
≥rm
);

2326 
	`‰ì
(
°¨t
);

2327 
	`‰ì
(
x
);

2328 
	`‰ì
(
weighãd_C
);

2329 
	`‰ì
(
n⁄zîo
);

2330 
i
=0;i<
ƒ_˛ass
*(nr_class-1)/2;i++)

2331 
	`‰ì
(
f
[
i
].
Æpha
);

2332 
	`‰ì
(
f
);

2333 
	`‰ì
(
nz_cou¡
);

2334 
	`‰ì
(
nz_°¨t
);

2336  
modñ
;

2337 
	}
}

2340 
	$svm_¸oss_vÆid©i⁄
(c⁄° 
svm_¥obÀm
 *
¥ob
, c⁄° 
svm_∑ømëî
 *
∑øm
, 
ƒ_fﬁd
, *
èrgë
)

2342 
i
;

2343 *
fﬁd_°¨t
 = 
	`MÆloc
(,
ƒ_fﬁd
+1);

2344 
l
 = 
¥ob
->l;

2345 *
≥rm
 = 
	`MÆloc
(,
l
);

2346 
ƒ_˛ass
;

2350 if((
∑øm
->
svm_ty≥
 =
C_SVC
 ||

2351 
∑øm
->
svm_ty≥
 =
NU_SVC
Ë&& 
ƒ_fﬁd
 < 
l
)

2353 *
°¨t
 = 
NULL
;

2354 *
œbñ
 = 
NULL
;

2355 *
cou¡
 = 
NULL
;

2356 
	`svm_group_˛as£s
(
¥ob
,&
ƒ_˛ass
,&
œbñ
,&
°¨t
,&
cou¡
,
≥rm
);

2359 *
fﬁd_cou¡
 = 
	`MÆloc
(,
ƒ_fﬁd
);

2360 
c
;

2361 *
ödex
 = 
	`MÆloc
(,
l
);

2362 
i
=0;i<
l
;i++)

2363 
ödex
[
i
]=
≥rm
[i];

2364 
c
=0; c<
ƒ_˛ass
; c++)

2365 
i
=0;i<
cou¡
[
c
];i++)

2367 
j
 = 
i
+
	`ønd
()%(
cou¡
[
c
]-i);

2368 
	`sw≠
(
ödex
[
°¨t
[
c
]+
j
],ödex[°¨t[c]+
i
]);

2370 
i
=0;i<
ƒ_fﬁd
;i++)

2372 
fﬁd_cou¡
[
i
] = 0;

2373 
c
=0; c<
ƒ_˛ass
;c++)

2374 
fﬁd_cou¡
[
i
]+=(i+1)*
cou¡
[
c
]/
ƒ_fﬁd
-i*count[c]/nr_fold;

2376 
fﬁd_°¨t
[0]=0;

2377 
i
=1;i<=
ƒ_fﬁd
;i++)

2378 
fﬁd_°¨t
[
i
] = fﬁd_°¨t[i-1]+
fﬁd_cou¡
[i-1];

2379 
c
=0; c<
ƒ_˛ass
;c++)

2380 
i
=0;i<
ƒ_fﬁd
;i++)

2382 
begö
 = 
°¨t
[
c
]+
i
*
cou¡
[c]/
ƒ_fﬁd
;

2383 
íd
 = 
°¨t
[
c
]+(
i
+1)*
cou¡
[c]/
ƒ_fﬁd
;

2384 
j
=
begö
;j<
íd
;j++)

2386 
≥rm
[
fﬁd_°¨t
[
i
]] = 
ödex
[
j
];

2387 
fﬁd_°¨t
[
i
]++;

2390 
fﬁd_°¨t
[0]=0;

2391 
i
=1;i<=
ƒ_fﬁd
;i++)

2392 
fﬁd_°¨t
[
i
] = fﬁd_°¨t[i-1]+
fﬁd_cou¡
[i-1];

2393 
	`‰ì
(
°¨t
);

2394 
	`‰ì
(
œbñ
);

2395 
	`‰ì
(
cou¡
);

2396 
	`‰ì
(
ödex
);

2397 
	`‰ì
(
fﬁd_cou¡
);

2401 
i
=0;i<
l
;i++Ë
≥rm
[i]=i;

2402 
i
=0;i<
l
;i++)

2404 
j
 = 
i
+
	`ønd
()%(
l
-i);

2405 
	`sw≠
(
≥rm
[
i
],≥rm[
j
]);

2407 
i
=0;i<=
ƒ_fﬁd
;i++)

2408 
fﬁd_°¨t
[
i
]=i*
l
/
ƒ_fﬁd
;

2411 
i
=0;i<
ƒ_fﬁd
;i++)

2413 
begö
 = 
fﬁd_°¨t
[
i
];

2414 
íd
 = 
fﬁd_°¨t
[
i
+1];

2415 
j
,
k
;

2416 
svm_¥obÀm
 
sub¥ob
;

2418 
sub¥ob
.
l
 =Ü-(
íd
-
begö
);

2419 
sub¥ob
.
x
 = 
	`MÆloc
(
svm_node
*,sub¥ob.
l
);

2420 
sub¥ob
.
y
 = 
	`MÆloc
(,sub¥ob.
l
);

2422 
k
=0;

2423 
j
=0;j<
begö
;j++)

2425 
sub¥ob
.
x
[
k
] = 
¥ob
->x[
≥rm
[
j
]];

2426 
sub¥ob
.
y
[
k
] = 
¥ob
->y[
≥rm
[
j
]];

2427 ++
k
;

2429 
j
=
íd
;j<
l
;j++)

2431 
sub¥ob
.
x
[
k
] = 
¥ob
->x[
≥rm
[
j
]];

2432 
sub¥ob
.
y
[
k
] = 
¥ob
->y[
≥rm
[
j
]];

2433 ++
k
;

2435 
svm_modñ
 *
submodñ
 = 
	`svm_åaö
(&
sub¥ob
,
∑øm
);

2436 if(
∑øm
->
¥obabûôy
 &&

2437 (
∑øm
->
svm_ty≥
 =
C_SVC
 ||Ö¨am->svm_ty≥ =
NU_SVC
))

2439 *
¥ob_e°im©es
=
	`MÆloc
(,
	`svm_gë_ƒ_˛ass
(
submodñ
));

2440 
j
=
begö
;j<
íd
;j++)

2441 
èrgë
[
≥rm
[
j
]] = 
	`svm_¥edi˘_¥obabûôy
(
submodñ
,
¥ob
->
x
[≥rm[j]],
¥ob_e°im©es
);

2442 
	`‰ì
(
¥ob_e°im©es
);

2445 
j
=
begö
;j<
íd
;j++)

2446 
èrgë
[
≥rm
[
j
]] = 
	`svm_¥edi˘
(
submodñ
,
¥ob
->
x
[perm[j]]);

2447 
	`svm_‰ì_™d_de°roy_modñ
(&
submodñ
);

2448 
	`‰ì
(
sub¥ob
.
x
);

2449 
	`‰ì
(
sub¥ob
.
y
);

2451 
	`‰ì
(
fﬁd_°¨t
);

2452 
	`‰ì
(
≥rm
);

2453 
	}
}

2456 
	$svm_gë_svm_ty≥
(c⁄° 
svm_modñ
 *
modñ
)

2458  
modñ
->
∑øm
.
svm_ty≥
;

2459 
	}
}

2461 
	$svm_gë_ƒ_˛ass
(c⁄° 
svm_modñ
 *
modñ
)

2463  
modñ
->
ƒ_˛ass
;

2464 
	}
}

2466 
	$svm_gë_œbñs
(c⁄° 
svm_modñ
 *
modñ
, * 
œbñ
)

2468 i‡(
modñ
->
œbñ
 !
NULL
)

2469 
i
=0;i<
modñ
->
ƒ_˛ass
;i++)

2470 
œbñ
[
i
] = 
modñ
->label[i];

2471 
	}
}

2473 
	$svm_gë_svr_¥obabûôy
(c⁄° 
svm_modñ
 *
modñ
)

2475 i‡((
modñ
->
∑øm
.
svm_ty≥
 =
EPSILON_SVR
 || modñ->∑øm.svm_ty≥ =
NU_SVR
) &&

2476 
modñ
->
¥obA
!=
NULL
)

2477  
modñ
->
¥obA
[0];

2480 
	`Ârötf
(
°dîr
,"Model doesn't contain information for SVRÖrobability inference\n");

2483 
	}
}

2485 
	$svm_¥edi˘_vÆues
(c⁄° 
svm_modñ
 *
modñ
, c⁄° 
svm_node
 *
x
, * 
dec_vÆues
)

2487 
i
;

2488 if(
modñ
->
∑øm
.
svm_ty≥
 =
ONE_CLASS
 ||

2489 
modñ
->
∑øm
.
svm_ty≥
 =
EPSILON_SVR
 ||

2490 
modñ
->
∑øm
.
svm_ty≥
 =
NU_SVR
)

2492 *
sv_c€f
 = 
modñ
->sv_coef[0];

2493 
sum
 = 0;

2494 
i
=0;i<
modñ
->
l
;i++)

2495 
sum
 +
sv_c€f
[
i
] * 
Kî√l
::
	`k_fun˘i⁄
(
x
,
modñ
->
SV
[i],modñ->
∑øm
);

2496 
sum
 -
modñ
->
rho
[0];

2497 *
dec_vÆues
 = 
sum
;

2499 if(
modñ
->
∑øm
.
svm_ty≥
 =
ONE_CLASS
)

2500  (
sum
>0)?1:-1;

2502  
sum
;

2506 
ƒ_˛ass
 = 
modñ
->nr_class;

2507 
l
 = 
modñ
->l;

2509 *
kvÆue
 = 
	`MÆloc
(,
l
);

2510 
i
=0;i<
l
;i++)

2511 
kvÆue
[
i
] = 
Kî√l
::
	`k_fun˘i⁄
(
x
,
modñ
->
SV
[i],modñ->
∑øm
);

2513 *
°¨t
 = 
	`MÆloc
(,
ƒ_˛ass
);

2514 
°¨t
[0] = 0;

2515 
i
=1;i<
ƒ_˛ass
;i++)

2516 
°¨t
[
i
] = sèπ[i-1]+
modñ
->
nSV
[i-1];

2518 *
vŸe
 = 
	`MÆloc
(,
ƒ_˛ass
);

2519 
i
=0;i<
ƒ_˛ass
;i++)

2520 
vŸe
[
i
] = 0;

2522 
p
=0;

2523 
i
=0;i<
ƒ_˛ass
;i++)

2524 
j
=
i
+1;j<
ƒ_˛ass
;j++)

2526 
sum
 = 0;

2527 
si
 = 
°¨t
[
i
];

2528 
sj
 = 
°¨t
[
j
];

2529 
ci
 = 
modñ
->
nSV
[
i
];

2530 
cj
 = 
modñ
->
nSV
[
j
];

2532 
k
;

2533 *
c€f1
 = 
modñ
->
sv_c€f
[
j
-1];

2534 *
c€f2
 = 
modñ
->
sv_c€f
[
i
];

2535 
k
=0;k<
ci
;k++)

2536 
sum
 +
c€f1
[
si
+
k
] * 
kvÆue
[si+k];

2537 
k
=0;k<
cj
;k++)

2538 
sum
 +
c€f2
[
sj
+
k
] * 
kvÆue
[sj+k];

2539 
sum
 -
modñ
->
rho
[
p
];

2540 
dec_vÆues
[
p
] = 
sum
;

2542 if(
dec_vÆues
[
p
] > 0)

2543 ++
vŸe
[
i
];

2545 ++
vŸe
[
j
];

2546 
p
++;

2549 
vŸe_max_idx
 = 0;

2550 
i
=1;i<
ƒ_˛ass
;i++)

2551 if(
vŸe
[
i
] > vŸe[
vŸe_max_idx
])

2552 
vŸe_max_idx
 = 
i
;

2554 
	`‰ì
(
kvÆue
);

2555 
	`‰ì
(
°¨t
);

2556 
	`‰ì
(
vŸe
);

2557  
modñ
->
œbñ
[
vŸe_max_idx
];

2559 
	}
}

2561 
	$svm_¥edi˘
(c⁄° 
svm_modñ
 *
modñ
, c⁄° 
svm_node
 *
x
)

2563 
ƒ_˛ass
 = 
modñ
->nr_class;

2564 *
dec_vÆues
;

2565 if(
modñ
->
∑øm
.
svm_ty≥
 =
ONE_CLASS
 ||

2566 
modñ
->
∑øm
.
svm_ty≥
 =
EPSILON_SVR
 ||

2567 
modñ
->
∑øm
.
svm_ty≥
 =
NU_SVR
)

2568 
dec_vÆues
 = 
	`MÆloc
(, 1);

2570 
dec_vÆues
 = 
	`MÆloc
(, 
ƒ_˛ass
*(nr_class-1)/2);

2571 
¥ed_ªsu…
 = 
	`svm_¥edi˘_vÆues
(
modñ
, 
x
, 
dec_vÆues
);

2572 
	`‰ì
(
dec_vÆues
);

2573  
¥ed_ªsu…
;

2574 
	}
}

2576 
	$svm_¥edi˘_¥obabûôy
(

2577 c⁄° 
svm_modñ
 *
modñ
, c⁄° 
svm_node
 *
x
, *
¥ob_e°im©es
)

2579 i‡((
modñ
->
∑øm
.
svm_ty≥
 =
C_SVC
 || modñ->∑øm.svm_ty≥ =
NU_SVC
) &&

2580 
modñ
->
¥obA
!=
NULL
 && modñ->
¥obB
!=NULL)

2582 
i
;

2583 
ƒ_˛ass
 = 
modñ
->nr_class;

2584 *
dec_vÆues
 = 
	`MÆloc
(, 
ƒ_˛ass
*(nr_class-1)/2);

2585 
	`svm_¥edi˘_vÆues
(
modñ
, 
x
, 
dec_vÆues
);

2587 
mö_¥ob
=1e-7;

2588 **
∑úwi£_¥ob
=
	`MÆloc
(*,
ƒ_˛ass
);

2589 
i
=0;i<
ƒ_˛ass
;i++)

2590 
∑úwi£_¥ob
[
i
]=
	`MÆloc
(,
ƒ_˛ass
);

2591 
k
=0;

2592 
i
=0;i<
ƒ_˛ass
;i++)

2593 
j
=
i
+1;j<
ƒ_˛ass
;j++)

2595 
∑úwi£_¥ob
[
i
][
j
]=
	`mö
(
	`max
(
	`sigmoid_¥edi˘
(
dec_vÆues
[
k
],
modñ
->
¥obA
[k],modñ->
¥obB
[k]),
mö_¥ob
),1-min_prob);

2596 
∑úwi£_¥ob
[
j
][
i
]=1-pairwise_prob[i][j];

2597 
k
++;

2599 
	`mu…i˛ass_¥obabûôy
(
ƒ_˛ass
,
∑úwi£_¥ob
,
¥ob_e°im©es
);

2601 
¥ob_max_idx
 = 0;

2602 
i
=1;i<
ƒ_˛ass
;i++)

2603 if(
¥ob_e°im©es
[
i
] >Örob_e°im©es[
¥ob_max_idx
])

2604 
¥ob_max_idx
 = 
i
;

2605 
i
=0;i<
ƒ_˛ass
;i++)

2606 
	`‰ì
(
∑úwi£_¥ob
[
i
]);

2607 
	`‰ì
(
dec_vÆues
);

2608 
	`‰ì
(
∑úwi£_¥ob
);

2609  
modñ
->
œbñ
[
¥ob_max_idx
];

2612  
	`svm_¥edi˘
(
modñ
, 
x
);

2613 
	}
}

2615 c⁄° *
	gsvm_ty≥_èbÀ
[] =

2617 "c_svc","nu_svc","⁄e_˛ass","ïsû⁄_svr","nu_svr",
NULL


2620 c⁄° *
	gkî√l_ty≥_èbÀ
[]=

2622 "löór","pﬁynomül","rbf","sigmoid","¥ecompuãd",
NULL


2625 
	$svm_ßve_modñ
(c⁄° *
modñ_fûe_«me
, c⁄° 
svm_modñ
 *
modñ
)

2627 
FILE
 *
Â
 = 
	`f›í
(
modñ_fûe_«me
,"w");

2628 if(
Â
==
NULL
)  -1;

2630 *
ﬁd_loˇÀ
 = 
	`°rdup
(
	`£éoˇÀ
(
LC_ALL
, 
NULL
));

2631 
	`£éoˇÀ
(
LC_ALL
, "C");

2633 c⁄° 
svm_∑ømëî
& 
∑øm
 = 
modñ
->param;

2635 
	`Ârötf
(
Â
,"svm_ty≥ %s\n", 
svm_ty≥_èbÀ
[
∑øm
.
svm_ty≥
]);

2636 
	`Ârötf
(
Â
,"kî√l_ty≥ %s\n", 
kî√l_ty≥_èbÀ
[
∑øm
.
kî√l_ty≥
]);

2638 if(
∑øm
.
kî√l_ty≥
 =
POLY
)

2639 
	`Ârötf
(
Â
,"degªê%d\n", 
∑øm
.
degªe
);

2641 if(
∑øm
.
kî√l_ty≥
 =
POLY
 ||Ö¨am.kî√l_ty≥ =
RBF
 ||Ö¨am.kî√l_ty≥ =
SIGMOID
)

2642 
	`Ârötf
(
Â
,"gamm®%g\n", 
∑øm
.
gamma
);

2644 if(
∑øm
.
kî√l_ty≥
 =
POLY
 ||Ö¨am.kî√l_ty≥ =
SIGMOID
)

2645 
	`Ârötf
(
Â
,"c€f0 %g\n", 
∑øm
.
c€f0
);

2647 
ƒ_˛ass
 = 
modñ
->nr_class;

2648 
l
 = 
modñ
->l;

2649 
	`Ârötf
(
Â
, "ƒ_˛as†%d\n", 
ƒ_˛ass
);

2650 
	`Ârötf
(
Â
, "tŸÆ_sv %d\n",
l
);

2653 
	`Ârötf
(
Â
, "rho");

2654 
i
=0;i<
ƒ_˛ass
*(nr_class-1)/2;i++)

2655 
	`Ârötf
(
Â
," %g",
modñ
->
rho
[
i
]);

2656 
	`Ârötf
(
Â
, "\n");

2659 if(
modñ
->
œbñ
)

2661 
	`Ârötf
(
Â
, "label");

2662 
i
=0;i<
ƒ_˛ass
;i++)

2663 
	`Ârötf
(
Â
," %d",
modñ
->
œbñ
[
i
]);

2664 
	`Ârötf
(
Â
, "\n");

2667 if(
modñ
->
¥obA
)

2669 
	`Ârötf
(
Â
, "probA");

2670 
i
=0;i<
ƒ_˛ass
*(nr_class-1)/2;i++)

2671 
	`Ârötf
(
Â
," %g",
modñ
->
¥obA
[
i
]);

2672 
	`Ârötf
(
Â
, "\n");

2674 if(
modñ
->
¥obB
)

2676 
	`Ârötf
(
Â
, "probB");

2677 
i
=0;i<
ƒ_˛ass
*(nr_class-1)/2;i++)

2678 
	`Ârötf
(
Â
," %g",
modñ
->
¥obB
[
i
]);

2679 
	`Ârötf
(
Â
, "\n");

2682 if(
modñ
->
nSV
)

2684 
	`Ârötf
(
Â
, "nr_sv");

2685 
i
=0;i<
ƒ_˛ass
;i++)

2686 
	`Ârötf
(
Â
," %d",
modñ
->
nSV
[
i
]);

2687 
	`Ârötf
(
Â
, "\n");

2690 
	`Ârötf
(
Â
, "SV\n");

2691 c⁄° * c⁄° *
sv_c€f
 = 
modñ
->sv_coef;

2692 c⁄° 
svm_node
 * c⁄° *
SV
 = 
modñ
->SV;

2694 
i
=0;i<
l
;i++)

2696 
j
=0;j<
ƒ_˛ass
-1;j++)

2697 
	`Ârötf
(
Â
, "%.16g ",
sv_c€f
[
j
][
i
]);

2699 c⁄° 
svm_node
 *
p
 = 
SV
[
i
];

2701 if(
∑øm
.
kî√l_ty≥
 =
PRECOMPUTED
)

2702 
	`Ârötf
(
Â
,"0:%d ",()(
p
->
vÆue
));

2704 
p
->
ödex
 != -1)

2706 
	`Ârötf
(
Â
,"%d:%.8g ",
p
->
ödex
,p->
vÆue
);

2707 
p
++;

2709 
	`Ârötf
(
Â
, "\n");

2712 
	`£éoˇÀ
(
LC_ALL
, 
ﬁd_loˇÀ
);

2713 
	`‰ì
(
ﬁd_loˇÀ
);

2715 i‡(
	`„º‹
(
Â
Ë!0 || 
	`f˛o£
(fp) != 0)  -1;

2717 
	}
}

2719 *
	glöe
 = 
NULL
;

2720 
	gmax_löe_Àn
;

2722 * 
	$ªadlöe
(
FILE
 *
öput
)

2724 
Àn
;

2726 if(
	`fgës
(
löe
,
max_löe_Àn
,
öput
Ë=
NULL
)

2727  
NULL
;

2729 
	`°ºchr
(
löe
,'\n'Ë=
NULL
)

2731 
max_löe_Àn
 *= 2;

2732 
löe
 = (*Ë
	`ªÆloc
÷öe,
max_löe_Àn
);

2733 
Àn
 = (Ë
	`°æí
(
löe
);

2734 if(
	`fgës
(
löe
+
Àn
,
max_löe_Àn
-Àn,
öput
Ë=
NULL
)

2737  
löe
;

2738 
	}
}

2740 
svm_modñ
 *
	$svm_lﬂd_modñ
(c⁄° *
modñ_fûe_«me
)

2742 
FILE
 *
Â
 = 
	`f›í
(
modñ_fûe_«me
,"rb");

2743 if(
Â
==
NULL
)  NULL;

2745 *
ﬁd_loˇÀ
 = 
	`°rdup
(
	`£éoˇÀ
(
LC_ALL
, 
NULL
));

2746 
	`£éoˇÀ
(
LC_ALL
, "C");

2750 
svm_modñ
 *
modñ
 = 
	`MÆloc
(svm_model,1);

2751 
svm_∑ømëî
& 
∑øm
 = 
modñ
->param;

2752 
modñ
->
rho
 = 
NULL
;

2753 
modñ
->
¥obA
 = 
NULL
;

2754 
modñ
->
¥obB
 = 
NULL
;

2755 
modñ
->
œbñ
 = 
NULL
;

2756 
modñ
->
nSV
 = 
NULL
;

2758 
cmd
[81];

2761 
	`fsˇnf
(
Â
,"%80s",
cmd
);

2763 if(
	`°rcmp
(
cmd
,"svm_type")==0)

2765 
	`fsˇnf
(
Â
,"%80s",
cmd
);

2766 
i
;

2767 
i
=0;
svm_ty≥_èbÀ
[i];i++)

2769 if(
	`°rcmp
(
svm_ty≥_èbÀ
[
i
],
cmd
)==0)

2771 
∑øm
.
svm_ty≥
=
i
;

2775 if(
svm_ty≥_èbÀ
[
i
] =
NULL
)

2777 
	`Ârötf
(
°dîr
,"unknown svmÅype.\n");

2779 
	`£éoˇÀ
(
LC_ALL
, 
ﬁd_loˇÀ
);

2780 
	`‰ì
(
ﬁd_loˇÀ
);

2781 
	`‰ì
(
modñ
->
rho
);

2782 
	`‰ì
(
modñ
->
œbñ
);

2783 
	`‰ì
(
modñ
->
nSV
);

2784 
	`‰ì
(
modñ
);

2785  
NULL
;

2788 if(
	`°rcmp
(
cmd
,"kernel_type")==0)

2790 
	`fsˇnf
(
Â
,"%80s",
cmd
);

2791 
i
;

2792 
i
=0;
kî√l_ty≥_èbÀ
[i];i++)

2794 if(
	`°rcmp
(
kî√l_ty≥_èbÀ
[
i
],
cmd
)==0)

2796 
∑øm
.
kî√l_ty≥
=
i
;

2800 if(
kî√l_ty≥_èbÀ
[
i
] =
NULL
)

2802 
	`Ârötf
(
°dîr
,"unknown kernel function.\n");

2804 
	`£éoˇÀ
(
LC_ALL
, 
ﬁd_loˇÀ
);

2805 
	`‰ì
(
ﬁd_loˇÀ
);

2806 
	`‰ì
(
modñ
->
rho
);

2807 
	`‰ì
(
modñ
->
œbñ
);

2808 
	`‰ì
(
modñ
->
nSV
);

2809 
	`‰ì
(
modñ
);

2810  
NULL
;

2813 if(
	`°rcmp
(
cmd
,"degree")==0)

2814 
	`fsˇnf
(
Â
,"%d",&
∑øm
.
degªe
);

2815 if(
	`°rcmp
(
cmd
,"gamma")==0)

2816 
	`fsˇnf
(
Â
,"%lf",&
∑øm
.
gamma
);

2817 if(
	`°rcmp
(
cmd
,"coef0")==0)

2818 
	`fsˇnf
(
Â
,"%lf",&
∑øm
.
c€f0
);

2819 if(
	`°rcmp
(
cmd
,"nr_class")==0)

2820 
	`fsˇnf
(
Â
,"%d",&
modñ
->
ƒ_˛ass
);

2821 if(
	`°rcmp
(
cmd
,"total_sv")==0)

2822 
	`fsˇnf
(
Â
,"%d",&
modñ
->
l
);

2823 if(
	`°rcmp
(
cmd
,"rho")==0)

2825 
n
 = 
modñ
->
ƒ_˛ass
 * (model->nr_class-1)/2;

2826 
modñ
->
rho
 = 
	`MÆloc
(,
n
);

2827 
i
=0;i<
n
;i++)

2828 
	`fsˇnf
(
Â
,"%lf",&
modñ
->
rho
[
i
]);

2830 if(
	`°rcmp
(
cmd
,"label")==0)

2832 
n
 = 
modñ
->
ƒ_˛ass
;

2833 
modñ
->
œbñ
 = 
	`MÆloc
(,
n
);

2834 
i
=0;i<
n
;i++)

2835 
	`fsˇnf
(
Â
,"%d",&
modñ
->
œbñ
[
i
]);

2837 if(
	`°rcmp
(
cmd
,"probA")==0)

2839 
n
 = 
modñ
->
ƒ_˛ass
 * (model->nr_class-1)/2;

2840 
modñ
->
¥obA
 = 
	`MÆloc
(,
n
);

2841 
i
=0;i<
n
;i++)

2842 
	`fsˇnf
(
Â
,"%lf",&
modñ
->
¥obA
[
i
]);

2844 if(
	`°rcmp
(
cmd
,"probB")==0)

2846 
n
 = 
modñ
->
ƒ_˛ass
 * (model->nr_class-1)/2;

2847 
modñ
->
¥obB
 = 
	`MÆloc
(,
n
);

2848 
i
=0;i<
n
;i++)

2849 
	`fsˇnf
(
Â
,"%lf",&
modñ
->
¥obB
[
i
]);

2851 if(
	`°rcmp
(
cmd
,"nr_sv")==0)

2853 
n
 = 
modñ
->
ƒ_˛ass
;

2854 
modñ
->
nSV
 = 
	`MÆloc
(,
n
);

2855 
i
=0;i<
n
;i++)

2856 
	`fsˇnf
(
Â
,"%d",&
modñ
->
nSV
[
i
]);

2858 if(
	`°rcmp
(
cmd
,"SV")==0)

2862 
c
 = 
	`gëc
(
Â
);

2863 if(
c
==
EOF
 || c=='\n') ;

2869 
	`Ârötf
(
°dîr
,"unknow¿ãxàö modñ fûe: [%s]\n",
cmd
);

2871 
	`£éoˇÀ
(
LC_ALL
, 
ﬁd_loˇÀ
);

2872 
	`‰ì
(
ﬁd_loˇÀ
);

2873 
	`‰ì
(
modñ
->
rho
);

2874 
	`‰ì
(
modñ
->
œbñ
);

2875 
	`‰ì
(
modñ
->
nSV
);

2876 
	`‰ì
(
modñ
);

2877  
NULL
;

2883 
ñemíts
 = 0;

2884 
pos
 = 
	`·ñl
(
Â
);

2886 
max_löe_Àn
 = 1024;

2887 
löe
 = 
	`MÆloc
(,
max_löe_Àn
);

2888 *
p
,*
íd±r
,*
idx
,*
vÆ
;

2890 
	`ªadlöe
(
Â
)!=
NULL
)

2892 
p
 = 
	`°πok
(
löe
,":");

2895 
p
 = 
	`°πok
(
NULL
,":");

2896 if(
p
 =
NULL
)

2898 ++
ñemíts
;

2901 
ñemíts
 +
modñ
->
l
;

2903 
	`f£ek
(
Â
,
pos
,
SEEK_SET
);

2905 
m
 = 
modñ
->
ƒ_˛ass
 - 1;

2906 
l
 = 
modñ
->l;

2907 
modñ
->
sv_c€f
 = 
	`MÆloc
(*,
m
);

2908 
i
;

2909 
i
=0;i<
m
;i++)

2910 
modñ
->
sv_c€f
[
i
] = 
	`MÆloc
(,
l
);

2911 
modñ
->
SV
 = 
	`MÆloc
(
svm_node
*,
l
);

2912 
svm_node
 *
x_•a˚
 = 
NULL
;

2913 if(
l
>0Ë
x_•a˚
 = 
	`MÆloc
(
svm_node
,
ñemíts
);

2915 
j
=0;

2916 
i
=0;i<
l
;i++)

2918 
	`ªadlöe
(
Â
);

2919 
modñ
->
SV
[
i
] = &
x_•a˚
[
j
];

2921 
p
 = 
	`°πok
(
löe
, " \t");

2922 
modñ
->
sv_c€f
[0][
i
] = 
	`°πod
(
p
,&
íd±r
);

2923 
k
=1;k<
m
;k++)

2925 
p
 = 
	`°πok
(
NULL
, " \t");

2926 
modñ
->
sv_c€f
[
k
][
i
] = 
	`°πod
(
p
,&
íd±r
);

2931 
idx
 = 
	`°πok
(
NULL
, ":");

2932 
vÆ
 = 
	`°πok
(
NULL
, " \t");

2934 if(
vÆ
 =
NULL
)

2936 
x_•a˚
[
j
].
ödex
 = (Ë
	`°πﬁ
(
idx
,&
íd±r
,10);

2937 
x_•a˚
[
j
].
vÆue
 = 
	`°πod
(
vÆ
,&
íd±r
);

2939 ++
j
;

2941 
x_•a˚
[
j
++].
ödex
 = -1;

2943 
	`‰ì
(
löe
);

2945 
	`£éoˇÀ
(
LC_ALL
, 
ﬁd_loˇÀ
);

2946 
	`‰ì
(
ﬁd_loˇÀ
);

2948 i‡(
	`„º‹
(
Â
Ë!0 || 
	`f˛o£
(fp) != 0)

2949  
NULL
;

2951 
modñ
->
‰ì_sv
 = 1;

2952  
modñ
;

2953 
	}
}

2955 
	$svm_‰ì_modñ_c⁄ã¡
(
svm_modñ
* 
modñ_±r
)

2957 if(
modñ_±r
->
‰ì_sv
 && modñ_±r->
l
 > 0 && modñ_±r->
SV
 !
NULL
)

2958 
	`‰ì
((*)(
modñ_±r
->
SV
[0]));

2959 if(
modñ_±r
->
sv_c€f
)

2961 
i
=0;i<
modñ_±r
->
ƒ_˛ass
-1;i++)

2962 
	`‰ì
(
modñ_±r
->
sv_c€f
[
i
]);

2965 
	`‰ì
(
modñ_±r
->
SV
);

2966 
modñ_±r
->
SV
 = 
NULL
;

2968 
	`‰ì
(
modñ_±r
->
sv_c€f
);

2969 
modñ_±r
->
sv_c€f
 = 
NULL
;

2971 
	`‰ì
(
modñ_±r
->
rho
);

2972 
modñ_±r
->
rho
 = 
NULL
;

2974 
	`‰ì
(
modñ_±r
->
œbñ
);

2975 
modñ_±r
->
œbñ

NULL
;

2977 
	`‰ì
(
modñ_±r
->
¥obA
);

2978 
modñ_±r
->
¥obA
 = 
NULL
;

2980 
	`‰ì
(
modñ_±r
->
¥obB
);

2981 
modñ_±r
->
¥obB

NULL
;

2983 
	`‰ì
(
modñ_±r
->
nSV
);

2984 
modñ_±r
->
nSV
 = 
NULL
;

2985 
	}
}

2987 
	$svm_‰ì_™d_de°roy_modñ
(
svm_modñ
** 
modñ_±r_±r
)

2989 if(
modñ_±r_±r
 !
NULL
 && *model_ptr_ptr != NULL)

2991 
	`svm_‰ì_modñ_c⁄ã¡
(*
modñ_±r_±r
);

2992 
	`‰ì
(*
modñ_±r_±r
);

2993 *
modñ_±r_±r
 = 
NULL
;

2995 
	}
}

2997 
	$svm_de°roy_∑øm
(
svm_∑ømëî
* 
∑øm
)

2999 
	`‰ì
(
∑øm
->
weight_œbñ
);

3000 
	`‰ì
(
∑øm
->
weight
);

3001 
	}
}

3003 c⁄° *
	$svm_check_∑ømëî
(c⁄° 
svm_¥obÀm
 *
¥ob
, c⁄° 
svm_∑ømëî
 *
∑øm
)

3007 
svm_ty≥
 = 
∑øm
->svm_type;

3008 if(
svm_ty≥
 !
C_SVC
 &&

3009 
svm_ty≥
 !
NU_SVC
 &&

3010 
svm_ty≥
 !
ONE_CLASS
 &&

3011 
svm_ty≥
 !
EPSILON_SVR
 &&

3012 
svm_ty≥
 !
NU_SVR
)

3017 
kî√l_ty≥
 = 
∑øm
->kernel_type;

3018 if(
kî√l_ty≥
 !
LINEAR
 &&

3019 
kî√l_ty≥
 !
POLY
 &&

3020 
kî√l_ty≥
 !
RBF
 &&

3021 
kî√l_ty≥
 !
SIGMOID
 &&

3022 
kî√l_ty≥
 !
PRECOMPUTED
)

3025 if(
∑øm
->
gamma
 < 0)

3028 if(
∑øm
->
degªe
 < 0)

3033 if(
∑øm
->
ˇche_size
 <= 0)

3036 if(
∑øm
->
ïs
 <= 0)

3039 if(
svm_ty≥
 =
C_SVC
 ||

3040 
svm_ty≥
 =
EPSILON_SVR
 ||

3041 
svm_ty≥
 =
NU_SVR
)

3042 if(
∑øm
->
C
 <= 0)

3045 if(
svm_ty≥
 =
NU_SVC
 ||

3046 
svm_ty≥
 =
ONE_CLASS
 ||

3047 
svm_ty≥
 =
NU_SVR
)

3048 if(
∑øm
->
nu
 <= 0 ||Öaram->nu > 1)

3051 if(
svm_ty≥
 =
EPSILON_SVR
)

3052 if(
∑øm
->
p
 < 0)

3055 if(
∑øm
->
shrökög
 != 0 &&

3056 
∑øm
->
shrökög
 != 1)

3059 if(
∑øm
->
¥obabûôy
 != 0 &&

3060 
∑øm
->
¥obabûôy
 != 1)

3063 if(
∑øm
->
¥obabûôy
 == 1 &&

3064 
svm_ty≥
 =
ONE_CLASS
)

3070 if(
svm_ty≥
 =
NU_SVC
)

3072 
l
 = 
¥ob
->l;

3073 
max_ƒ_˛ass
 = 16;

3074 
ƒ_˛ass
 = 0;

3075 *
œbñ
 = 
	`MÆloc
(,
max_ƒ_˛ass
);

3076 *
cou¡
 = 
	`MÆloc
(,
max_ƒ_˛ass
);

3078 
i
;

3079 
i
=0;i<
l
;i++)

3081 
this_œbñ
 = ()
¥ob
->
y
[
i
];

3082 
j
;

3083 
j
=0;j<
ƒ_˛ass
;j++)

3084 if(
this_œbñ
 =
œbñ
[
j
])

3086 ++
cou¡
[
j
];

3089 if(
j
 =
ƒ_˛ass
)

3091 if(
ƒ_˛ass
 =
max_ƒ_˛ass
)

3093 
max_ƒ_˛ass
 *= 2;

3094 
œbñ
 = (*)
	`ªÆloc
÷abñ,
max_ƒ_˛ass
*());

3095 
cou¡
 = (*)
	`ªÆloc
(cou¡,
max_ƒ_˛ass
*());

3097 
œbñ
[
ƒ_˛ass
] = 
this_œbñ
;

3098 
cou¡
[
ƒ_˛ass
] = 1;

3099 ++
ƒ_˛ass
;

3103 
i
=0;i<
ƒ_˛ass
;i++)

3105 
n1
 = 
cou¡
[
i
];

3106 
j
=
i
+1;j<
ƒ_˛ass
;j++)

3108 
n2
 = 
cou¡
[
j
];

3109 if(
∑øm
->
nu
*(
n1
+
n2
)/2 > 
	`mö
(n1,n2))

3111 
	`‰ì
(
œbñ
);

3112 
	`‰ì
(
cou¡
);

3117 
	`‰ì
(
œbñ
);

3118 
	`‰ì
(
cou¡
);

3121  
NULL
;

3122 
	}
}

3124 
	$svm_check_¥obabûôy_modñ
(c⁄° 
svm_modñ
 *
modñ
)

3126  ((
modñ
->
∑øm
.
svm_ty≥
 =
C_SVC
 || modñ->∑øm.svm_ty≥ =
NU_SVC
) &&

3127 
modñ
->
¥obA
!=
NULL
 && modñ->
¥obB
!=NULL) ||

3128 ((
modñ
->
∑øm
.
svm_ty≥
 =
EPSILON_SVR
 || modñ->∑øm.svm_ty≥ =
NU_SVR
) &&

3129 
modñ
->
¥obA
!=
NULL
);

3130 
	}
}

3132 
	$svm_£t_¥öt_°rög_fun˘i⁄
((*
¥öt_func
)(const *))

3134 if(
¥öt_func
 =
NULL
)

3135 
svm_¥öt_°rög
 = &
¥öt_°rög_°dout
;

3137 
svm_¥öt_°rög
 = 
¥öt_func
;

3138 
	}
}

	@NaN/src/svm.h

44 #i‚de‡
_LIBSVM_H


45 
	#_LIBSVM_H


	)

47 
	#LIBSVM_VERSION
 312

	)

49 #ifde‡
__˝lu•lus


53 
libsvm_vîsi⁄
;

55 
	ssvm_node


57 
	gödex
;

58 
	gvÆue
;

61 
	ssvm_¥obÀm


63 
	gl
;

64 *
	gy
;

65 
svm_node
 **
	gx
;

68 íum { 
	gC_SVC
, 
	gNU_SVC
, 
	gONE_CLASS
, 
	gEPSILON_SVR
, 
	gNU_SVR
 };

69 íum { 
	gLINEAR
, 
	gPOLY
, 
	gRBF
, 
	gSIGMOID
, 
	gPRECOMPUTED
 };

71 
	ssvm_∑ømëî


73 
	gsvm_ty≥
;

74 
	gkî√l_ty≥
;

75 
	gdegªe
;

76 
	ggamma
;

77 
	gc€f0
;

80 
	gˇche_size
;

81 
	gïs
;

82 
	gC
;

83 
	gƒ_weight
;

84 *
	gweight_œbñ
;

85 * 
	gweight
;

86 
	gnu
;

87 
	gp
;

88 
	gshrökög
;

89 
	g¥obabûôy
;

95 
	ssvm_modñ


97 
svm_∑ømëî
 
	g∑øm
;

98 
	gƒ_˛ass
;

99 
	gl
;

100 
svm_node
 **
	gSV
;

101 **
	gsv_c€f
;

102 *
	grho
;

103 *
	g¥obA
;

104 *
	g¥obB
;

108 *
	gœbñ
;

109 *
	gnSV
;

112 
	g‰ì_sv
;

116 
svm_modñ
 *
svm_åaö
(c⁄° 
svm_¥obÀm
 *
¥ob
, c⁄° 
svm_∑ømëî
 *
∑øm
);

117 
svm_¸oss_vÆid©i⁄
(c⁄° 
svm_¥obÀm
 *
¥ob
, c⁄° 
svm_∑ømëî
 *
∑øm
, 
ƒ_fﬁd
, *
èrgë
);

119 
svm_ßve_modñ
(c⁄° *
modñ_fûe_«me
, c⁄° 
svm_modñ
 *
modñ
);

120 
svm_modñ
 *
svm_lﬂd_modñ
(c⁄° *
modñ_fûe_«me
);

122 
svm_gë_svm_ty≥
(c⁄° 
svm_modñ
 *
modñ
);

123 
svm_gë_ƒ_˛ass
(c⁄° 
svm_modñ
 *
modñ
);

124 
svm_gë_œbñs
(c⁄° 
svm_modñ
 *
modñ
, *
œbñ
);

125 
svm_gë_svr_¥obabûôy
(c⁄° 
svm_modñ
 *
modñ
);

127 
svm_¥edi˘_vÆues
(c⁄° 
svm_modñ
 *
modñ
, c⁄° 
svm_node
 *
x
, * 
dec_vÆues
);

128 
svm_¥edi˘
(c⁄° 
svm_modñ
 *
modñ
, c⁄° 
svm_node
 *
x
);

129 
svm_¥edi˘_¥obabûôy
(c⁄° 
svm_modñ
 *
modñ
, c⁄° 
svm_node
 *
x
, * 
¥ob_e°im©es
);

131 
svm_‰ì_modñ_c⁄ã¡
(
svm_modñ
 *
modñ_±r
);

132 
svm_‰ì_™d_de°roy_modñ
(
svm_modñ
 **
modñ_±r_±r
);

133 
svm_de°roy_∑øm
(
svm_∑ømëî
 *
∑øm
);

135 c⁄° *
svm_check_∑ømëî
(c⁄° 
svm_¥obÀm
 *
¥ob
, c⁄° 
svm_∑ømëî
 *
∑øm
);

136 
svm_check_¥obabûôy_modñ
(c⁄° 
svm_modñ
 *
modñ
);

138 
svm_£t_¥öt_°rög_fun˘i⁄
((*
¥öt_func
)(const *));

140 #ifde‡
__˝lu•lus


	@NaN/src/svm_model_matlab.c

60 
	~<°dlib.h
>

61 
	~<°rög.h
>

62 
	~"svm.h
"

64 
	~"mex.h
"

66 #ifde‡
tmwty≥s_h


67 #i‡(
MX_API_VER
<=0x07020000)

68 
	tmwSize
;

69 
	tmwIndex
;

73 
	#NUM_OF_RETURN_FIELD
 10

	)

75 
	#MÆloc
(
ty≥
,
n
Ë—y≥ *)
	`mÆloc
(“)*—y≥))

	)

77 c⁄° *
	gfõld_«mes
[] = {

90 #ifde‡
__˝lu•lus


94 c⁄° *
modñ_to_m©œb_°ru˘uª
(
mxAºay
 *
∂hs
[], 
num_of_„©uª
, 
svm_modñ
 *
modñ
)

96 
i
, 
j
, 
n
;

97 *
±r
;

98 
mxAºay
 *
ªtu∫_modñ
, **
rhs
;

99 
out_id
 = 0;

101 
rhs
 = (
mxAºay
 **)
mxMÆloc
((mxAºay *)*
NUM_OF_RETURN_FIELD
);

104 
rhs
[
out_id
] = 
mxCª©eDoubÀM©rix
(5, 1, 
mxREAL
);

105 
±r
 = 
mxGëPr
(
rhs
[
out_id
]);

106 
±r
[0] = 
modñ
->
∑øm
.
svm_ty≥
;

107 
±r
[1] = 
modñ
->
∑øm
.
kî√l_ty≥
;

108 
±r
[2] = 
modñ
->
∑øm
.
degªe
;

109 
±r
[3] = 
modñ
->
∑øm
.
gamma
;

110 
±r
[4] = 
modñ
->
∑øm
.
c€f0
;

111 
out_id
++;

114 
rhs
[
out_id
] = 
mxCª©eDoubÀM©rix
(1, 1, 
mxREAL
);

115 
±r
 = 
mxGëPr
(
rhs
[
out_id
]);

116 
±r
[0] = 
modñ
->
ƒ_˛ass
;

117 
out_id
++;

120 
rhs
[
out_id
] = 
mxCª©eDoubÀM©rix
(1, 1, 
mxREAL
);

121 
±r
 = 
mxGëPr
(
rhs
[
out_id
]);

122 
±r
[0] = 
modñ
->
l
;

123 
out_id
++;

126 
n
 = 
modñ
->
ƒ_˛ass
*(model->nr_class-1)/2;

127 
rhs
[
out_id
] = 
mxCª©eDoubÀM©rix
(
n
, 1, 
mxREAL
);

128 
±r
 = 
mxGëPr
(
rhs
[
out_id
]);

129 
i
 = 0; i < 
n
; i++)

130 
±r
[
i
] = 
modñ
->
rho
[i];

131 
out_id
++;

134 if(
modñ
->
œbñ
)

136 
rhs
[
out_id
] = 
mxCª©eDoubÀM©rix
(
modñ
->
ƒ_˛ass
, 1, 
mxREAL
);

137 
±r
 = 
mxGëPr
(
rhs
[
out_id
]);

138 
i
 = 0; i < 
modñ
->
ƒ_˛ass
; i++)

139 
±r
[
i
] = 
modñ
->
œbñ
[i];

142 
rhs
[
out_id
] = 
mxCª©eDoubÀM©rix
(0, 0, 
mxREAL
);

143 
out_id
++;

146 if(
modñ
->
¥obA
 !
NULL
)

148 
rhs
[
out_id
] = 
mxCª©eDoubÀM©rix
(
n
, 1, 
mxREAL
);

149 
±r
 = 
mxGëPr
(
rhs
[
out_id
]);

150 
i
 = 0; i < 
n
; i++)

151 
±r
[
i
] = 
modñ
->
¥obA
[i];

154 
rhs
[
out_id
] = 
mxCª©eDoubÀM©rix
(0, 0, 
mxREAL
);

155 
out_id
 ++;

158 if(
modñ
->
¥obB
 !
NULL
)

160 
rhs
[
out_id
] = 
mxCª©eDoubÀM©rix
(
n
, 1, 
mxREAL
);

161 
±r
 = 
mxGëPr
(
rhs
[
out_id
]);

162 
i
 = 0; i < 
n
; i++)

163 
±r
[
i
] = 
modñ
->
¥obB
[i];

166 
rhs
[
out_id
] = 
mxCª©eDoubÀM©rix
(0, 0, 
mxREAL
);

167 
out_id
++;

170 if(
modñ
->
nSV
)

172 
rhs
[
out_id
] = 
mxCª©eDoubÀM©rix
(
modñ
->
ƒ_˛ass
, 1, 
mxREAL
);

173 
±r
 = 
mxGëPr
(
rhs
[
out_id
]);

174 
i
 = 0; i < 
modñ
->
ƒ_˛ass
; i++)

175 
±r
[
i
] = 
modñ
->
nSV
[i];

178 
rhs
[
out_id
] = 
mxCª©eDoubÀM©rix
(0, 0, 
mxREAL
);

179 
out_id
++;

182 
rhs
[
out_id
] = 
mxCª©eDoubÀM©rix
(
modñ
->
l
, modñ->
ƒ_˛ass
-1, 
mxREAL
);

183 
±r
 = 
mxGëPr
(
rhs
[
out_id
]);

184 
i
 = 0; i < 
modñ
->
ƒ_˛ass
-1; i++)

185 
j
 = 0; j < 
modñ
->
l
; j++)

186 
±r
[(
i
*(
modñ
->
l
))+
j
] = modñ->
sv_c€f
[i][j];

187 
out_id
++;

191 
ú_ödex
, 
n⁄zîo_ñemít
;

192 
mwIndex
 *
ú
, *
jc
;

193 
mxAºay
 *
µrhs
[1], *
µlhs
[1];

195 if(
modñ
->
∑øm
.
kî√l_ty≥
 =
PRECOMPUTED
)

197 
n⁄zîo_ñemít
 = 
modñ
->
l
;

198 
num_of_„©uª
 = 1;

202 
n⁄zîo_ñemít
 = 0;

203 
i
 = 0; i < 
modñ
->
l
; i++) {

204 
j
 = 0;

205 
modñ
->
SV
[
i
][
j
].
ödex
 != -1)

207 
n⁄zîo_ñemít
++;

208 
j
++;

214 
rhs
[
out_id
] = 
mxCª©eS∑r£
(
num_of_„©uª
, 
modñ
->
l
, 
n⁄zîo_ñemít
, 
mxREAL
);

215 
ú
 = 
mxGëIr
(
rhs
[
out_id
]);

216 
jc
 = 
mxGëJc
(
rhs
[
out_id
]);

217 
±r
 = 
mxGëPr
(
rhs
[
out_id
]);

218 
jc
[0] = 
ú_ödex
 = 0;

219 
i
 = 0;ò< 
modñ
->
l
; i++)

221 if(
modñ
->
∑øm
.
kî√l_ty≥
 =
PRECOMPUTED
)

224 
ú
[
ú_ödex
] = 0;

225 
±r
[
ú_ödex
] = 
modñ
->
SV
[
i
][0].
vÆue
;

226 
ú_ödex
++;

227 
jc
[
i
+1] = jc[i] + 1;

231 
x_ödex
 = 0;

232 
modñ
->
SV
[
i
][
x_ödex
].
ödex
 != -1)

234 
ú
[
ú_ödex
] = 
modñ
->
SV
[
i
][
x_ödex
].
ödex
 - 1;

235 
±r
[
ú_ödex
] = 
modñ
->
SV
[
i
][
x_ödex
].
vÆue
;

236 
ú_ödex
++, 
x_ödex
++;

238 
jc
[
i
+1] = jc[i] + 
x_ödex
;

242 
µrhs
[0] = 
rhs
[
out_id
];

243 if(
mexCÆlMATLAB
(1, 
µlhs
, 1, 
µrhs
, "transpose"))

245 
rhs
[
out_id
] = 
µlhs
[0];

246 
out_id
++;

250 
ªtu∫_modñ
 = 
mxCª©eSåu˘M©rix
(1, 1, 
NUM_OF_RETURN_FIELD
, 
fõld_«mes
);

253 
i
 = 0; i < 
NUM_OF_RETURN_FIELD
; i++)

254 
mxSëFõld
(
ªtu∫_modñ
,0,
fõld_«mes
[
i
],
mxDu∂iˇãAºay
(
rhs
[i]));

256 
∂hs
[0] = 
ªtu∫_modñ
;

257 
mxFªe
(
rhs
);

259  
NULL
;

262 
svm_modñ
 *
m©œb_m©rix_to_modñ
(c⁄° 
mxAºay
 *
m©œb_°ru˘
, c⁄° **
msg
)

264 
i
, 
j
, 
n
, 
num_of_fõlds
;

265 *
±r
;

266 
id
 = 0;

267 
svm_node
 *
x_•a˚
;

268 
svm_modñ
 *
modñ
;

269 
mxAºay
 **
rhs
;

271 
num_of_fõlds
 = 
mxGëNumbîOfFõlds
(
m©œb_°ru˘
);

272 if(
num_of_fõlds
 !
NUM_OF_RETURN_FIELD
)

274 *
msg
 = "number ofÑeturn field isÇot correct";

275  
NULL
;

277 
rhs
 = (
mxAºay
 **Ë
mxMÆloc
((mxAºay *)*
num_of_fõlds
);

279 
i
=0;i<
num_of_fõlds
;i++)

280 
rhs
[
i
] = 
mxGëFõldByNumbî
(
m©œb_°ru˘
, 0, i);

282 
modñ
 = 
MÆloc
(
svm_modñ
, 1);

283 
modñ
->
rho
 = 
NULL
;

284 
modñ
->
¥obA
 = 
NULL
;

285 
modñ
->
¥obB
 = 
NULL
;

286 
modñ
->
œbñ
 = 
NULL
;

287 
modñ
->
nSV
 = 
NULL
;

288 
modñ
->
‰ì_sv
 = 1;

290 
±r
 = 
mxGëPr
(
rhs
[
id
]);

291 
modñ
->
∑øm
.
svm_ty≥
 = ()
±r
[0];

292 
modñ
->
∑øm
.
kî√l_ty≥
 = ()
±r
[1];

293 
modñ
->
∑øm
.
degªe
 = ()
±r
[2];

294 
modñ
->
∑øm
.
gamma
 = 
±r
[3];

295 
modñ
->
∑øm
.
c€f0
 = 
±r
[4];

296 
id
++;

298 
±r
 = 
mxGëPr
(
rhs
[
id
]);

299 
modñ
->
ƒ_˛ass
 = ()
±r
[0];

300 
id
++;

302 
±r
 = 
mxGëPr
(
rhs
[
id
]);

303 
modñ
->
l
 = ()
±r
[0];

304 
id
++;

307 
n
 = 
modñ
->
ƒ_˛ass
 * (model->nr_class-1)/2;

308 
modñ
->
rho
 = (*Ë
mÆloc
(
n
*());

309 
±r
 = 
mxGëPr
(
rhs
[
id
]);

310 
i
=0;i<
n
;i++)

311 
modñ
->
rho
[
i
] = 
±r
[i];

312 
id
++;

315 if(
mxIsEm±y
(
rhs
[
id
]) == 0)

317 
modñ
->
œbñ
 = (*Ë
mÆloc
(modñ->
ƒ_˛ass
*());

318 
±r
 = 
mxGëPr
(
rhs
[
id
]);

319 
i
=0;i<
modñ
->
ƒ_˛ass
;i++)

320 
modñ
->
œbñ
[
i
] = ()
±r
[i];

322 
id
++;

325 if(
mxIsEm±y
(
rhs
[
id
]) == 0)

327 
modñ
->
¥obA
 = (*Ë
mÆloc
(
n
*());

328 
±r
 = 
mxGëPr
(
rhs
[
id
]);

329 
i
=0;i<
n
;i++)

330 
modñ
->
¥obA
[
i
] = 
±r
[i];

332 
id
++;

335 if(
mxIsEm±y
(
rhs
[
id
]) == 0)

337 
modñ
->
¥obB
 = (*Ë
mÆloc
(
n
*());

338 
±r
 = 
mxGëPr
(
rhs
[
id
]);

339 
i
=0;i<
n
;i++)

340 
modñ
->
¥obB
[
i
] = 
±r
[i];

342 
id
++;

345 if(
mxIsEm±y
(
rhs
[
id
]) == 0)

347 
modñ
->
nSV
 = (*Ë
mÆloc
(modñ->
ƒ_˛ass
*());

348 
±r
 = 
mxGëPr
(
rhs
[
id
]);

349 
i
=0;i<
modñ
->
ƒ_˛ass
;i++)

350 
modñ
->
nSV
[
i
] = ()
±r
[i];

352 
id
++;

355 
±r
 = 
mxGëPr
(
rhs
[
id
]);

356 
modñ
->
sv_c€f
 = (**Ë
mÆloc
((modñ->
ƒ_˛ass
-1)*());

357  
i
=0 ; i< 
modñ
->
ƒ_˛ass
 -1 ; i++ )

358 
modñ
->
sv_c€f
[
i
] = (*Ë
mÆloc
((modñ->
l
)*());

359 
i
 = 0; i < 
modñ
->
ƒ_˛ass
 - 1; i++)

360 
j
 = 0; j < 
modñ
->
l
; j++)

361 
modñ
->
sv_c€f
[
i
][
j
] = 
±r
[i*(modñ->
l
)+j];

362 
id
++;

366 
§
, 
sc
, 
ñemíts
;

367 
num_ßm∂es
;

368 
mwIndex
 *
ú
, *
jc
;

369 
mxAºay
 *
µrhs
[1], *
µlhs
[1];

372 
µrhs
[0] = 
rhs
[
id
];

373 if(
mexCÆlMATLAB
(1, 
µlhs
, 1, 
µrhs
, "transpose"))

375 
svm_‰ì_™d_de°roy_modñ
(&
modñ
);

376 *
msg
 = "cannotÅranspose SV matrix";

377  
NULL
;

379 
rhs
[
id
] = 
µlhs
[0];

381 
§
 = ()
mxGëN
(
rhs
[
id
]);

382 
sc
 = ()
mxGëM
(
rhs
[
id
]);

384 
±r
 = 
mxGëPr
(
rhs
[
id
]);

385 
ú
 = 
mxGëIr
(
rhs
[
id
]);

386 
jc
 = 
mxGëJc
(
rhs
[
id
]);

388 
num_ßm∂es
 = ()
mxGëNzmax
(
rhs
[
id
]);

390 
ñemíts
 = 
num_ßm∂es
 + 
§
;

392 
modñ
->
SV
 = (
svm_node
 **Ë
mÆloc
(
§
 * (svm_node *));

393 
x_•a˚
 = (
svm_node
 *)
mÆloc
(
ñemíts
 * (svm_node));

396 
i
=0;i<
§
;i++)

398 
low
 = ()
jc
[
i
], 
high
 = ()jc[i+1];

399 
x_ödex
 = 0;

400 
modñ
->
SV
[
i
] = &
x_•a˚
[
low
+i];

401 
j
=
low
;j<
high
;j++)

403 
modñ
->
SV
[
i
][
x_ödex
].
ödex
 = ()
ú
[
j
] + 1;

404 
modñ
->
SV
[
i
][
x_ödex
].
vÆue
 = 
±r
[
j
];

405 
x_ödex
++;

407 
modñ
->
SV
[
i
][
x_ödex
].
ödex
 = -1;

410 
id
++;

412 
mxFªe
(
rhs
);

414  
modñ
;

417 #ifde‡
__˝lu•lus


	@NaN/src/svm_model_matlab.h

42 #ifde‡
__˝lu•lus


46 c⁄° *
modñ_to_m©œb_°ru˘uª
(
mxAºay
 *
∂hs
[], 
num_of_„©uª
, 
svm_modñ
 *
modñ
);

47 
svm_modñ
 *
m©œb_m©rix_to_modñ
(c⁄° 
mxAºay
 *
m©œb_°ru˘
, c⁄° **
îr‹_mesßge
);

49 #ifde‡
__˝lu•lus


	@NaN/src/svmpredict_mex.cpp

28 
	~<°dio.h
>

29 
	~<°dlib.h
>

30 
	~<°rög.h
>

31 
	~"svm.h
"

33 
	~"mex.h
"

34 
	~"svm_modñ_m©œb.h
"

36 #ifde‡
tmwty≥s_h


37 #i‡(
MX_API_VER
<=0x07020000)

38 
	tmwSize
;

39 
	tmwIndex
;

43 
	#CMD_LEN
 2048

	)

45 
	$ªad_•¨£_ö°™˚
(c⁄° 
mxAºay
 *
¥hs
, 
ödex
, 
svm_node
 *
x
)

47 
i
, 
j
, 
low
, 
high
;

48 
mwIndex
 *
ú
, *
jc
;

49 *
ßm∂es
;

51 
ú
 = 
	`mxGëIr
(
¥hs
);

52 
jc
 = 
	`mxGëJc
(
¥hs
);

53 
ßm∂es
 = 
	`mxGëPr
(
¥hs
);

56 
j
 = 0;

57 
low
 = ()
jc
[
ödex
], 
high
 = ()jc[index+1];

58 
i
=
low
;i<
high
;i++)

60 
x
[
j
].
ödex
 = ()
ú
[
i
] + 1;

61 
x
[
j
].
vÆue
 = 
ßm∂es
[
i
];

62 
j
++;

64 
x
[
j
].
ödex
 = -1;

65 
	}
}

67 
	$Áke_™swî
(
mxAºay
 *
∂hs
[])

69 
∂hs
[0] = 
	`mxCª©eDoubÀM©rix
(0, 0, 
mxREAL
);

70 
∂hs
[1] = 
	`mxCª©eDoubÀM©rix
(0, 0, 
mxREAL
);

71 
∂hs
[2] = 
	`mxCª©eDoubÀM©rix
(0, 0, 
mxREAL
);

72 
	}
}

74 
	$¥edi˘
(
mxAºay
 *
∂hs
[], c⁄° mxAºay *
¥hs
[], 
svm_modñ
 *
modñ
, c⁄° 
¥edi˘_¥obabûôy
)

76 
œbñ_ve˘‹_row_num
, 
œbñ_ve˘‹_cﬁ_num
;

77 
„©uª_numbî
, 
ã°ög_ö°™˚_numbî
;

78 
ö°™˚_ödex
;

79 *
±r_ö°™˚
, *
±r_œbñ
, *
±r_¥edi˘_œbñ
;

80 *
±r_¥ob_e°im©es
, *
±r_dec_vÆues
, *
±r
;

81 
svm_node
 *
x
;

82 
mxAºay
 *
µlhs
[1];

84 
c‹ª˘
 = 0;

85 
tŸÆ
 = 0;

86 
îr‹
 = 0;

87 
sump
 = 0, 
sumt
 = 0, 
sumµ
 = 0, 
sumâ
 = 0, 
sum±
 = 0;

89 
svm_ty≥
=
	`svm_gë_svm_ty≥
(
modñ
);

90 
ƒ_˛ass
=
	`svm_gë_ƒ_˛ass
(
modñ
);

91 *
¥ob_e°im©es
=
NULL
;

94 
„©uª_numbî
 = ()
	`mxGëN
(
¥hs
[1]);

95 
ã°ög_ö°™˚_numbî
 = ()
	`mxGëM
(
¥hs
[1]);

96 
œbñ_ve˘‹_row_num
 = ()
	`mxGëM
(
¥hs
[0]);

97 
œbñ_ve˘‹_cﬁ_num
 = ()
	`mxGëN
(
¥hs
[0]);

99 if(
œbñ_ve˘‹_row_num
!=
ã°ög_ö°™˚_numbî
)

101 
	`mexPrötf
("Length ofÜabel vector doesÇot match # of instances.\n");

102 
	`Áke_™swî
(
∂hs
);

105 if(
œbñ_ve˘‹_cﬁ_num
!=1)

107 
	`mexPrötf
("label (1stárgument) should beá vector (# of column is 1).\n");

108 
	`Áke_™swî
(
∂hs
);

112 
±r_ö°™˚
 = 
	`mxGëPr
(
¥hs
[1]);

113 
±r_œbñ
 = 
	`mxGëPr
(
¥hs
[0]);

116 if(
	`mxIsS∑r£
(
¥hs
[1]))

118 if(
modñ
->
∑øm
.
kî√l_ty≥
 =
PRECOMPUTED
)

121 
mxAºay
 *
rhs
[1], *
lhs
[1];

122 
rhs
[0] = 
	`mxDu∂iˇãAºay
(
¥hs
[1]);

123 if(
	`mexCÆlMATLAB
(1, 
lhs
, 1, 
rhs
, "full"))

125 
	`mexPrötf
("Error: cannot fullÅesting instance matrix\n");

126 
	`Áke_™swî
(
∂hs
);

129 
±r_ö°™˚
 = 
	`mxGëPr
(
lhs
[0]);

130 
	`mxDe°royAºay
(
rhs
[0]);

134 
mxAºay
 *
µrhs
[1];

135 
µrhs
[0] = 
	`mxDu∂iˇãAºay
(
¥hs
[1]);

136 if(
	`mexCÆlMATLAB
(1, 
µlhs
, 1, 
µrhs
, "transpose"))

138 
	`mexPrötf
("Error: cannotÅransposeÅesting instance matrix\n");

139 
	`Áke_™swî
(
∂hs
);

145 if(
¥edi˘_¥obabûôy
)

147 if(
svm_ty≥
==
NU_SVR
 || svm_ty≥==
EPSILON_SVR
)

148 
	`mexPrötf
("Prob. modñ f‹Åe° d©a:Å¨gë vÆuê¥edi˘ed vÆuê+ z,\nz: L≠œ˚ di°ributi⁄É^(-|z|/sigma)/(2sigma),sigma=%g\n",
	`svm_gë_svr_¥obabûôy
(
modñ
));

150 
¥ob_e°im©es
 = (*Ë
	`mÆloc
(
ƒ_˛ass
*());

153 
∂hs
[0] = 
	`mxCª©eDoubÀM©rix
(
ã°ög_ö°™˚_numbî
, 1, 
mxREAL
);

154 if(
¥edi˘_¥obabûôy
)

157 if(
svm_ty≥
==
C_SVC
 || svm_ty≥==
NU_SVC
)

158 
∂hs
[2] = 
	`mxCª©eDoubÀM©rix
(
ã°ög_ö°™˚_numbî
, 
ƒ_˛ass
, 
mxREAL
);

160 
∂hs
[2] = 
	`mxCª©eDoubÀM©rix
(0, 0, 
mxREAL
);

165 if(
svm_ty≥
 =
ONE_CLASS
 ||

166 
svm_ty≥
 =
EPSILON_SVR
 ||

167 
svm_ty≥
 =
NU_SVR
 ||

168 
ƒ_˛ass
 == 1)

169 
∂hs
[2] = 
	`mxCª©eDoubÀM©rix
(
ã°ög_ö°™˚_numbî
, 1, 
mxREAL
);

171 
∂hs
[2] = 
	`mxCª©eDoubÀM©rix
(
ã°ög_ö°™˚_numbî
, 
ƒ_˛ass
*“r_˛ass-1)/2, 
mxREAL
);

174 
±r_¥edi˘_œbñ
 = 
	`mxGëPr
(
∂hs
[0]);

175 
±r_¥ob_e°im©es
 = 
	`mxGëPr
(
∂hs
[2]);

176 
±r_dec_vÆues
 = 
	`mxGëPr
(
∂hs
[2]);

177 
x
 = (
svm_node
*)
	`mÆloc
((
„©uª_numbî
+1)*(svm_node) );

178 
ö°™˚_ödex
=0;ö°™˚_ödex<
ã°ög_ö°™˚_numbî
;instance_index++)

180 
i
;

181 
èrgë_œbñ
, 
¥edi˘_œbñ
;

183 
èrgë_œbñ
 = 
±r_œbñ
[
ö°™˚_ödex
];

185 if(
	`mxIsS∑r£
(
¥hs
[1]Ë&& 
modñ
->
∑øm
.
kî√l_ty≥
 !
PRECOMPUTED
)

186 
	`ªad_•¨£_ö°™˚
(
µlhs
[0], 
ö°™˚_ödex
, 
x
);

189 
i
=0;i<
„©uª_numbî
;i++)

191 
x
[
i
].
ödex
 = i+1;

192 
x
[
i
].
vÆue
 = 
±r_ö°™˚
[
ã°ög_ö°™˚_numbî
*i+
ö°™˚_ödex
];

194 
x
[
„©uª_numbî
].
ödex
 = -1;

197 if(
¥edi˘_¥obabûôy
)

199 if(
svm_ty≥
==
C_SVC
 || svm_ty≥==
NU_SVC
)

201 
¥edi˘_œbñ
 = 
	`svm_¥edi˘_¥obabûôy
(
modñ
, 
x
, 
¥ob_e°im©es
);

202 
±r_¥edi˘_œbñ
[
ö°™˚_ödex
] = 
¥edi˘_œbñ
;

203 
i
=0;i<
ƒ_˛ass
;i++)

204 
±r_¥ob_e°im©es
[
ö°™˚_ödex
 + 
i
 * 
ã°ög_ö°™˚_numbî
] = 
¥ob_e°im©es
[i];

206 
¥edi˘_œbñ
 = 
	`svm_¥edi˘
(
modñ
,
x
);

207 
±r_¥edi˘_œbñ
[
ö°™˚_ödex
] = 
¥edi˘_œbñ
;

212 if(
svm_ty≥
 =
ONE_CLASS
 ||

213 
svm_ty≥
 =
EPSILON_SVR
 ||

214 
svm_ty≥
 =
NU_SVR
)

216 
ªs
;

217 
¥edi˘_œbñ
 = 
	`svm_¥edi˘_vÆues
(
modñ
, 
x
, &
ªs
);

218 
±r_dec_vÆues
[
ö°™˚_ödex
] = 
ªs
;

222 *
dec_vÆues
 = (*Ë
	`mÆloc
((Ë* 
ƒ_˛ass
*(nr_class-1)/2);

223 
¥edi˘_œbñ
 = 
	`svm_¥edi˘_vÆues
(
modñ
, 
x
, 
dec_vÆues
);

224 if(
ƒ_˛ass
 == 1)

225 
±r_dec_vÆues
[
ö°™˚_ödex
] = 1;

227 
i
=0;i<(
ƒ_˛ass
*(nr_class-1))/2;i++)

228 
±r_dec_vÆues
[
ö°™˚_ödex
 + 
i
 * 
ã°ög_ö°™˚_numbî
] = 
dec_vÆues
[i];

229 
	`‰ì
(
dec_vÆues
);

231 
±r_¥edi˘_œbñ
[
ö°™˚_ödex
] = 
¥edi˘_œbñ
;

234 if(
¥edi˘_œbñ
 =
èrgë_œbñ
)

235 ++
c‹ª˘
;

236 
îr‹
 +(
¥edi˘_œbñ
-
èrgë_œbñ
)*(predict_label-target_label);

237 
sump
 +
¥edi˘_œbñ
;

238 
sumt
 +
èrgë_œbñ
;

239 
sumµ
 +
¥edi˘_œbñ
*predict_label;

240 
sumâ
 +
èrgë_œbñ
*target_label;

241 
sum±
 +
¥edi˘_œbñ
*
èrgë_œbñ
;

242 ++
tŸÆ
;

247 if(
svm_ty≥
==
NU_SVR
 || svm_ty≥==
EPSILON_SVR
)

249 
	`mexPrötf
("Mó¿squ¨edÉº‹ = %g (ªgªssi⁄)\n",
îr‹
/
tŸÆ
);

250 
	`mexPrötf
("Squared correlation coefficient = %g (regression)\n",

251 ((
tŸÆ
*
sum±
-
sump
*
sumt
)*(total*sumpt-sump*sumt))/

252 ((
tŸÆ
*
sumµ
-
sump
*sump)*—ŸÆ*
sumâ
-
sumt
*sumt))

256 
	`mexPrötf
("Accuracy = %g%% (%d/%d) (classification)\n",

257 ()
c‹ª˘
/
tŸÆ
*100,correct,total);

261 
∂hs
[1] = 
	`mxCª©eDoubÀM©rix
(3, 1, 
mxREAL
);

262 
±r
 = 
	`mxGëPr
(
∂hs
[1]);

263 
±r
[0] = ()
c‹ª˘
/
tŸÆ
*100;

264 
±r
[1] = 
îr‹
/
tŸÆ
;

265 
±r
[2] = ((
tŸÆ
*
sum±
-
sump
*
sumt
)*(total*sumpt-sump*sumt))/

266 ((
tŸÆ
*
sumµ
-
sump
*sump)*—ŸÆ*
sumâ
-
sumt
*sumt));

268 
	`‰ì
(
x
);

269 if(
¥ob_e°im©es
 !
NULL
)

270 
	`‰ì
(
¥ob_e°im©es
);

271 
	}
}

273 
	$exô_wôh_hñp
()

275 
	`mexPrötf
(

286 
	}
}

288 
	$mexFun˘i⁄
–
∆hs
, 
mxAºay
 *
∂hs
[],

289 
ƒhs
, c⁄° 
mxAºay
 *
¥hs
[] )

291 
¥ob_e°im©e_Êag
 = 0;

292 
svm_modñ
 *
modñ
;

294 if(
ƒhs
 > 4 ||Çrhs < 3)

296 
	`exô_wôh_hñp
();

297 
	`Áke_™swî
(
∂hs
);

301 if(!
	`mxIsDoubÀ
(
¥hs
[0]) || !mxIsDouble(prhs[1])) {

302 
	`mexPrötf
("Error:Üabel vectoránd instance matrix must be double\n");

303 
	`Áke_™swî
(
∂hs
);

307 if(
	`mxIsSåu˘
(
¥hs
[2]))

309 c⁄° *
îr‹_msg
;

312 if(
ƒhs
==4)

314 
i
, 
¨gc
 = 1;

315 
cmd
[
CMD_LEN
], *
¨gv
[CMD_LEN/2];

318 
	`mxGëSåög
(
¥hs
[3], 
cmd
, 
	`mxGëN
(prhs[3]) + 1);

319 if((
¨gv
[
¨gc
] = 
	`°πok
(
cmd
, " ")Ë!
NULL
)

320 (
¨gv
[++
¨gc
] = 
	`°πok
(
NULL
, " ")) != NULL)

323 
i
=1;i<
¨gc
;i++)

325 if(
¨gv
[
i
][0] != '-') ;

326 if(++
i
>=
¨gc
)

328 
	`exô_wôh_hñp
();

329 
	`Áke_™swî
(
∂hs
);

332 
¨gv
[
i
-1][1])

335 
¥ob_e°im©e_Êag
 = 
	`©oi
(
¨gv
[
i
]);

338 
	`mexPrötf
("Unknow¿›ti⁄: -%c\n", 
¨gv
[
i
-1][1]);

339 
	`exô_wôh_hñp
();

340 
	`Áke_™swî
(
∂hs
);

346 
modñ
 = 
	`m©œb_m©rix_to_modñ
(
¥hs
[2], &
îr‹_msg
);

347 i‡(
modñ
 =
NULL
)

349 
	`mexPrötf
("Eº‹: c™'àªad modñ: %s\n", 
îr‹_msg
);

350 
	`Áke_™swî
(
∂hs
);

354 if(
¥ob_e°im©e_Êag
)

356 if(
	`svm_check_¥obabûôy_modñ
(
modñ
)==0)

358 
	`mexPrötf
("Model doesÇot supportÖrobabiliyÉstimates\n");

359 
	`Áke_™swî
(
∂hs
);

360 
	`svm_‰ì_™d_de°roy_modñ
(&
modñ
);

366 if(
	`svm_check_¥obabûôy_modñ
(
modñ
)!=0)

367 
	`mexPrötf
("Model supportsÖrobabilityÉstimates, but disabled inÖredicton.\n");

370 
	`¥edi˘
(
∂hs
, 
¥hs
, 
modñ
, 
¥ob_e°im©e_Êag
);

372 
	`svm_‰ì_™d_de°roy_modñ
(&
modñ
);

376 
	`mexPrötf
("model file should beá structárray\n");

377 
	`Áke_™swî
(
∂hs
);

381 
	}
}

	@NaN/src/svmtrain_mex.cpp

28 
	~<°dio.h
>

29 
	~<°dlib.h
>

30 
	~<°rög.h
>

31 
	~<˘y≥.h
>

32 
	~"svm.h
"

34 
	~"mex.h
"

35 
	~"svm_modñ_m©œb.h
"

37 #ifde‡
tmwty≥s_h


38 #i‡(
MX_API_VER
<=0x07020000)

39 
	tmwSize
;

40 
	tmwIndex
;

44 
	#CMD_LEN
 2048

	)

45 
	#MÆloc
(
ty≥
,
n
Ë—y≥ *)
	`mÆloc
(“)*—y≥))

	)

47 
	$¥öt_nuŒ
(c⁄° *
s
Ë{
	}
}

48 
	$¥öt_°rög_m©œb
(c⁄° *
s
Ë{
	`mexPrötf
(s);
	}
}

50 
	$exô_wôh_hñp
()

52 
	`mexPrötf
(

81 
	}
}

84 
svm_∑ømëî
 
	g∑øm
;

85 
svm_¥obÀm
 
	g¥ob
;

86 
svm_modñ
 *
	gmodñ
;

87 
svm_node
 *
	gx_•a˚
;

88 
	g¸oss_vÆid©i⁄
;

89 
	gƒ_fﬁd
;

92 
	$do_¸oss_vÆid©i⁄
()

94 
i
;

95 
tŸÆ_c‹ª˘
 = 0;

96 
tŸÆ_îr‹
 = 0;

97 
sumv
 = 0, 
sumy
 = 0, 
sumvv
 = 0, 
sumyy
 = 0, 
sumvy
 = 0;

98 *
èrgë
 = 
	`MÆloc
(,
¥ob
.
l
);

99 
ªtvÆ
 = 0.0;

101 
	`svm_¸oss_vÆid©i⁄
(&
¥ob
,&
∑øm
,
ƒ_fﬁd
,
èrgë
);

102 if(
∑øm
.
svm_ty≥
 =
EPSILON_SVR
 ||

103 
∑øm
.
svm_ty≥
 =
NU_SVR
)

105 
i
=0;i<
¥ob
.
l
;i++)

107 
y
 = 
¥ob
.y[
i
];

108 
v
 = 
èrgë
[
i
];

109 
tŸÆ_îr‹
 +(
v
-
y
)*(v-y);

110 
sumv
 +
v
;

111 
sumy
 +
y
;

112 
sumvv
 +
v
*v;

113 
sumyy
 +
y
*y;

114 
sumvy
 +
v
*
y
;

116 
	`mexPrötf
("Cros†VÆid©i⁄ Mó¿squ¨edÉº‹ = %g\n",
tŸÆ_îr‹
/
¥ob
.
l
);

117 
	`mexPrötf
("Cross Validation Squared correlation coefficient = %g\n",

118 ((
¥ob
.
l
*
sumvy
-
sumv
*
sumy
)*(prob.l*sumvy-sumv*sumy))/

119 ((
¥ob
.
l
*
sumvv
-
sumv
*sumv)*’rob.l*
sumyy
-
sumy
*sumy))

121 
ªtvÆ
 = 
tŸÆ_îr‹
/
¥ob
.
l
;

125 
i
=0;i<
¥ob
.
l
;i++)

126 if(
èrgë
[
i
] =
¥ob
.
y
[i])

127 ++
tŸÆ_c‹ª˘
;

128 
	`mexPrötf
("Cros†VÆid©i⁄ Accuøcy = %g%%\n",100.0*
tŸÆ_c‹ª˘
/
¥ob
.
l
);

129 
ªtvÆ
 = 100.0*
tŸÆ_c‹ª˘
/
¥ob
.
l
;

131 
	`‰ì
(
èrgë
);

132  
ªtvÆ
;

133 
	}
}

136 
	$∑r£_comm™d_löe
(
ƒhs
, c⁄° 
mxAºay
 *
¥hs
[], *
modñ_fûe_«me
)

138 
i
, 
¨gc
 = 1;

139 
cmd
[
CMD_LEN
];

140 *
¨gv
[
CMD_LEN
/2];

141 (*
¥öt_func
)(c⁄° *Ë
¥öt_°rög_m©œb
;

144 
∑øm
.
svm_ty≥
 = 
C_SVC
;

145 
∑øm
.
kî√l_ty≥
 = 
RBF
;

146 
∑øm
.
degªe
 = 3;

147 
∑øm
.
gamma
 = 0;

148 
∑øm
.
c€f0
 = 0;

149 
∑øm
.
nu
 = 0.5;

150 
∑øm
.
ˇche_size
 = 100;

151 
∑øm
.
C
 = 1;

152 
∑øm
.
ïs
 = 1e-3;

153 
∑øm
.
p
 = 0.1;

154 
∑øm
.
shrökög
 = 1;

155 
∑øm
.
¥obabûôy
 = 0;

156 
∑øm
.
ƒ_weight
 = 0;

157 
∑øm
.
weight_œbñ
 = 
NULL
;

158 
∑øm
.
weight
 = 
NULL
;

159 
¸oss_vÆid©i⁄
 = 0;

161 if(
ƒhs
 <= 1)

164 if(
ƒhs
 > 2)

167 
	`mxGëSåög
(
¥hs
[2], 
cmd
, 
	`mxGëN
(prhs[2]) + 1);

168 if((
¨gv
[
¨gc
] = 
	`°πok
(
cmd
, " ")Ë!
NULL
)

169 (
¨gv
[++
¨gc
] = 
	`°πok
(
NULL
, " ")) != NULL)

174 
i
=1;i<
¨gc
;i++)

176 if(
¨gv
[
i
][0] != '-') ;

177 ++
i
;

178 if(
i
>=
¨gc
 && 
¨gv
[i-1][1] != 'q')

180 
¨gv
[
i
-1][1])

183 
∑øm
.
svm_ty≥
 = 
	`©oi
(
¨gv
[
i
]);

186 
∑øm
.
kî√l_ty≥
 = 
	`©oi
(
¨gv
[
i
]);

189 
∑øm
.
degªe
 = 
	`©oi
(
¨gv
[
i
]);

192 
∑øm
.
gamma
 = 
	`©of
(
¨gv
[
i
]);

195 
∑øm
.
c€f0
 = 
	`©of
(
¨gv
[
i
]);

198 
∑øm
.
nu
 = 
	`©of
(
¨gv
[
i
]);

201 
∑øm
.
ˇche_size
 = 
	`©of
(
¨gv
[
i
]);

204 
∑øm
.
C
 = 
	`©of
(
¨gv
[
i
]);

207 
∑øm
.
ïs
 = 
	`©of
(
¨gv
[
i
]);

210 
∑øm
.
p
 = 
	`©of
(
¨gv
[
i
]);

213 
∑øm
.
shrökög
 = 
	`©oi
(
¨gv
[
i
]);

216 
∑øm
.
¥obabûôy
 = 
	`©oi
(
¨gv
[
i
]);

219 
¥öt_func
 = &
¥öt_nuŒ
;

220 
i
--;

223 
¸oss_vÆid©i⁄
 = 1;

224 
ƒ_fﬁd
 = 
	`©oi
(
¨gv
[
i
]);

225 if(
ƒ_fﬁd
 < 2)

227 
	`mexPrötf
("n-fold cross validation:Ç must >= 2\n");

232 ++
∑øm
.
ƒ_weight
;

233 
∑øm
.
weight_œbñ
 = (*)
	`ªÆloc
’¨am.weight_œbñ,()*∑øm.
ƒ_weight
);

234 
∑øm
.
weight
 = (*)
	`ªÆloc
’¨am.weight,()*∑øm.
ƒ_weight
);

235 
∑øm
.
weight_œbñ
[∑øm.
ƒ_weight
-1] = 
	`©oi
(&
¨gv
[
i
-1][2]);

236 
∑øm
.
weight
[∑øm.
ƒ_weight
-1] = 
	`©of
(
¨gv
[
i
]);

239 
	`mexPrötf
("Unknow¿›ti⁄ -%c\n", 
¨gv
[
i
-1][1]);

244 
	`svm_£t_¥öt_°rög_fun˘i⁄
(
¥öt_func
);

247 
	}
}

250 
	$ªad_¥obÀm_dí£
(c⁄° 
mxAºay
 *
œbñ_vec
, c⁄° mxAºay *
ö°™˚_m©
)

252 
i
, 
j
, 
k
;

253 
ñemíts
, 
max_ödex
, 
sc
, 
œbñ_ve˘‹_row_num
;

254 *
ßm∂es
, *
œbñs
;

256 
¥ob
.
x
 = 
NULL
;

257 
¥ob
.
y
 = 
NULL
;

258 
x_•a˚
 = 
NULL
;

260 
œbñs
 = 
	`mxGëPr
(
œbñ_vec
);

261 
ßm∂es
 = 
	`mxGëPr
(
ö°™˚_m©
);

262 
sc
 = ()
	`mxGëN
(
ö°™˚_m©
);

264 
ñemíts
 = 0;

266 
¥ob
.
l
 = ()
	`mxGëM
(
ö°™˚_m©
);

267 
œbñ_ve˘‹_row_num
 = ()
	`mxGëM
(
œbñ_vec
);

269 if(
œbñ_ve˘‹_row_num
!=
¥ob
.
l
)

271 
	`mexPrötf
("Length ofÜabel vector doesÇot match # of instances.\n");

275 if(
∑øm
.
kî√l_ty≥
 =
PRECOMPUTED
)

276 
ñemíts
 = 
¥ob
.
l
 * (
sc
 + 1);

279 
i
 = 0; i < 
¥ob
.
l
; i++)

281 
k
 = 0; k < 
sc
; k++)

282 if(
ßm∂es
[
k
 * 
¥ob
.
l
 + 
i
] != 0)

283 
ñemíts
++;

285 
ñemíts
++;

289 
¥ob
.
y
 = 
	`MÆloc
(,¥ob.
l
);

290 
¥ob
.
x
 = 
	`MÆloc
(
svm_node
 *,¥ob.
l
);

291 
x_•a˚
 = 
	`MÆloc
(
svm_node
, 
ñemíts
);

293 
max_ödex
 = 
sc
;

294 
j
 = 0;

295 
i
 = 0; i < 
¥ob
.
l
; i++)

297 
¥ob
.
x
[
i
] = &
x_•a˚
[
j
];

298 
¥ob
.
y
[
i
] = 
œbñs
[i];

300 
k
 = 0; k < 
sc
; k++)

302 if(
∑øm
.
kî√l_ty≥
 =
PRECOMPUTED
 || 
ßm∂es
[
k
 * 
¥ob
.
l
 + 
i
] != 0)

304 
x_•a˚
[
j
].
ödex
 = 
k
 + 1;

305 
x_•a˚
[
j
].
vÆue
 = 
ßm∂es
[
k
 * 
¥ob
.
l
 + 
i
];

306 
j
++;

309 
x_•a˚
[
j
++].
ödex
 = -1;

312 if(
∑øm
.
gamma
 =0 && 
max_ödex
 > 0)

313 
∑øm
.
gamma
 = 1.0/
max_ödex
;

315 if(
∑øm
.
kî√l_ty≥
 =
PRECOMPUTED
)

316 
i
=0;i<
¥ob
.
l
;i++)

318 if(()
¥ob
.
x
[
i
][0].
vÆue
 <0 || (Ìrob.x[i][0].vÆuê> 
max_ödex
)

320 
	`mexPrötf
("Wrong input format: sample_serial_number out ofÑange\n");

326 
	}
}

328 
	$ªad_¥obÀm_•¨£
(c⁄° 
mxAºay
 *
œbñ_vec
, c⁄° mxAºay *
ö°™˚_m©
)

330 
i
, 
j
, 
k
, 
low
, 
high
;

331 
mwIndex
 *
ú
, *
jc
;

332 
ñemíts
, 
max_ödex
, 
num_ßm∂es
, 
œbñ_ve˘‹_row_num
;

333 *
ßm∂es
, *
œbñs
;

334 
mxAºay
 *
ö°™˚_m©_cﬁ
;

336 
¥ob
.
x
 = 
NULL
;

337 
¥ob
.
y
 = 
NULL
;

338 
x_•a˚
 = 
NULL
;

342 
mxAºay
 *
¥hs
[1], *
∂hs
[1];

343 
¥hs
[0] = 
	`mxDu∂iˇãAºay
(
ö°™˚_m©
);

344 if(
	`mexCÆlMATLAB
(1, 
∂hs
, 1, 
¥hs
, "transpose"))

346 
	`mexPrötf
("Error: cannotÅransposeÅraining instance matrix\n");

349 
ö°™˚_m©_cﬁ
 = 
∂hs
[0];

350 
	`mxDe°royAºay
(
¥hs
[0]);

354 
œbñs
 = 
	`mxGëPr
(
œbñ_vec
);

355 
ßm∂es
 = 
	`mxGëPr
(
ö°™˚_m©_cﬁ
);

356 
ú
 = 
	`mxGëIr
(
ö°™˚_m©_cﬁ
);

357 
jc
 = 
	`mxGëJc
(
ö°™˚_m©_cﬁ
);

359 
num_ßm∂es
 = ()
	`mxGëNzmax
(
ö°™˚_m©_cﬁ
);

362 
¥ob
.
l
 = ()
	`mxGëN
(
ö°™˚_m©_cﬁ
);

363 
œbñ_ve˘‹_row_num
 = ()
	`mxGëM
(
œbñ_vec
);

365 if(
œbñ_ve˘‹_row_num
!=
¥ob
.
l
)

367 
	`mexPrötf
("Length ofÜabel vector doesÇot match # of instances.\n");

371 
ñemíts
 = 
num_ßm∂es
 + 
¥ob
.
l
;

372 
max_ödex
 = ()
	`mxGëM
(
ö°™˚_m©_cﬁ
);

374 
¥ob
.
y
 = 
	`MÆloc
(,¥ob.
l
);

375 
¥ob
.
x
 = 
	`MÆloc
(
svm_node
 *,¥ob.
l
);

376 
x_•a˚
 = 
	`MÆloc
(
svm_node
, 
ñemíts
);

378 
j
 = 0;

379 
i
=0;i<
¥ob
.
l
;i++)

381 
¥ob
.
x
[
i
] = &
x_•a˚
[
j
];

382 
¥ob
.
y
[
i
] = 
œbñs
[i];

383 
low
 = ()
jc
[
i
], 
high
 = ()jc[i+1];

384 
k
=
low
;k<
high
;k++)

386 
x_•a˚
[
j
].
ödex
 = ()
ú
[
k
] + 1;

387 
x_•a˚
[
j
].
vÆue
 = 
ßm∂es
[
k
];

388 
j
++;

390 
x_•a˚
[
j
++].
ödex
 = -1;

393 if(
∑øm
.
gamma
 =0 && 
max_ödex
 > 0)

394 
∑øm
.
gamma
 = 1.0/
max_ödex
;

397 
	}
}

399 
	$Áke_™swî
(
mxAºay
 *
∂hs
[])

401 
∂hs
[0] = 
	`mxCª©eDoubÀM©rix
(0, 0, 
mxREAL
);

402 
	}
}

406 
	$mexFun˘i⁄
–
∆hs
, 
mxAºay
 *
∂hs
[],

407 
ƒhs
, c⁄° 
mxAºay
 *
¥hs
[] )

409 c⁄° *
îr‹_msg
;

413 
	`§™d
(1);

416 if(
ƒhs
 > 1 &&Çrhs < 4)

418 
îr
;

420 if(!
	`mxIsDoubÀ
(
¥hs
[0]) || !mxIsDouble(prhs[1])) {

421 
	`mexPrötf
("Error:Üabel vectoránd instance matrix must be double\n");

422 
	`Áke_™swî
(
∂hs
);

426 if(
	`∑r£_comm™d_löe
(
ƒhs
, 
¥hs
, 
NULL
))

428 
	`exô_wôh_hñp
();

429 
	`svm_de°roy_∑øm
(&
∑øm
);

430 
	`Áke_™swî
(
∂hs
);

434 if(
	`mxIsS∑r£
(
¥hs
[1]))

436 if(
∑øm
.
kî√l_ty≥
 =
PRECOMPUTED
)

439 
mxAºay
 *
rhs
[1], *
lhs
[1];

441 
rhs
[0] = 
	`mxDu∂iˇãAºay
(
¥hs
[1]);

442 if(
	`mexCÆlMATLAB
(1, 
lhs
, 1, 
rhs
, "full"))

444 
	`mexPrötf
("Error: cannot generateá fullÅraining instance matrix\n");

445 
	`svm_de°roy_∑øm
(&
∑øm
);

446 
	`Áke_™swî
(
∂hs
);

449 
îr
 = 
	`ªad_¥obÀm_dí£
(
¥hs
[0], 
lhs
[0]);

450 
	`mxDe°royAºay
(
lhs
[0]);

451 
	`mxDe°royAºay
(
rhs
[0]);

454 
îr
 = 
	`ªad_¥obÀm_•¨£
(
¥hs
[0],Örhs[1]);

457 
îr
 = 
	`ªad_¥obÀm_dí£
(
¥hs
[0],Örhs[1]);

460 
îr‹_msg
 = 
	`svm_check_∑ømëî
(&
¥ob
, &
∑øm
);

462 if(
îr
 || 
îr‹_msg
)

464 i‡(
îr‹_msg
 !
NULL
)

465 
	`mexPrötf
("Eº‹: %s\n", 
îr‹_msg
);

466 
	`svm_de°roy_∑øm
(&
∑øm
);

467 
	`‰ì
(
¥ob
.
y
);

468 
	`‰ì
(
¥ob
.
x
);

469 
	`‰ì
(
x_•a˚
);

470 
	`Áke_™swî
(
∂hs
);

474 if(
¸oss_vÆid©i⁄
)

476 *
±r
;

477 
∂hs
[0] = 
	`mxCª©eDoubÀM©rix
(1, 1, 
mxREAL
);

478 
±r
 = 
	`mxGëPr
(
∂hs
[0]);

479 
±r
[0] = 
	`do_¸oss_vÆid©i⁄
();

483 
ƒ_„©
 = ()
	`mxGëN
(
¥hs
[1]);

484 c⁄° *
îr‹_msg
;

485 
modñ
 = 
	`svm_åaö
(&
¥ob
, &
∑øm
);

486 
îr‹_msg
 = 
	`modñ_to_m©œb_°ru˘uª
(
∂hs
, 
ƒ_„©
, 
modñ
);

487 if(
îr‹_msg
)

488 
	`mexPrötf
("Eº‹: c™'àc⁄vîàlibsvm modñÅÿm©rix såu˘uª: %s\n", 
îr‹_msg
);

489 
	`svm_‰ì_™d_de°roy_modñ
(&
modñ
);

491 
	`svm_de°roy_∑øm
(&
∑øm
);

492 
	`‰ì
(
¥ob
.
y
);

493 
	`‰ì
(
¥ob
.
x
);

494 
	`‰ì
(
x_•a˚
);

498 
	`exô_wôh_hñp
();

499 
	`Áke_™swî
(
∂hs
);

502 
	}
}

	@NaN/src/train.c

27 
	~<°dio.h
>

28 
	~<m©h.h
>

29 
	~<°dlib.h
>

30 
	~<°rög.h
>

31 
	~<˘y≥.h
>

32 
	~"löór.h
"

34 
	~"mex.h
"

35 
	~"löór_modñ_m©œb.h
"

37 #ifde‡
tmwty≥s_h


38 #i‡(
MX_API_VER
<=0x07020000)

39 
	tmwSize
;

40 
	tmwIndex
;

44 
	#CMD_LEN
 2048

	)

45 
	#MÆloc
(
ty≥
,
n
Ë—y≥ *)
	`mÆloc
(“)*—y≥))

	)

46 
	#INF
 
HUGE_VAL


	)

48 
	$¥öt_nuŒ
(c⁄° *
s
){
	}
}

50 (*
liblöór_deÁu…_¥öt_°rög
) (const *);

52 
	$exô_wôh_hñp
()

54 
	`mexPrötf
(

82 
	}
}

85 
∑ømëî
 
	g∑øm
;

86 
¥obÀm
 
	g¥ob
;

87 
modñ
 *
	gmodñ_
;

88 
„©uª_node
 *
	gx_•a˚
;

89 
	g¸oss_vÆid©i⁄_Êag
;

90 
	gcﬁ_f‹m©_Êag
;

91 
	gƒ_fﬁd
;

92 
	gbüs
;

94 
	$do_¸oss_vÆid©i⁄
()

96 
i
;

97 
tŸÆ_c‹ª˘
 = 0;

98 *
èrgë
 = 
	`MÆloc
(,
¥ob
.
l
);

99 
ªtvÆ
 = 0.0;

101 
	`¸oss_vÆid©i⁄
(&
¥ob
,&
∑øm
,
ƒ_fﬁd
,
èrgë
);

103 
i
=0;i<
¥ob
.
l
;i++)

104 if(
èrgë
[
i
] =
¥ob
.
y
[i])

105 ++
tŸÆ_c‹ª˘
;

106 
	`mexPrötf
("Cros†VÆid©i⁄ Accuøcy = %g%%\n",100.0*
tŸÆ_c‹ª˘
/
¥ob
.
l
);

107 
ªtvÆ
 = 100.0*
tŸÆ_c‹ª˘
/
¥ob
.
l
;

109 
	`‰ì
(
èrgë
);

110  
ªtvÆ
;

111 
	}
}

114 
	$∑r£_comm™d_löe
(
ƒhs
, c⁄° 
mxAºay
 *
¥hs
[], *
modñ_fûe_«me
)

116 
i
, 
¨gc
 = 1;

117 
cmd
[
CMD_LEN
];

118 *
¨gv
[
CMD_LEN
/2];

121 
∑øm
.
sﬁvî_ty≥
 = 
L2R_L2LOSS_SVC_DUAL
;

122 
∑øm
.
C
 = 1;

123 
∑øm
.
ïs
 = 
INF
;

124 
∑øm
.
ƒ_weight
 = 0;

125 
∑øm
.
weight_œbñ
 = 
NULL
;

126 
∑øm
.
weight
 = 
NULL
;

127 
¸oss_vÆid©i⁄_Êag
 = 0;

128 
cﬁ_f‹m©_Êag
 = 0;

129 
büs
 = -1;

132 if(
liblöór_deÁu…_¥öt_°rög
 =
NULL
)

133 
liblöór_deÁu…_¥öt_°rög
 = 
liblöór_¥öt_°rög
;

135 
liblöór_¥öt_°rög
 = 
liblöór_deÁu…_¥öt_°rög
;

137 if(
ƒhs
 <= 2)

140 if(
ƒhs
 == 5)

142 
	`mxGëSåög
(
¥hs
[4], 
cmd
, 
	`mxGëN
(prhs[4])+1);

143 if(
	`°rcmp
(
cmd
, "col") == 0)

144 
cﬁ_f‹m©_Êag
 = 1;

148 if(
ƒhs
 > 3)

150 
	`mxGëSåög
(
¥hs
[3], 
cmd
, 
	`mxGëN
(prhs[3]) + 1);

151 if((
¨gv
[
¨gc
] = 
	`°πok
(
cmd
, " ")Ë!
NULL
)

152 (
¨gv
[++
¨gc
] = 
	`°πok
(
NULL
, " ")) != NULL)

157 
i
=1;i<
¨gc
;i++)

159 if(
¨gv
[
i
][0] != '-') ;

160 ++
i
;

161 if(
i
>=
¨gc
 && 
¨gv
[i-1][1] != 'q')

163 
¨gv
[
i
-1][1])

166 
∑øm
.
sﬁvî_ty≥
 = 
	`©oi
(
¨gv
[
i
]);

169 
∑øm
.
C
 = 
	`©of
(
¨gv
[
i
]);

172 
∑øm
.
ïs
 = 
	`©of
(
¨gv
[
i
]);

175 
büs
 = 
	`©of
(
¨gv
[
i
]);

178 
¸oss_vÆid©i⁄_Êag
 = 1;

179 
ƒ_fﬁd
 = 
	`©oi
(
¨gv
[
i
]);

180 if(
ƒ_fﬁd
 < 2)

182 
	`mexPrötf
("n-fold cross validation:Ç must >= 2\n");

187 ++
∑øm
.
ƒ_weight
;

188 
∑øm
.
weight_œbñ
 = (*Ë
	`ªÆloc
’¨am.weight_œbñ,()*∑øm.
ƒ_weight
);

189 
∑øm
.
weight
 = (*Ë
	`ªÆloc
’¨am.weight,()*∑øm.
ƒ_weight
);

190 
∑øm
.
weight_œbñ
[∑øm.
ƒ_weight
-1] = 
	`©oi
(&
¨gv
[
i
-1][2]);

191 
∑øm
.
weight
[∑øm.
ƒ_weight
-1] = 
	`©of
(
¨gv
[
i
]);

194 
liblöór_¥öt_°rög
 = &
¥öt_nuŒ
;

195 
i
--;

198 
	`mexPrötf
("unknown option\n");

203 if(
∑øm
.
ïs
 =
INF
)

205 if(
∑øm
.
sﬁvî_ty≥
 =
L2R_LR
 ||Ö¨am.sﬁvî_ty≥ =
L2R_L2LOSS_SVC
)

206 
∑øm
.
ïs
 = 0.01;

207 if(
∑øm
.
sﬁvî_ty≥
 =
L2R_L2LOSS_SVC_DUAL
 ||Ö¨am.sﬁvî_ty≥ =
L2R_L1LOSS_SVC_DUAL
 ||Ö¨am.sﬁvî_ty≥ =
MCSVM_CS
)

208 
∑øm
.
ïs
 = 0.1;

209 if(
∑øm
.
sﬁvî_ty≥
 =
L1R_L2LOSS_SVC
 ||Ö¨am.sﬁvî_ty≥ =
L1R_LR
)

210 
∑øm
.
ïs
 = 0.01;

213 
	}
}

215 
	$Áke_™swî
(
mxAºay
 *
∂hs
[])

217 
∂hs
[0] = 
	`mxCª©eDoubÀM©rix
(0, 0, 
mxREAL
);

218 
	}
}

220 
	$ªad_¥obÀm_•¨£
(c⁄° 
mxAºay
 *
weight_vec
, c⁄° mxAºay *
œbñ_vec
, c⁄° mxAºay *
ö°™˚_m©
)

222 
i
, 
j
, 
k
, 
low
, 
high
;

223 
mwIndex
 *
ú
, *
jc
;

224 
ñemíts
, 
max_ödex
, 
num_ßm∂es
, 
œbñ_ve˘‹_row_num
, 
weight_ve˘‹_row_num
;

225 *
ßm∂es
, *
œbñs
, *
weights
;

226 
mxAºay
 *
ö°™˚_m©_cﬁ
;

228 
¥ob
.
x
 = 
NULL
;

229 
¥ob
.
y
 = 
NULL
;

230 
¥ob
.
W
 = 
NULL
;

231 
x_•a˚
 = 
NULL
;

233 if(
cﬁ_f‹m©_Êag
)

234 
ö°™˚_m©_cﬁ
 = (
mxAºay
 *)
ö°™˚_m©
;

238 
mxAºay
 *
¥hs
[1], *
∂hs
[1];

239 
¥hs
[0] = 
	`mxDu∂iˇãAºay
(
ö°™˚_m©
);

240 if(
	`mexCÆlMATLAB
(1, 
∂hs
, 1, 
¥hs
, "transpose"))

242 
	`mexPrötf
("Error: cannotÅransposeÅraining instance matrix\n");

245 
ö°™˚_m©_cﬁ
 = 
∂hs
[0];

246 
	`mxDe°royAºay
(
¥hs
[0]);

250 
¥ob
.
l
 = (Ë
	`mxGëN
(
ö°™˚_m©_cﬁ
);

251 
weight_ve˘‹_row_num
 = (Ë
	`mxGëM
(
weight_vec
);

252 
œbñ_ve˘‹_row_num
 = (Ë
	`mxGëM
(
œbñ_vec
);

254 if(
weight_ve˘‹_row_num
 == 0)

256 if(
weight_ve˘‹_row_num
!=
¥ob
.
l
)

258 
	`mexPrötf
("Length of weight vector doesÇot match # of instances.\n");

261 if(
œbñ_ve˘‹_row_num
!=
¥ob
.
l
)

263 
	`mexPrötf
("Length ofÜabel vector doesÇot match # of instances.\n");

268 
weights
 = 
	`mxGëPr
(
weight_vec
);

269 
œbñs
 = 
	`mxGëPr
(
œbñ_vec
);

270 
ßm∂es
 = 
	`mxGëPr
(
ö°™˚_m©_cﬁ
);

271 
ú
 = 
	`mxGëIr
(
ö°™˚_m©_cﬁ
);

272 
jc
 = 
	`mxGëJc
(
ö°™˚_m©_cﬁ
);

274 
num_ßm∂es
 = (Ë
	`mxGëNzmax
(
ö°™˚_m©_cﬁ
);

276 
ñemíts
 = 
num_ßm∂es
 + 
¥ob
.
l
*2;

277 
max_ödex
 = (Ë
	`mxGëM
(
ö°™˚_m©_cﬁ
);

279 
¥ob
.
y
 = 
	`MÆloc
(,Örob.
l
);

280 
¥ob
.
W
 = 
	`MÆloc
(,¥ob.
l
);

281 
¥ob
.
x
 = 
	`MÆloc
(
„©uª_node
*,Örob.
l
);

282 
x_•a˚
 = 
	`MÆloc
(
„©uª_node
, 
ñemíts
);

284 
¥ob
.
büs
=bias;

286 
j
 = 0;

287 
i
=0;i<
¥ob
.
l
;i++)

289 
¥ob
.
x
[
i
] = &
x_•a˚
[
j
];

290 
¥ob
.
y
[
i
] = (Ë
œbñs
[i];

291 
¥ob
.
W
[
i
] = 1;

292 if(
weight_ve˘‹_row_num
 > 0)

293 
¥ob
.
W
[
i
] *(Ë
weights
[i];

294 
low
 = (Ë
jc
[
i
], 
high
 = () jc[i+1];

295 
k
=
low
;k<
high
;k++)

297 
x_•a˚
[
j
].
ödex
 = (Ë
ú
[
k
]+1;

298 
x_•a˚
[
j
].
vÆue
 = 
ßm∂es
[
k
];

299 
j
++;

301 if(
¥ob
.
büs
>=0)

303 
x_•a˚
[
j
].
ödex
 = 
max_ödex
+1;

304 
x_•a˚
[
j
].
vÆue
 = 
¥ob
.
büs
;

305 
j
++;

307 
x_•a˚
[
j
++].
ödex
 = -1;

310 if(
¥ob
.
büs
>=0)

311 
¥ob
.
n
 = 
max_ödex
+1;

313 
¥ob
.
n
 = 
max_ödex
;

316 
	}
}

320 
	$mexFun˘i⁄
–
∆hs
, 
mxAºay
 *
∂hs
[],

321 
ƒhs
, c⁄° 
mxAºay
 *
¥hs
[] )

323 c⁄° *
îr‹_msg
;

326 
	`§™d
(1);

329 if(
ƒhs
 > 2 &&Çrhs < 6)

331 
îr
=0;

333 if(!
	`mxIsDoubÀ
(
¥hs
[0]) || !mxIsDouble(prhs[1]) || !mxIsDouble(prhs[2])) {

334 
	`mexPrötf
("Error: weight vector,Üabel vectoránd instance matrix must be double\n");

335 
	`Áke_™swî
(
∂hs
);

339 if(
	`∑r£_comm™d_löe
(
ƒhs
, 
¥hs
, 
NULL
))

341 
	`exô_wôh_hñp
();

342 
	`de°roy_∑øm
(&
∑øm
);

343 
	`Áke_™swî
(
∂hs
);

347 if(
	`mxIsS∑r£
(
¥hs
[2]))

348 
îr
 = 
	`ªad_¥obÀm_•¨£
(
¥hs
[0],Örhs[1],Örhs[2]);

351 
	`mexPrötf
("Training_instance_matrix must be sparse\n");

352 
	`de°roy_∑øm
(&
∑øm
);

353 
	`Áke_™swî
(
∂hs
);

358 
îr‹_msg
 = 
	`check_∑ømëî
(&
∑øm
);

360 if(
îr
 || 
îr‹_msg
)

362 i‡(
îr‹_msg
 !
NULL
)

363 
	`mexPrötf
("Eº‹: %s\n", 
îr‹_msg
);

364 
	`de°roy_∑øm
(&
∑øm
);

365 
	`‰ì
(
¥ob
.
y
);

366 
	`‰ì
(
¥ob
.
x
);

367 
	`‰ì
(
x_•a˚
);

368 
	`Áke_™swî
(
∂hs
);

372 if(
¸oss_vÆid©i⁄_Êag
)

374 *
±r
;

375 
∂hs
[0] = 
	`mxCª©eDoubÀM©rix
(1, 1, 
mxREAL
);

376 
±r
 = 
	`mxGëPr
(
∂hs
[0]);

377 
±r
[0] = 
	`do_¸oss_vÆid©i⁄
();

381 c⁄° *
îr‹_msg
;

383 
modñ_
 = 
	`åaö
(&
¥ob
, &
∑øm
);

384 
îr‹_msg
 = 
	`modñ_to_m©œb_°ru˘uª
(
∂hs
, 
modñ_
);

385 if(
îr‹_msg
)

386 
	`mexPrötf
("Eº‹: c™'àc⁄vîàlibsvm modñÅÿm©rix såu˘uª: %s\n", 
îr‹_msg
);

387 
	`de°roy_modñ
(
modñ_
);

389 
	`de°roy_∑øm
(&
∑øm
);

390 
	`‰ì
(
¥ob
.
y
);

391 
	`‰ì
(
¥ob
.
x
);

392 
	`‰ì
(
¥ob
.
W
);

393 
	`‰ì
(
x_•a˚
);

397 
	`exô_wôh_hñp
();

398 
	`Áke_™swî
(
∂hs
);

401 
	}
}

	@NaN/src/tron.cpp

27 
	~<m©h.h
>

28 
	~<°dio.h
>

29 
	~<°rög.h
>

30 
	~<°d¨g.h
>

31 
	~"å⁄.h
"

33 #i‚de‡
mö


34 
	gãm∂©e
 <
˛ass
 
	gT
> 
ölöe
 
T
 
	$mö
(
T
 
x
,T 
y
Ë{  (x<y)?x:y; 
	}
}

37 #i‚de‡
max


38 
	gãm∂©e
 <
˛ass
 
	gT
> 
ölöe
 
T
 
	$max
(
T
 
x
,T 
y
Ë{  (x>y)?x:y; 
	}
}

41 #ifde‡
__˝lu•lus


45 
dƒm2_
(*, *, *);

46 
ddŸ_
(*, *, *, *, *);

47 
daxpy_
(*, *, *, *, *, *);

48 
dsˇl_
(*, *, *, *);

50 #ifde‡
__˝lu•lus


54 
	$deÁu…_¥öt
(c⁄° *
buf
)

56 
	`Âuts
(
buf
,
°dout
);

57 
	`fÊush
(
°dout
);

58 
	}
}

60 
	gTRON
::
	$öfo
(c⁄° *
fmt
,...)

62 
buf
[
BUFSIZ
];

63 
va_li°
 
≠
;

64 
	`va_°¨t
(
≠
,
fmt
);

65 
	`v•rötf
(
buf
,
fmt
,
≠
);

66 
	`va_íd
(
≠
);

67 (*
å⁄_¥öt_°rög
)(
buf
);

68 
	}
}

70 
	gTRON
::
	$TRON
(c⁄° 
fun˘i⁄
 *
fun_obj
, 
ïs
, 
max_ôî
)

72 
this
->
fun_obj
=
c⁄°_ˇ°
<
fun˘i⁄
 *>(fun_obj);

73 
this
->
ïs
=eps;

74 
this
->
max_ôî
=max_iter;

75 
å⁄_¥öt_°rög
 = 
deÁu…_¥öt
;

76 
	}
}

78 
	gTRON
::~
	$TRON
()

80 
	}
}

82 
TRON
::
	$å⁄
(*
w
)

85 
ëa0
 = 1e-4, 
ëa1
 = 0.25, 
ëa2
 = 0.75;

88 
sigma1
 = 0.25, 
sigma2
 = 0.5, 
sigma3
 = 4;

90 
n
 = 
fun_obj
->
	`gë_ƒ_v¨übÀ
();

91 
i
, 
cg_ôî
;

92 
dñè
, 
¢‹m
, 
⁄e
=1.0;

93 
Æpha
, 
f
, 
‚ew
, 
¥îed
, 
a˘ªd
, 
gs
;

94 
£¨ch
 = 1, 
ôî
 = 1, 
öc
 = 1;

95 *
s
 = 
√w
 [
n
];

96 *
r
 = 
√w
 [
n
];

97 *
w_√w
 = 
√w
 [
n
];

98 *
g
 = 
√w
 [
n
];

100 
i
=0; i<
n
; i++)

101 
w
[
i
] = 0;

103 
f
 = 
fun_obj
->
	`fun
(
w
);

104 
fun_obj
->
	`gød
(
w
, 
g
);

105 
dñè
 = 
	`dƒm2_
(&
n
, 
g
, &
öc
);

106 
gn‹m1
 = 
dñè
;

107 
gn‹m
 = 
gn‹m1
;

109 i‡(
gn‹m
 <
ïs
*
gn‹m1
)

110 
£¨ch
 = 0;

112 
ôî
 = 1;

114 
ôî
 <
max_ôî
 && 
£¨ch
)

116 
cg_ôî
 = 
	`åcg
(
dñè
, 
g
, 
s
, 
r
);

118 
	`mem˝y
(
w_√w
, 
w
, ()*
n
);

119 
	`daxpy_
(&
n
, &
⁄e
, 
s
, &
öc
, 
w_√w
, &inc);

121 
gs
 = 
	`ddŸ_
(&
n
, 
g
, &
öc
, 
s
, &inc);

122 
¥îed
 = -0.5*(
gs
-
	`ddŸ_
(&
n
, 
s
, &
öc
, 
r
, &inc));

123 
‚ew
 = 
fun_obj
->
	`fun
(
w_√w
);

126 
a˘ªd
 = 
f
 - 
‚ew
;

129 
¢‹m
 = 
	`dƒm2_
(&
n
, 
s
, &
öc
);

130 i‡(
ôî
 == 1)

131 
dñè
 = 
	`mö
(dñè, 
¢‹m
);

134 i‡(
‚ew
 - 
f
 - 
gs
 <= 0)

135 
Æpha
 = 
sigma3
;

137 
Æpha
 = 
	`max
(
sigma1
, -0.5*(
gs
/(
‚ew
 - 
f
 - gs)));

140 i‡(
a˘ªd
 < 
ëa0
*
¥îed
)

141 
dñè
 = 
	`mö
(
	`max
(
Æpha
, 
sigma1
)*
¢‹m
, 
sigma2
*delta);

142 i‡(
a˘ªd
 < 
ëa1
*
¥îed
)

143 
dñè
 = 
	`max
(
sigma1
*dñè, 
	`mö
(
Æpha
*
¢‹m
, 
sigma2
*delta));

144 i‡(
a˘ªd
 < 
ëa2
*
¥îed
)

145 
dñè
 = 
	`max
(
sigma1
*dñè, 
	`mö
(
Æpha
*
¢‹m
, 
sigma3
*delta));

147 
dñè
 = 
	`max
(dñè, 
	`mö
(
Æpha
*
¢‹m
, 
sigma3
*delta));

149 
	`öfo
("ôî %2dá˘ %5.3ê¥ê%5.3êdñè %5.3ê‡%5.3ê|g| %5.3êCG %3d\n", 
ôî
, 
a˘ªd
, 
¥îed
, 
dñè
, 
f
, 
gn‹m
, 
cg_ôî
);

151 i‡(
a˘ªd
 > 
ëa0
*
¥îed
)

153 
ôî
++;

154 
	`mem˝y
(
w
, 
w_√w
, ()*
n
);

155 
f
 = 
‚ew
;

156 
fun_obj
->
	`gød
(
w
, 
g
);

158 
gn‹m
 = 
	`dƒm2_
(&
n
, 
g
, &
öc
);

159 i‡(
gn‹m
 <
ïs
*
gn‹m1
)

162 i‡(
f
 < -1.0e+32)

164 
	`öfo
("warning: f < -1.0e+32\n");

167 i‡(
	`Ábs
(
a˘ªd
Ë<0 && 
¥îed
 <= 0)

169 
	`öfo
("warning:áctredándÖrered <= 0\n");

172 i‡(
	`Ábs
(
a˘ªd
Ë<1.0e-12*Ábs(
f
) &&

173 
	`Ábs
(
¥îed
Ë<1.0e-12*Ábs(
f
))

175 
	`öfo
("warning:áctredándÖreredÅoo small\n");

180 
dñëe
[] 
g
;

181 
dñëe
[] 
r
;

182 
dñëe
[] 
w_√w
;

183 
dñëe
[] 
s
;

184 
	}
}

186 
	gTRON
::
	$åcg
(
dñè
, *
g
, *
s
, *
r
)

188 
i
, 
öc
 = 1;

189 
n
 = 
fun_obj
->
	`gë_ƒ_v¨übÀ
();

190 
⁄e
 = 1;

191 *
d
 = 
√w
 [
n
];

192 *
Hd
 = 
√w
 [
n
];

193 
rTr
, 
∫ewT∫ew
, 
Æpha
, 
bëa
, 
cgtﬁ
;

195 
i
=0; i<
n
; i++)

197 
s
[
i
] = 0;

198 
r
[
i
] = -
g
[i];

199 
d
[
i
] = 
r
[i];

201 
cgtﬁ
 = 0.1*
	`dƒm2_
(&
n
, 
g
, &
öc
);

203 
cg_ôî
 = 0;

204 
rTr
 = 
	`ddŸ_
(&
n
, 
r
, &
öc
,Ñ, &inc);

207 i‡(
	`dƒm2_
(&
n
, 
r
, &
öc
Ë<
cgtﬁ
)

209 
cg_ôî
++;

210 
fun_obj
->
	`Hv
(
d
, 
Hd
);

212 
Æpha
 = 
rTr
/
	`ddŸ_
(&
n
, 
d
, &
öc
, 
Hd
, &inc);

213 
	`daxpy_
(&
n
, &
Æpha
, 
d
, &
öc
, 
s
, &inc);

214 i‡(
	`dƒm2_
(&
n
, 
s
, &
öc
Ë> 
dñè
)

216 
	`öfo
("cgÑeachesÅrustÑegion boundary\n");

217 
Æpha
 = -alpha;

218 
	`daxpy_
(&
n
, &
Æpha
, 
d
, &
öc
, 
s
, &inc);

220 
°d
 = 
	`ddŸ_
(&
n
, 
s
, &
öc
, 
d
, &inc);

221 
°s
 = 
	`ddŸ_
(&
n
, 
s
, &
öc
, s, &inc);

222 
dtd
 = 
	`ddŸ_
(&
n
, 
d
, &
öc
, d, &inc);

223 
dsq
 = 
dñè
*delta;

224 
ød
 = 
	`sqπ
(
°d
*°d + 
dtd
*(
dsq
-
°s
));

225 i‡(
°d
 >= 0)

226 
Æpha
 = (
dsq
 - 
°s
)/(
°d
 + 
ød
);

228 
Æpha
 = (
ød
 - 
°d
)/
dtd
;

229 
	`daxpy_
(&
n
, &
Æpha
, 
d
, &
öc
, 
s
, &inc);

230 
Æpha
 = -alpha;

231 
	`daxpy_
(&
n
, &
Æpha
, 
Hd
, &
öc
, 
r
, &inc);

234 
Æpha
 = -alpha;

235 
	`daxpy_
(&
n
, &
Æpha
, 
Hd
, &
öc
, 
r
, &inc);

236 
∫ewT∫ew
 = 
	`ddŸ_
(&
n
, 
r
, &
öc
,Ñ, &inc);

237 
bëa
 = 
∫ewT∫ew
/
rTr
;

238 
	`dsˇl_
(&
n
, &
bëa
, 
d
, &
öc
);

239 
	`daxpy_
(&
n
, &
⁄e
, 
r
, &
öc
, 
d
, &inc);

240 
rTr
 = 
∫ewT∫ew
;

243 
dñëe
[] 
d
;

244 
dñëe
[] 
Hd
;

246 (
cg_ôî
);

247 
	}
}

249 
	gTRON
::
	$n‹m_öf
(
n
, *
x
)

251 
dmax
 = 
	`Ábs
(
x
[0]);

252 
i
=1; i<
n
; i++)

253 i‡(
	`Ábs
(
x
[
i
]Ë>
dmax
)

254 
dmax
 = 
	`Ábs
(
x
[
i
]);

255 (
dmax
);

256 
	}
}

258 
	gTRON
::
	$£t_¥öt_°rög
((*
¥öt_°rög
Ë(c⁄° *
buf
))

260 
å⁄_¥öt_°rög
 = 
¥öt_°rög
;

261 
	}
}

	@NaN/src/tron.h

27 #i‚de‡
_TRON_H


28 
	#_TRON_H


	)

30 ˛as†
	cfun˘i⁄


32 
	mpublic
:

33 
vútuÆ
 
fun
(*
w
) = 0 ;

34 
vútuÆ
 
gød
(*
w
, *
g
) = 0 ;

35 
vútuÆ
 
Hv
(*
s
, *
Hs
) = 0 ;

37 
vútuÆ
 
gë_ƒ_v¨übÀ
() = 0 ;

38 
	mvútuÆ
 ~
	$fun˘i⁄
(){}

39 
	}
};

41 ˛as†
	cTRON


43 
	mpublic
:

44 
TRON
(c⁄° 
fun˘i⁄
 *
fun_obj
, 
ïs
 = 0.1, 
max_ôî
 = 1000);

45 ~
TRON
();

47 
å⁄
(*
w
);

48 
£t_¥öt_°rög
((*
i_¥öt
Ë(c⁄° *
buf
));

50 
¥iv©e
:

51 
	`åcg
(
dñè
, *
g
, *
s
, *
r
);

52 
	`n‹m_öf
(
n
, *
x
);

54 
ïs
;

55 
max_ôî
;

56 
fun˘i⁄
 *
fun_obj
;

57 
	`öfo
(c⁄° *
fmt
,...);

58 (*
å⁄_¥öt_°rög
)(c⁄° *
buf
);

	@NaN/src/xptopen.cpp

53 
	#TEST_CONVERSION
 0

54 
	#DEBUG
 1

	)

56 
	~<˘y≥.h
>

57 
	~<m©h.h
>

59 
	~<°döt.h
>

60 
	~<°dio.h
>

61 
	~<°rög.h
>

62 
	~<sys/∑øm.h
>

63 
	~<time.h
>

64 
	~"mex.h
"

66 #i‚de‡
ty≥of


67 
	#ty≥of
 
__ty≥of__


	)

70 #ifde‡
tmwty≥s_h


71 #i‡(
MX_API_VER
<=0x07020000)

72 
	tmwSize
;

73 
	tmwIndex
;

77 
	#NaN
 (0.0/0.0)

	)

78 
	#fix
(
m
Ë(m<0 ? 
	`˚û
(mË: 
	`Êo‹
(m))

	)

79 
	#max
(
a
,
b
Ë((◊Ë> (b)Ë? (aË: (b))

	)

80 
	#mö
(
a
,
b
Ë((◊Ë< (b)Ë? (aË: (b))

	)

85 #ñi‡
deföed
(
__löux__
)

86 
	~<ídün.h
>

87 
	~<byãsw≠.h
>

89 #ñi‡
deföed
(
__CYGWIN__
)

90 
	~<ídün.h
>

91 
	~<byãsw≠.h
>

93 #ñi‡
deföed
(
__GLIBC__
)

94 
	~<ídün.h
>

95 
	~<byãsw≠.h
>

97 #ñi‡
deföed
(
__MINGW32__
)

99 
	#__BIG_ENDIAN
 4321

	)

100 
	#__LITTLE_ENDIAN
 1234

	)

101 
	#__BYTE_ORDER
 
__LITTLE_ENDIAN


	)

103 #ñi‡
deföed
(
__NëBSD__
)

104 
	~<sys/bsw≠.h
>

105 
	#__BIG_ENDIAN
 
_BIG_ENDIAN


	)

106 
	#__LITTLE_ENDIAN
 
_LITTLE_ENDIAN


	)

107 
	#__BYTE_ORDER
 
_BYTE_ORDER


	)

108 
	#bsw≠_16
(
x
Ë
	`bsw≠16
(x)

	)

109 
	#bsw≠_32
(
x
Ë
	`bsw≠32
(x)

	)

110 
	#bsw≠_64
(
x
Ë
	`bsw≠64
(x)

	)

112 #ñi‡
deföed
(
_APPLE_
Ë&& deföed(
_MACH_
)

113 
	~<machöe/ídün.h
>

114 
	#_BYTE_ORDER
 
__DARWIN_BYTE_ORDER


	)

115 
	#_LITTLE_ENDIAN
 
__DARWIN_LITTLE_ENDIAN


	)

116 
	#_BIG_ENDIAN
 
__DARWIN_BIG_ENDIAN


	)

117 
	#bsw≠_16
(
x
Ë
	`__bsw≠16
(x)

	)

118 
	#bsw≠_32
(
x
Ë
	`__bsw≠32
(x)

	)

119 
	#bsw≠_64
(
x
Ë
	`__bsw≠64
(x)

	)

121 #ñi‡
deföed
(
__APPLE__
)

122 
	~<C‹eFound©i⁄/CFByãOrdî.h
>

123 
	#__BIG_ENDIAN
 4321

	)

124 
	#__LITTLE_ENDIAN
 1234

	)

125 #i‡(
deföed
(
__LITTLE_ENDIAN__
) && (__LITTLE_ENDIAN__ == 1))

126 
	#__BYTE_ORDER
 
__LITTLE_ENDIAN


	)

128 
	#__BYTE_ORDER
 
__BIG_ENDIAN


	)

130 
	#bsw≠_16
(
x
Ë
	`CFSw≠I¡16
(x)

	)

131 
	#bsw≠_32
(
x
Ë
	`CFSw≠I¡32
(x)

	)

132 
	#bsw≠_64
(
x
Ë
	`CFSw≠I¡64
(x)

	)

134 #ñi‡(
deföed
(
BSD
Ë&& (BSD >199103)Ë&& !deföed(
__GLIBC__
)

135 
	~<machöe/ídün.h
>

136 
	#__BIG_ENDIAN
 
_BIG_ENDIAN


	)

137 
	#__LITTLE_ENDIAN
 
_LITTLE_ENDIAN


	)

138 
	#__BYTE_ORDER
 
_BYTE_ORDER


	)

139 
	#bsw≠_16
(
x
Ë
	`__bsw≠16
(x)

	)

140 
	#bsw≠_32
(
x
Ë
	`__bsw≠32
(x)

	)

141 
	#bsw≠_64
(
x
Ë
	`__bsw≠64
(x)

	)

143 #ñi‡
deföed
(
__GNUC__
)

145 
	~<ídün.h
>

146 
	~<byãsw≠.h
>

147 
	#bsw≠_16
(
x
Ë
	`__bsw≠_16
 (x)

	)

148 
	#bsw≠_32
(
x
Ë
	`__bsw≠_32
 (x)

	)

149 
	#bsw≠_64
(
x
Ë
	`__bsw≠_64
 (x)

	)

151 #ñi‡
deföed
(
__•¨c__
)

152 
	#__BIG_ENDIAN
 4321

	)

153 
	#__LITTLE_ENDIAN
 1234

	)

154 
	#__BYTE_ORDER
 
__BIG_ENDIAN


	)

157 #îr‹ 
Unknown
 
∂©f‹m


160 #i‡
deföed
(
__MINGW32__
Ë|| deföed(
__•¨c__
)

162 #i‚de‡
bsw≠_16


163 
	#bsw≠_16
(
x
) \

164 ((((
x
Ë& 0xff00Ë>> 8Ë| (((xË& 0x00ffË<< 8))

	)

167 #i‚de‡
bsw≠_32


168 
	#bsw≠_32
(
x
) \

169 ((((
x
) & 0xff000000) >> 24) \

170 | (((
x
) & 0x00ff0000) >> 8) \

171 | (((
x
) & 0x0000ff00) << 8) \

172 | (((
x
Ë& 0x000000ffË<< 24))

	)

176 #i‚de‡
bsw≠_64


177 
	#bsw≠_64
(
x
) \

178 ((((
x
) & 0xff00000000000000ull) >> 56) \

179 | (((
x
) & 0x00ff000000000000ull) >> 40) \

180 | (((
x
) & 0x0000ff0000000000ull) >> 24) \

181 | (((
x
) & 0x000000ff00000000ull) >> 8) \

182 | (((
x
) & 0x00000000ff000000ull) << 8) \

183 | (((
x
) & 0x0000000000ff0000ull) << 24) \

184 | (((
x
) & 0x000000000000ff00ull) << 40) \

185 | (((
x
Ë& 0x00000000000000ffuŒË<< 56))

	)

191 #i‡!
deföed
(
__BIG_ENDIAN
Ë&& !deföed(
__LITTLE_ENDIAN
)

192 #îr‹ 
ENDIANITY
 
is
 
nŸ
 
known


196 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


197 
	#l_ídün_u16
(
x
Ë((
uöt16_t
)
	`bsw≠_16
((uöt16_t)(x)))

	)

198 
	#l_ídün_u32
(
x
Ë((
uöt32_t
)
	`bsw≠_32
((uöt32_t)(x)))

	)

199 
	#l_ídün_u64
(
x
Ë((
uöt64_t
)
	`bsw≠_64
((uöt64_t)(x)))

	)

200 
	#l_ídün_i16
(
x
Ë((
öt16_t
)
	`bsw≠_16
((öt16_t)(x)))

	)

201 
	#l_ídün_i32
(
x
Ë((
öt32_t
)
	`bsw≠_32
((öt32_t)(x)))

	)

202 
	#l_ídün_i64
(
x
Ë((
öt64_t
)
	`bsw≠_64
((öt64_t)(x)))

	)

204 
	#b_ídün_u16
(
x
Ë((
uöt16_t
)(x))

	)

205 
	#b_ídün_u32
(
x
Ë((
uöt32_t
)(x))

	)

206 
	#b_ídün_u64
(
x
Ë((
uöt64_t
)(x))

	)

207 
	#b_ídün_i16
(
x
Ë((
öt16_t
)(x))

	)

208 
	#b_ídün_i32
(
x
Ë((
öt32_t
)(x))

	)

209 
	#b_ídün_i64
(
x
Ë((
öt64_t
)(x))

	)

211 #ñi‡
__BYTE_ORDER
==
__LITTLE_ENDIAN


212 
	#l_ídün_u16
(
x
Ë((
uöt16_t
)(x))

	)

213 
	#l_ídün_u32
(
x
Ë((
uöt32_t
)(x))

	)

214 
	#l_ídün_u64
(
x
Ë((
uöt64_t
)(x))

	)

215 
	#l_ídün_i16
(
x
Ë((
öt16_t
)(x))

	)

216 
	#l_ídün_i32
(
x
Ë((
öt32_t
)(x))

	)

217 
	#l_ídün_i64
(
x
Ë((
öt64_t
)(x))

	)

219 
	#b_ídün_u16
(
x
Ë((
uöt16_t
)
	`bsw≠_16
((uöt16_t)(x)))

	)

220 
	#b_ídün_u32
(
x
Ë((
uöt32_t
)
	`bsw≠_32
((uöt32_t)(x)))

	)

221 
	#b_ídün_u64
(
x
Ë((
uöt64_t
)
	`bsw≠_64
((uöt64_t)(x)))

	)

222 
	#b_ídün_i16
(
x
Ë((
öt16_t
)
	`bsw≠_16
((öt16_t)(x)))

	)

223 
	#b_ídün_i32
(
x
Ë((
öt32_t
)
	`bsw≠_32
((öt32_t)(x)))

	)

224 
	#b_ídün_i64
(
x
Ë((
öt64_t
)
	`bsw≠_64
((öt64_t)(x)))

	)

234 #ifde‡
WITH_ZLIB


235 
	~<zlib.h
>

239 
x±2d
(
uöt64_t
 
x
);

240 
uöt64_t
 
d2x±
(
x
);

241 
tm_time2gdf_time
(
tm
 *
t
);

243 
	$mexFun˘i⁄
(
POuçutCou¡
, 
mxAºay
* 
POuçut
[], 
PI≈utCou¡
, c⁄° mxAºay *
PI≈uts
[])

245 c⁄° 
L1
[] = "HEADER RECORD*******LIBRARY HEADER RECORD!!!!!!!000000000000000000000000000000 ";

246 c⁄° 
L2
[] = "SAS SAS SASLIB 6.06 bsd4.2 13APR89:10:20:06";

248 c⁄° 
L4
[] = "HEADER RECORD*******MEMBER HEADER RECORD!!!!!!!000000000000000001600000000140 ";

249 c⁄° 
L5
[] = "HEADER RECORD*******DSCRPTR HEADER RECORD!!!!!!!000000000000000000000000000000 ";

250 c⁄° 
L6
[] = "SAS ABC SASLIB 6.06 bsd4.2 13APR89:10:20:06";

252 c⁄° 
L8
[] = "HEADER RECORD*******NAMESTR HEADER RECORD!!!!!!!000000000200000000000000000000 ";

253 c⁄° 
LO
[] = "HEADER RECORD*******OBS HEADER RECORD!!!!!!!000000000000000000000000000000 ";

255 c⁄° 
DATEFORMAT
[] = "%d%b%y:%H:%M:%S";

256 *
‚
 = 
NULL
;

257 
Mode
[3] = "r";

258 
size_t
 
cou¡
 = 0, 
HódLí0
=80*8, 
HódLí2
=0, 
sz2
 = 0;

259 
uöt32_t
 
NS
 = 0;

260 
H0
[
HódLí0
];

261 *
H2
 = 
NULL
;

262 
SWAP
 = 0;

264 #i‚de‡
ZLIB_H


265 
FILE
 *
fid
;

267 
gzFûe
 
fid
;

268 
	#f›í
 
gz›í


	)

269 
	#‰ód
(
a
,
b
,
c
,
d
Ë(
	`gzªad
(d,a,b*c)/b)

	)

270 
	#fwrôe
(
a
,
b
,
c
,
d
Ë(
	`gzwrôe
(d,a,b*c)/b)

	)

271 
	#„of
 
gzeof


	)

272 
	#f£ek
 
gz£ek


	)

273 
	#f˛o£
 
gz˛o£


	)

274 
	#ªwöd
(
fid
Ë(
	`gz£ek
(fid,0,
SEEK_SET
))

	)

278 i‡–
PI≈utCou¡
 > 0 && 
	`mxGëCœssID
(
PI≈uts
[0])==
mxCHAR_CLASS
) {

279 
size_t
 
buÊí
 = (
	`mxGëM
(
PI≈uts
[0]Ë* 
	`mxGëN
(PI≈uts[0]Ë* (
mxCh¨
)) + 1;

280 
‚
 = (*)
	`mÆloc
(
buÊí
);

281 
	`mxGëSåög
(
PI≈uts
[0], 
‚
, 
buÊí
);

284 
	`mexPrötf
("XPTOPENÑead of several file formatsánd writing ofÅhe SAS Transport Format (*.xpt)\n");

285 
	`mexPrötf
("\n\tX = xptopen(filename)\n");

286 
	`mexPrötf
("\tX = xptopen(filename,'r')\n");

287 
	`mexPrötf
("\t\tread filenameándÑeturn variables in struct X\n");

288 #ifde‡
ZLIB_H


289 
	`mexPrötf
("\tSupportedáre ARFF, SAS-XPTánd STATA files with or w/o zlib/gzip compression.\n");

291 
	`mexPrötf
("\tSupportedáre ARFF, SAS-XPTánd STATA files.\n");

293 
	`mexPrötf
("\n\tX = xptopen(filename,'w',X)\n");

294 
	`mexPrötf
("\t\tsave fields of struct X in filename.\n\n");

295 
	`mexPrötf
("\tThe fields of X must be column vectors ofÉqualÜength.\n");

296 
	`mexPrötf
("\tEach vector isÉitheráÇumeric vector orá cellárray of strings.\n");

297 
	`mexPrötf
("\nThe SAS-XPT format stores Date/TimeásÇumeric value countingÅheÇumber of days since 1960-01-01.\n\n");

301 i‡(
PI≈utCou¡
 > 1)

302 i‡(
	`mxGëCœssID
(
PI≈uts
[1])==
mxCHAR_CLASS
 && 
	`mxGëNumbîOfEÀmíts
(PInputs[1])) {

303 
	`mxGëSåög
(
PI≈uts
[1],
Mode
,3);

304 
Mode
[2]=0;

307 
fid
 = 
	`f›í
(
‚
,
Mode
);

308 i‡(
fid
 =
NULL
) {

309 
	`mexEºMsgTxt
("CanÇot open file!\n");

312 i‡(
Mode
[0]=='r' || Mode[0]=='a' ) {

313 
cou¡
 +
	`‰ód
(
H0
,1,80*8,
fid
);

314 
	eFûeF‹m©
 {

315 
noFûe
, 
unknown
, 
ARFF
, 
SASXPT
, 
SPSS
, 
SQLôe
, 
STATA


317 
FûeF‹m©
 
TYPE
;

318 
uöt8_t
 
LôéeEndün
;

320 
TYPE
 = 
unknown
;

321 i‡(!
	`memcmp
(
H0
,"$FL2@(#) SPSS DATA FILE",23) || !memcmp(H0,"$FL2@(#) PASW STATISTICS DATA FILE",27)) {

325 
uöt32_t
 
M
=0;

327 
	`mexW¨nMsgTxt
("XPTOPEN: support of for SPSS file format is veryÉxperimental (doÇot use it forÖroduction use)\n");

329 
TYPE
 = 
SPSS
;

330 *(
uöt32_t
*)(
H0
+64)) {

333 
LôéeEndün
 = 1;

334 
SWAP
 = 
__BYTE_ORDER
==
__BIG_ENDIAN
;

335 
NS
 = 
	`l_ídün_u32
(*(
uöt32_t
*)(
H0
+68));

336 
M
 = 
	`l_ídün_u32
(*(
uöt32_t
*)(
H0
+80));

340 
SWAP
 = 
__BYTE_ORDER
==
__LITTLE_ENDIAN
;

341 
LôéeEndün
 = 0;

342 
NS
 = 
	`b_ídün_u32
(*(
uöt32_t
*)(
H0
+68));

343 
M
 = 
	`b_ídün_u32
(*(
uöt32_t
*)(
H0
+80));

346 
TYPE
 = 
unknown
;

348 
NS
 = *(
öt32_t
*)(
H0
+80);

349 
M
 = *(
öt32_t
*)(
H0
+80);

350 i‡(
SWAP
) {

351 
NS
 = 
	`bsw≠_32
(NS);

352 
M
 = 
	`bsw≠_32
(M);

354 
HódLí0
 = 184;

355 *
H2
 = (*)
	`mÆloc
(
NS
*32);

356 
size_t
 
c2
 = 0;

361 
ns
 = 0;

362 c⁄° **
Li°OfV¨Names
 = (c⁄° **)
	`mÆloc
((
NS
+1) * (*));

363 *
V¨Names
 = (*)
	`mÆloc
((
NS
+1) * () * 9);

364 *
MISSINGS
 = (*)
	`mÆloc
((
NS
+1) * ());

365 
uöt32_t
 
k
=0; k<
NS
; k++) {

366 
öt32_t
 
ªc_ty≥
, 
ty≥
, 
FœgHasLabñ
, 
FœgMissög
;

367 
c2
 +
	`‰ód
(&
ªc_ty≥
,1,4,
fid
);

368 
c2
 +
	`‰ód
(&
ty≥
,1,4,
fid
);

369 
c2
 +
	`‰ód
(&
FœgHasLabñ
,1,4,
fid
);

370 
c2
 +
	`‰ód
(&
FœgMissög
,1,4,
fid
);

371 
	`f£ek
(
fid
,4,
SEEK_CUR
);

372 i‡(
SWAP
) {

373 
ªc_ty≥
 = 
	`bsw≠_32
(rec_type);

374 
ty≥
 = 
	`bsw≠_32
(type);

375 
FœgHasLabñ
 = 
	`bsw≠_32
(FlagHasLabel);

378 i‡(
ªc_ty≥
 != 2)

379 
	`mexEºMsgTxt
("invalid SPSS file\n");

381 
c2
 +
	`‰ód
(
V¨Names
+9*
ns
,1,8,
fid
);

382 
V¨Names
[9*
ns
+8] = 0;

383 
Li°OfV¨Names
[
ns
] = 
V¨Names
+9*ns;

384 i‡(
FœgHasLabñ
==1) {

385 
öt32_t
 
LíLabñ
;

386 
c2
 +
	`‰ód
(&
LíLabñ
,1,4,
fid
);

387 i‡(
SWAP
Ë
LíLabñ
 = 
	`bsw≠_32
(LenLabel);

388 i‡(
LíLabñ
%4) LenLabel += 4 - LenLabel % 4;

389 
	`f£ek
(
fid
,
LíLabñ
,
SEEK_CUR
);

391 i‡(
FœgMissög
)

392 
c2
 +
	`‰ód
(
MISSINGS
+
ns
,1,8,
fid
);

394 i‡(
ty≥
 !-1Ë
ns
++;

398 
NS
 = 
ns
;

399 
mxAºay
 **
R
 = (mxAºay**Ë
	`mxMÆloc
(
NS
 * (mxArray*));

405 
POuçut
[0] = 
	`mxCª©eSåu˘M©rix
(1, 1, 
NS
, 
Li°OfV¨Names
);

406 
uöt32_t
 
k
 = 0; k < 
NS
; k++) {

407 
	`mxSëFõld
(
POuçut
[0], 0, 
Li°OfV¨Names
[
k
], 
R
[k]);

410 i‡(
MISSINGS
Ë
	`‰ì
(MISSINGS);

411 i‡(
V¨Names
Ë
	`‰ì
(VarNames);

412 i‡(
Li°OfV¨Names
Ë
	`‰ì
(ListOfVarNames);

413 i‡(
H2
Ë
	`‰ì
(H2);

416 i‡(
TYPE
 =
SPSS
) {

436 i‡(!
	`memcmp
(
H0
,"SQLite format 3\000",16) && H0[21]==64 && H0[22]==32 && H0[23]==32 ) {

437 
TYPE
 = 
SQLôe
;

439 
	`f˛o£
(
fid
);

440 
	`mexEºMsgTxt
("SQLite formatÇot supported yet");

444 i‡((
H0
[0]>=0x6e || H0[0]<=114) && (H0[1]==1 || H0[1]==2) && H0[2]==1 && H0[3]==0) {

451 
uöt32_t
 
M
=0;

453 
TYPE
 = 
STATA
;

455 
LôéeEndün
 = 
H0
[1]==2;

456 i‡(
LôéeEndün
) {

457 
NS
 = 
	`l_ídün_u16
(*(
uöt16_t
*)(
H0
+4));

458 
M
 = 
	`l_ídün_u32
(*(
uöt32_t
*)(
H0
+6));

461 
NS
 = 
	`b_ídün_u16
(*(
uöt16_t
*)(
H0
+4));

462 
M
 = 
	`b_ídün_u32
(*(
uöt32_t
*)(
H0
+6));

466 
fméí
 = (
H0
[0]==113) ? 12 : 49;

467 
	`f£ek
(
fid
,109,
SEEK_SET
);

468 
size_t
 
HódLí2
 = 2+
NS
*(1+33+2+
fméí
+33+81);

469 *
H1
 = (*)
	`mÆloc
(
HódLí2
);

470 
HódLí2
 = 
	`‰ód
(
H1
,1,HódLí2,
fid
);

473 
typ
; 
öt32_t
 
Àn
;

474 
ÊagSWAP
 = (((
__BYTE_ORDER
 =
__BIG_ENDIAN
Ë&& 
LôéeEndün
Ë|| ((__BYTE_ORDER =
__LITTLE_ENDIAN
) && !LittleEndian));

476 i‡(!
	`‰ód
(&
typ
,1,1,
fid
)) ;

477 i‡(!
	`‰ód
(&
Àn
,4,1,
fid
)) ;

478 i‡(
ÊagSWAP
Ë
	`bsw≠_32
(
Àn
);

479 
	`f£ek
(
fid
,
Àn
,
SEEK_CUR
);

480 } 
Àn
);

481 
uöt8_t
 *
ty∂i°
 = (uöt8_t*)
H1
;

490 
mxAºay
 **
R
 = (mxAºay**Ë
	`mxMÆloc
(
NS
*(mxArray*));

491 
size_t
 *
bi
 = (size_t*Ë
	`mÆloc
((
NS
+1)*(size_t*));

492 c⁄° **
Li°OfV¨Names
 = (c⁄° **)
	`mÆloc
(
NS
 * (*));

493 
bi
[0] = 0;

494 
size_t
 
k
 = 0; k < 
NS
; k++) {

495 
size_t
 
sz
;

496 
Li°OfV¨Names
[
k
] = 
H1
+
NS
+33*k;

497 
ty∂i°
[
k
]) {

498 0xfb: 
sz
 = 1; ;

499 0xfc: 
sz
 = 2; ;

500 0xfd: 
sz
 = 4; ;

501 0x„: 
sz
 = 4; ;

502 0xff: 
sz
 = 8; ;

503 : 
sz
 = 
ty∂i°
[
k
];

505 
bi
[
k
+1] = bi[k]+
sz
;

509 
uöt8_t
 *
d©a
 = (uöt8_à*Ë
	`mÆloc
(
bi
[
NS
] * 
M
);

510 
	`‰ód
(
d©a
, 
bi
[
NS
], 
M
, 
fid
);

512 *
f
 = (*)
	`mÆloc
(
bi
[
NS
]+1);

513 
size_t
 
k
 = 0; k < 
NS
; k++) {

514 
ty∂i°
[
k
]) {

516 
R
[
k
] = 
	`mxCª©eDoubÀM©rix
(
M
, 1, 
mxREAL
);

517 
	`ty≥of
(
M
Ë
m
 = 0; m < M; m++) {

518 
öt8_t
 
d
 = *(öt8_t*)(
d©a
+
bi
[
k
]+
m
*bi[
NS
]);

519 ((*)
	`mxGëD©a
(
R
[
k
]))[
m
] = (
d
>100Ë? 
NaN
 : d;

523 
R
[
k
] = 
	`mxCª©eDoubÀM©rix
(
M
, 1, 
mxREAL
);

524 i‡(
ÊagSWAP
Ë
size_t
 
m
 = 0; m < 
M
; m++) {

525 
öt16_t
 
d
 = (öt16_tË
	`bsw≠_16
(*(
uöt16_t
*)(
d©a
+
bi
[
k
]+
m
*bi[
NS
]));

526 ((*)
	`mxGëD©a
(
R
[
k
]))[
m
] = (
d
>32740Ë? 
NaN
 : d;

528 
	`ty≥of
(
M
Ë
m
 = 0; m < M; m++) {

529 
öt16_t
 
d
 = *(öt16_t*)(
d©a
+
bi
[
k
]+
m
*bi[
NS
]);

530 ((*)
	`mxGëD©a
(
R
[
k
]))[
m
] = (
d
>32740Ë? 
NaN
 : d;

534 
R
[
k
] = 
	`mxCª©eDoubÀM©rix
(
M
, 1, 
mxREAL
);

535 i‡(
ÊagSWAP
Ë
size_t
 
m
 = 0; m < 
M
; m++) {

536 
öt32_t
 
d
 = (öt32_t)
	`bsw≠_32
(*(
uöt32_t
*)(
d©a
+
bi
[
k
]+
m
*bi[
NS
]));

537 ((*)
	`mxGëD©a
(
R
[
k
]))[
m
] = (
d
>2147483620Ë? 
NaN
 : d;

539 
	`ty≥of
(
M
Ë
m
 = 0; m < M; m++) {

540 
öt32_t
 
d
 = *(öt32_t*)(
d©a
+
bi
[
k
]+
m
*bi[
NS
]);

541 ((*)
	`mxGëD©a
(
R
[
k
]))[
m
] = (
d
>2147483620Ë? 
NaN
 : d;

545 
R
[
k
] = 
	`mxCª©eNumîicM©rix
(
M
, 1, 
mxSINGLE_CLASS
, 
mxREAL
);

546 i‡(
ÊagSWAP
Ë
size_t
 
m
 = 0; m < 
M
; m++) {

547 ((
uöt32_t
*)
	`mxGëD©a
(
R
[
k
]))[
m
] = 
	`bsw≠_32
(*(uöt32_t*)(
d©a
+
bi
[k]+m*bi[
NS
]));;

549 
size_t
 
m
 = 0; m < 
M
; m++) {

550 ((
uöt32_t
*)
	`mxGëD©a
(
R
[
k
]))[
m
] = *(uöt32_t*)(
d©a
+
bi
[k]+m*bi[
NS
]);

554 
R
[
k
] = 
	`mxCª©eDoubÀM©rix
(
M
, 1, 
mxREAL
);

555 i‡(
ÊagSWAP
Ë
	`ty≥of
(
M
Ë
m
 = 0; m < M; m++) {

556 ((
uöt64_t
*)
	`mxGëD©a
(
R
[
k
]))[
m
] = 
	`bsw≠_64
(*(uöt64_t*)(
d©a
+
bi
[k]+m*bi[
NS
]));

558 
	`ty≥of
(
M
Ë
m
 = 0; m < M; m++) {

559 ((
uöt64_t
*)
	`mxGëD©a
(
R
[
k
]))[
m
] = *(uöt64_t*)(
d©a
+
bi
[k]+m*bi[
NS
]);

563 
R
[
k
] = 
	`mxCª©eCñlM©rix
(
M
, 1);

564 
size_t
 
sz
 = 
ty∂i°
[
k
];

565 
	`ty≥of
(
M
Ë
m
 = 0; m < M; m++) {

566 
	`mem˝y
(
f
, 
d©a
+
bi
[
k
]+
m
*bi[
NS
], 
sz
);

567 
f
[
sz
] = 0;

568 
	`mxSëCñl
(
R
[
k
], 
m
, 
	`mxCª©eSåög
(
f
));

572 i‡(
f
Ë
	`‰ì
(f);

573 i‡(
H1
Ë
	`‰ì
(H1);

574 i‡(
bi
Ë
	`‰ì
(bi);

577 
POuçut
[0] = 
	`mxCª©eSåu˘M©rix
(1, 1, 
NS
, 
Li°OfV¨Names
);

578 
size_t
 
k
 = 0; k < 
NS
; k++) {

579 
	`mxSëFõld
(
POuçut
[0], 0, 
Li°OfV¨Names
[
k
], 
R
[k]);

582 i‡(
Li°OfV¨Names
Ë
	`‰ì
(ListOfVarNames);

585 i‡(
H0
[0]=='%' || H0[0]=='@') {

589 
uöt32_t
 
M
=0;

591 
TYPE
 = 
ARFF
;

592 
	`ªwöd
(
fid
);

594 *
H1
 = 
NULL
;

595 
cou¡
 = 0;

596 
size_t
 
ns
 = 0;

597 *
v¨typ
 = 
NULL
;

598 **
d©e°r
 = 
NULL
;

599 c⁄° **
Li°OfV¨Names
 = 
NULL
;

600 
mxAºay
 **
R
 = 
NULL
;

601 
size_t
 
m
 = 0;

603 !
	`„of
(
fid
)) {

604 
HódLí0
 = 
	`max
(1024,HeadLen0*2);

605 
H1
 = (*)
	`ªÆloc
(H1,
HódLí0
);

606 
cou¡
 +
	`‰ód
(
H1
+cou¡,1,
HódLí0
-cou¡-1,
fid
);

608 
H1
[
cou¡
] = 0;

610 
H1
[
cou¡
-1]) {

613 
H1
[
cou¡
] = 0;

616 
H1
[
cou¡
] = 0x0a;

618 
H1
[
cou¡
+1] = 0;

620 *
löe
 = 
	`°πok
(
H1
,"\x0a\0x0d");

622 
°©us
 = 0;

623 
löe
) {

625 i‡(!
	`°∫ˇ£cmp
(
löe
,"@relation",9)) {

626 
°©us
 = 1;

629 i‡(
°©us
 =1 && !
	`°∫ˇ£cmp
(
löe
,"@attribute",10)) {

630 i‡(
ns
<=
NS
) {

631 
ns
 = 
	`max
(16,Çs*2);

632 
Li°OfV¨Names
 = (c⁄° **)
	`ªÆloc
(Li°OfV¨Names,
ns
*(*));

633 
v¨typ
 = (*)
	`ªÆloc
(v¨typ,
ns
*());

634 
R
 = (
mxAºay
**Ë
	`mxRóŒoc
(R,
ns
*(mxArray*));

636 
size_t
 
k
 = 10;

637 *
p1
, *
p2
;

638 
	`is•a˚
(
löe
[
k
])) k++;

639 
p1
 = 
löe
+
k
;

640 !
	`is•a˚
(
löe
[
k
])) k++;

641 
löe
[
k
++]=0;

642 
	`is•a˚
(
löe
[
k
])) k++;

643 
p2
 = 
löe
+
k
;

645 
Li°OfV¨Names
[
NS
] = 
p1
;

646 i‡(!
	`°∫ˇ£cmp
(
p2
,"numeric",7)) {

647 
v¨typ
[
NS
] = 1;

649 i‡(!
	`°∫ˇ£cmp
(
p2
,"integer",7)) {

650 
v¨typ
[
NS
] = 2;

652 i‡(!
	`°∫ˇ£cmp
(
p2
,"real",4)) {

653 
v¨typ
[
NS
] = 3;

655 i‡(!
	`°∫ˇ£cmp
(
p2
,"string",6)) {

656 
v¨typ
[
NS
] = 4;

658 i‡(!
	`°∫ˇ£cmp
(
p2
,"{",1)) {

659 
v¨typ
[
NS
] = 5;

661 i‡(!
	`°∫ˇ£cmp
(
p2
,"date",4)) {

662 
v¨typ
[
NS
] = 6;

663 
d©e°r
 = (**)
	`ªÆloc
(d©e°r,(
NS
+1)*(*));

664 
p2
+=4;

665 
	`is•a˚
(*
p2
))Ö2++;

666 
d©e°r
[
NS
] = 
p2
;

667 i‡(
p2
[0]==34) {

668 
p2
++;

669 
p2
[0]!=34 &&Ö2[0])Ö2++;

670 
p2
[1]=0;

673 i‡(!
	`°∫ˇ£cmp
(
p2
,"relational",10)) {

674 
v¨typ
[
NS
] = 7;

676 
v¨typ
[
NS
] = 99;

678 
NS
++;

681 i‡(
°©us
 =1 && !
	`°∫ˇ£cmp
(
löe
,"@data",5)) {

682 
°©us
 = 2;

683 *
p
 = 
löe
;

684 *
p
)Ö++;

685 
p
++;

686 
M
 = 0;

687 *
p
) {

688 i‡(
p
[0]==0x0a ||Ö[0]==0x0d) {

690 
M
++;

692 
p
+=2;

694 
p
++;

696 
size_t
 
k
=0; k<
NS
; k++) {

697 i‡(
v¨typ
[
k
]==4 || vartyp[k]==5)

698 
R
[
k
] = 
	`mxCª©eCñlM©rix
(
M
, 1);

700 
R
[
k
] = 
	`mxCª©eDoubÀM©rix
(
M
, 1, 
mxREAL
);

704 i‡(
°©us
 == 2) {

706 
size_t
 
p
 = 0,
k
;

707 
ns
 = 0;Çs<
NS
;Çs++) {

709 
	`is•a˚
(
löe
[
p
]))Ö++;

710 i‡(
löe
[
p
]==39) {

711 
p
++; 
k
=p;

712 
löe
[
k
]!=39 &&Üine[k]) k++;

714 
löe
[
k
++] = 0;

717 
k
=
p
;

718 
löe
[
k
] != ',' &&Üine[k] != 0) k++;

719 
löe
[
k
] = 0;

721 i‡(
v¨typ
[
ns
] < 4) {

722 
d
 = 
	`©of
(
löe
+
p
);

723 *(
	`mxGëPr
(
R
[
ns
])+
m
Ë
d
;

725 i‡(
v¨typ
[
ns
] < 6) {

726 
	`mxSëCñl
(
R
[
ns
], 
m
, 
	`mxCª©eSåög
(
löe
+
p
));

728 i‡(
v¨typ
[
ns
] == 6) {

729 
size_t
 
kk
[6],
n
=0, 
N
=
	`°æí
(
d©e°r
[
ns
]);

730 
T0
[6][5];

731 
ix
 = 0;

732 
tm
 
t
;

734 
n
=0;Ç < 
N
;Ç++) {

735 
d©e°r
[
ns
][
n
]) {

737 
ix
 = 0;

740 
ix
 = 1;

743 
ix
 = 2;

746 
ix
 = 3;

749 
ix
 = 4;

752 
ix
 = 5;

755 
ix
 = 99;

758 i‡(
ix
 < 6) {

759 
T0
[
ix
][
kk
[ix]++] = 
löe
[
p
+
n
];

762 
n
=0;Ç<6;Ç++) {

763 
T0
[
n
][
kk
[n]] = 0;

765 
t
.
tm_yór
 = 
	`©oi
(
T0
[0]);

766 
t
.
tm_m⁄
 = 
	`©oi
(
T0
[1]);

767 
t
.
tm_mday
 = 
	`©oi
(
T0
[2]);

768 
t
.
tm_hour
 = 
	`©oi
(
T0
[3]);

769 
t
.
tm_mö
 = 
	`©oi
(
T0
[4]);

770 
t
.
tm_£c
 = 
	`©oi
(
T0
[5]);

772 *(
	`mxGëPr
(
R
[
ns
])+
m
Ë
	`tm_time2gdf_time
(&
t
);

774 
p
 = 
k
+1;

776 
m
++;

778 
löe
 = 
	`°πok
(
NULL
, "\x0a\x0d");

782 
POuçut
[0] = 
	`mxCª©eSåu˘M©rix
(1, 1, 
NS
, 
Li°OfV¨Names
);

783 
size_t
 
k
 = 0; k < 
NS
; k++) {

784 
	`mxSëFõld
(
POuçut
[0], 0, 
Li°OfV¨Names
[
k
], 
R
[k]);

787 i‡(
Li°OfV¨Names
Ë
	`‰ì
(ListOfVarNames);

788 i‡(
v¨typ
Ë
	`‰ì
(vartyp);

789 i‡(
d©e°r
Ë
	`‰ì
(datestr);

790 i‡(
H1
Ë
	`‰ì
(H1);

793 i‡(!
	`memcmp
(
H0
,"HEADER RECORD*******LIBRARY HEADER RECORD!!!!!!!000000000000000000000000000000",78)) {

797 
size_t
 
M
=0;

798 
TYPE
 = 
SASXPT
;

802 
tmp
[5];

803 
	`mem˝y
(
tmp
,
H0
+7*80+54,4);

804 
tmp
[4] = 0;

805 
NS
 = 
	`©oi
(
tmp
);

807 *
tmp2
;

808 
sz2
 = 
	`°πoul
(
H0
+4*80-6, &
tmp2
, 10);

810 
HódLí2
 = 
NS
*
sz2
;

811 i‡(
HódLí2
 % 80) HeadLen2 = (HeadLen2 / 80 + 1) * 80;

814 
H2
 = (*Ë
	`ªÆloc
(H2, 
HódLí2
+81);

815 
cou¡
 +
	`‰ód
(
H2
,1,
HódLí2
+80,
fid
);

818 
size_t
 
pos
=0, 
ªcsize
 = 0, 
POS
 = 0;

819 
size_t
 
k
 = 0; k < 
NS
; k++)

820 
ªcsize
 +
	`b_ídün_u16
(*(
öt16_t
*)(
H2
+
k
*
sz2
+4));

823 
size_t
 
szD©a
 = 0;

824 
uöt8_t
 *
D©a
 = 
NULL
;

825 !
	`„of
(
fid
)) {

826 
size_t
 
szNew
 = 
	`max
(16,
szD©a
*2);

827 
D©a
 = (
uöt8_t
*)
	`ªÆloc
(D©a,
szNew
);

828 
szD©a
 +
	`‰ód
(
D©a
+szD©a,1,
szNew
-szD©a,
fid
);

831 
M
 = 
szD©a
/
ªcsize
;

833 
mxAºay
 **
R
 = (mxAºay**Ë
	`mxMÆloc
(
NS
*(mxArray*));

834 c⁄° **
Li°OfV¨Names
 = (c⁄° **)
	`mÆloc
(
NS
 * (*));

835 *
V¨Names
 = (*)
	`mÆloc
(
NS
 * 9);

837 
size_t
 
k
 = 0; k < 
NS
; k++) {

838 
size_t
 
maxÀn
 = 
	`b_ídün_u16
(*(
öt16_t
*)(
H2
+
k
*
sz2
+4));

840 
Li°OfV¨Names
[
k
] = 
V¨Names
+
pos
;

841 
size_t
 
n
 = 
k
*
sz2
+8;

844 
V¨Names
[
pos
++] = 
H2
[
n
];

845 } 
	`iß um
(
H2
[++
n
]Ë&& (¿< 
k
*
sz2
+16));

848 
V¨Names
[
pos
++] = 0;

850 i‡((*(
öt16_t
*)(
H2
+
k
*
sz2
)Ë=
	`b_ídün_u16
(1) && (*(int16_t*)(H2+k*sz2+4)) == b_endian_u16(8) ) {

852 
R
[
k
] = 
	`mxCª©eDoubÀM©rix
(
M
, 1, 
mxREAL
);

853 
size_t
 
m
=0; m<
M
; m++) {

854 
d
 = 
	`x±2d
(
	`b_ídün_u64
(*(
uöt64_t
*)(
D©a
+
m
*
ªcsize
+
POS
)));

858 *(
	`mxGëPr
(
R
[
k
])+
m
Ë
d
;

862 i‡((*(
öt16_t
*)(
H2
+
k
*
sz2
)Ë=
	`b_ídün_u16
(2)) {

864 
R
[
k
] = 
	`mxCª©eCñlM©rix
(
M
, 1);

865 *
f
 = (*)
	`mÆloc
(
maxÀn
+1);

866 
size_t
 
m
=0; m<
M
; m++) {

867 
	`mem˝y
(
f
, 
D©a
+
m
*
ªcsize
+
POS
, 
maxÀn
);

868 
f
[
maxÀn
] = 0;

869 
	`mxSëCñl
(
R
[
k
], 
m
, 
	`mxCª©eSåög
(
f
));

871 i‡(
f
Ë
	`‰ì
(f);

873 
POS
 +
maxÀn
;

876 
POuçut
[0] = 
	`mxCª©eSåu˘M©rix
(1, 1, 
NS
, 
Li°OfV¨Names
);

877 
size_t
 
k
 = 0; k < 
NS
; k++) {

878 
	`mxSëFõld
(
POuçut
[0], 0, 
Li°OfV¨Names
[
k
], 
R
[k]);

881 i‡(
V¨Names
Ë
	`‰ì
(VarNames);

882 i‡(
Li°OfV¨Names
Ë
	`‰ì
(ListOfVarNames);

883 i‡(
D©a
Ë
	`‰ì
(Data);

888 
	`f˛o£
(
fid
);

889 
	`mexEºMsgTxt
("file formatÇot supported");

898 i‡(
Mode
[0]=='w') {

900 
NS
 +
	`mxGëNumbîOfFõlds
(
PI≈uts
[2]);

903 i‡(
Mode
[0]=='w') {

904 
	`mem£t
(
H0
,' ',80*8);

905 
	`mem˝y
(
H0
,
L1
,
	`°æí
(L1));

906 
	`mem˝y
(
H0
+80,
L2
,
	`°æí
(L2));

908 
	`mem˝y
(
H0
+80*3,
L4
,
	`°æí
(L4));

909 
	`mem˝y
(
H0
+80*4,
L5
,
	`°æí
(L5));

910 
	`mem˝y
(
H0
+80*5,
L6
,
	`°æí
(L6));

912 
	`mem˝y
(
H0
+80*7,
L8
,
	`°æí
(L8));

915 
time_t
 
t
;

916 
	`time
(&
t
);

917 
â
[20];

918 
	`°r·ime
(
â
, 17, 
DATEFORMAT
, 
	`loˇ…ime
(&
t
));

919 
	`mem˝y
(
H0
+80*2-16,
â
,16);

920 
	`mem˝y
(
H0
+80*2,
â
,16);

921 
	`mem˝y
(
H0
+80*5+8,
‚
,
	`mö
(8,
	`°rc•n
(fn,".\x00")));

922 
	`mem˝y
(
H0
+80*5+32,"XPTOPEN.MEX (OCTAVE/MATLAB)",27);

923 
	`mem˝y
(
H0
+80*6-16,
â
,16);

924 
	`mem˝y
(
H0
+80*6,
â
,16);

926 
tmp
[17];

927 
	`•rötf
(
tmp
,"%04i", 
NS
);

928 
	`mem˝y
(
H0
+80*7+54, 
tmp
, 4);

930 i‡(
sz2
==0) sz2 = 140;

931 i‡(
sz2
 < 136)

932 
	`mexEºMsgTxt
("error XPTOPEN: incorrectÜength ofÇamestr field");

935 
HódLí2
 = 
NS
*
sz2
;

936 i‡(
HódLí2
 % 80) HeadLen2 = (HeadLen2 / 80 + 1) * 80;

937 
H2
 = (*Ë
	`ªÆloc
(H2,
HódLí2
);

938 
	`mem£t
(
H2
,0,
HódLí2
);

940 
size_t
 
M
 = 0;

941 
mxAºay
 **
F
 = (mxAºay**Ë
	`mxMÆloc
(
NS
*(mxArray*));

942 **
F°r
 = (**Ë
	`mÆloc
(
NS
*(*));

943 
size_t
 *
MAXLEN
 = (size_t*Ë
	`mÆloc
(
NS
*(size_t*));

944 
uöt16_t
 
k
 = 0; k < 
NS
; k++) {

945 
F°r
[
k
] = 
NULL
;

946 
MAXLEN
[
k
]=0;

947 
F
[
k
] = 
	`mxGëFõldByNumbî
(
PI≈uts
[2],0,k);

948 i‡(
k
==0Ë
M
 = 
	`mxGëM
(
F
[k]);

949 i‡(
M
 !
	`mxGëM
(
F
[
k
])) {

950 i‡(
H2
Ë
	`‰ì
(H2);

951 i‡(
F
Ë
	`‰ì
(F);

952 
	`mexEºMsgTxt
("Error XPTOPEN:Çumber ofÉlements (rows) doÇot fit !!!");

955 i‡(
	`mxIsCh¨
(
F
[
k
])) {

956 *(
öt16_t
*)(
H2
+
k
*
sz2
Ë
	`b_ídün_u16
(2);

957 *(
öt16_t
*)(
H2
+
k
*
sz2
+4Ë
	`b_ídün_u16
(
	`mxGëN
(
F
[k]));

959 i‡(
	`mxIsCñl
(
F
[
k
])) {

960 
size_t
 
maxÀn
 = 0;

961 
size_t
 
m
 = 0; m<
M
; m++) {

962 
mxAºay
 *
f
 = 
	`mxGëCñl
(
F
[
k
],
m
);

963 i‡(
	`mxIsCh¨
(
f
Ë|| 
	`mxIsEm±y
(f)) {

964 
size_t
 
Àn
 = 
	`mxGëNumbîOfEÀmíts
(
f
);

965 i‡(
maxÀn
<
Àn
) maxlen =Üen;

968 
F°r
[
k
] = (*Ë
	`mÆloc
(
maxÀn
+1);

969 *(
öt16_t
*)(
H2
+
k
*
sz2
Ë
	`b_ídün_u16
(2);

970 *(
öt16_t
*)(
H2
+
k
*
sz2
+4Ë
	`b_ídün_u16
(
maxÀn
);

971 
MAXLEN
[
k
] = 
maxÀn
;

974 *(
öt16_t
*)(
H2
+
k
*
sz2
Ë
	`b_ídün_u16
(1);

975 *(
öt16_t
*)(
H2
+
k
*
sz2
+4Ë
	`b_ídün_u16
(8);

977 *(
öt16_t
*)(
H2
+
k
*
sz2
+6Ë
	`b_ídün_u16
(k);

978 
	`°∫˝y
(
H2
+
k
*
sz2
+8,
	`mxGëFõldNameByNumbî
(
PI≈uts
[2],k),8);

981 
cou¡
 = 
	`fwrôe
(
H0
, 1, 
HódLí0
, 
fid
);

982 
cou¡
 +
	`fwrôe
(
H2
, 1, 
HódLí2
, 
fid
);

984 
cou¡
 +
	`fwrôe
(
LO
, 1, 
	`°æí
(LO), 
fid
);

985 
size_t
 
m
 = 0; m < 
M
; m++) {

986 
uöt16_t
 
k
 = 0; k < 
NS
; k++) {

988 i‡(*(
öt16_t
*)(
H2
+
k
*
sz2
Ë=
	`b_ídün_u16
(1)) {

990 
uöt64_t
 
u64
 = 
	`b_ídün_u64
(
	`d2x±
(*(
	`mxGëPr
(
F
[
k
])+
m
)));

991 
cou¡
 +
	`fwrôe
(&
u64
, 1, 8, 
fid
);

999 i‡(
	`mxIsCñl
(
F
[
k
])) {

1000 
size_t
 
maxÀn
 = 
MAXLEN
[
k
];

1001 
mxAºay
 *
f
 = 
	`mxGëCñl
(
F
[
k
],
m
);

1002 
	`mxGëSåög
(
f
, 
F°r
[
k
], 
maxÀn
+1);

1003 
cou¡
 +
	`fwrôe
(
F°r
[
k
], 1, 
maxÀn
, 
fid
);

1014 
size_t
 
k
=0; k<
NS
; k++Ëi‡(
F°r
[k]Ë
	`‰ì
(Fstr[k]);

1015 i‡(
F°r
Ë
	`‰ì
(Fstr);

1016 i‡(
MAXLEN
Ë
	`‰ì
(MAXLEN);

1017 
F°r
 = 
NULL
;

1019 
	`f˛o£
(
fid
);

1021 i‡(
H2
Ë
	`‰ì
(H2);

1022 
H2
 = 
NULL
;

1025 
	}
}

1032 
	$x±2d
(
uöt64_t
 
x
) {

1034 
c
 = *((*)&
x
+7) & 0x7f;

1035 
uöt64_t
 
u
 = 
x
;

1036 *((*)&
u
+7)=0;

1038 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


1040 
	`mexEºMsgTxt
("IEEE-to-IBM conversion on big-endianÖlatformÇot supported, yet");

1042 #ñi‡
__BYTE_ORDER
==
__LITTLE_ENDIAN


1044 #i‡
DEBUG


1045 
	`mexPrötf
("x±2d(%016Lx): [0x%x]\n",
x
,
c
);

1049 i‡((
c
==0x2ê|| c==0x5‡|| (c>0x40 && c<0x5b)Ë&& !
u
 )

1050 (
NaN
);

1052 
s
,
e
;

1053 
s
 = *(((*)&
x
) + 7) & 0x80;

1054 
e
 = (*(((*)&
x
) + 7) & 0x7f) - 64;

1055 *(((*)&
x
) + 7) = 0;

1057 #i‡
DEBUG


1058 
	`mexPrötf
("%x %x %016Lx\n",
s
,
e
,
x
);

1061 
y
 = 
	`ldexp
(()
x
, 
e
*4-56);

1062 i‡(
s
Ë(-
y
);

1063 –
y
);

1066 
	}
}

1073 
uöt64_t
 
	$d2x±
(
x
) {

1074 
uöt64_t
 
s
,
m
;

1075 
e
;

1077 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


1079 
	`mexEºMsgTxt
("IEEE-to-IBM conversion on big-endianÖlatformÇot supported, yet");

1082 #ñi‡
__BYTE_ORDER
==
__LITTLE_ENDIAN


1084 i‡(
x
 != x) (0x2eLL << 56);

1086 i‡(
	`Ábs
(
x
) == 1.0/0.0) (0x5fLL << 56);

1088 i‡(
x
 == 0.0) (0);

1090 i‡(
x
 > 0.0Ë
s
=0;

1091 
s
=1;

1093 
x
 = 
	`‰exp
(x,&
e
);

1095 #i‡
DEBUG


1096 
	`mexPrötf
("d2x±(%f)\n",
x
);

1099 
	`mem˝y
(&
m
, &
x
, 8);

1100 *(((*)&
m
) + 6) &= 0x0f;

1101 i‡(
e
Ë*(((*)&
m
) + 6) |= 0x10;

1102 
m
 <<(3-(-
e
 & 3));

1103 *(((
uöt8_t
*)&
m
Ë+ 7Ë
s
 ? 0x80 : 0;

1104 
e
 = (e + (-e & 3)) / 4 + 64;

1106 i‡(
e
 >= 128) (0x5f);

1107 i‡(
e
 < 0) {

1108 
uöt64_t
 
h
 = 1<<(4*-
e
 - 1);

1109 
m
 = m / (2*
h
) + (m & h && m & (3*h-1) ? 1 : 0);

1110 
e
 = 0;

1112  (((
uöt64_t
)
e
)<<56 | 
m
);

1116 
	}
}

1119 
	$tm_time2gdf_time
(
tm
 *
t
) {

1129 
Y
,
M
,
s
;

1130 
D
;

1132 
D
 = 
t
->
tm_mday
;

1133 
M
 = 
t
->
tm_m⁄
+1;

1134 
Y
 = 
t
->
tm_yór
+1900;

1138 
Y
 +()
	`fix
 ((
M
-14.0)/12);

1140 c⁄° 
m⁄th°¨t
[] = {306, 337, 0, 31, 61, 92, 122, 153, 184, 214, 245, 275};

1142 
D
 +
m⁄th°¨t
[
t
->
tm_m⁄
 % 12] + 60;

1146 
D
 +365*
Y
 + 
	`Êo‹
 (Y/4) - floor (Y/100) + floor (Y/400);

1149 
s
 = 
t
->
tm_hour
*3600 +Å->
tm_mö
*60 +Å->
tm_£c
;

1152 (
D
 + 
s
/86400.0);

1153 
	}
}

	@Using-OpenMP-Examples-Distr/chapter3/fig3.10-mxv-omp.c

42 
	~<°dio.h
>

43 
	~<°dlib.h
>

45 
mxv
(
m
, 
n
, * 
ª°ri˘
 
a
,

46 * 
ª°ri˘
 
b
, *Ñe°ri˘ 
c
);

48 
	$maö
(
¨gc
, *
¨gv
[])

50 *
a
,*
b
,*
c
;

51 
i
, 
j
, 
m
, 
n
;

53 
	`¥ötf
("Please give mándÇ: ");

54 
	`sˇnf
("%d %d",&
m
,&
n
);

55 
	`¥ötf
("\n");

57 i‡–(
a
=(*)
	`mÆloc
(
m
*())Ë=
NULL
 )

58 
	`≥º‹
("memoryállocation forá");

59 i‡–(
b
=(*)
	`mÆloc
(
m
*
n
*())Ë=
NULL
 )

60 
	`≥º‹
("memoryállocation for b");

61 i‡–(
c
=(*)
	`mÆloc
(
n
*())Ë=
NULL
 )

62 
	`≥º‹
("memoryállocation for c");

64 
	`¥ötf
("Initializing matrix Bánd vector c\n");

65 
j
=0; j<
n
; j++)

66 
c
[
j
] = 2.0;

67 
i
=0; i<
m
; i++)

68 
j
=0; j<
n
; j++)

69 
b
[
i
*
n
+
j
] = i;

71 
	`¥ötf
("Executög mxv fun˘i⁄ f‹ m = %dÇ = %d\n",
m
,
n
);

72 (Ë
	`mxv
(
m
, 
n
, 
a
, 
b
, 
c
);

74 
	`‰ì
(
a
);‰ì(
b
);‰ì(
c
);

76 
	}
}

78 
	$mxv
(
m
, 
n
, * 
ª°ri˘
 
a
, *Ñe°ri˘ 
b
,

79 * 
ª°ri˘
 
c
)

81 
i
, 
j
;

83 #¥agm®
omp
 
∑øŒñ
 (
n⁄e
) \

84 
	`sh¨ed
(
m
,
n
,
a
,
b
,
c
Ë
	`¥iv©e
(
i
,
j
)

85 
i
=0; i<
m
; i++)

87 
a
[
i
] = 0.0;

88 
j
=0; j<
n
; j++)

89 
a
[
i
] +
b
[i*
n
+
j
]*
c
[j];

91 
	}
}

	@Using-OpenMP-Examples-Distr/chapter3/fig3.12-conditional-comp.c

42 
	~<°dio.h
>

43 
	~<°dlib.h
>

45 #ifde‡
_OPENMP


46 
	~<omp.h
>

47 
	#TRUE
 1

	)

48 
	#FALSE
 0

	)

50 
	#omp_gë_thªad_num
(Ë0

	)

53 
	$maö
(
¨gc
, *
¨gv
[])

56 
TID
 = 
	`omp_gë_thªad_num
();

58 
	`¥ötf
("Thªad ID o‡thêma°îÅhªad i†%d\n",
TID
);

60 #ifde‡
_OPENMP


61 (Ë
	`omp_£t_dy«mic
(
FALSE
);

62 i‡(
	`omp_gë_dy«mic
()Ë{
	`¥ötf
("Warning: dynamicádjustment ofÅhreads has been set\n");}

63 (Ë
	`omp_£t_num_thªads
(4);

66 #¥agm®
omp
 
∑øŒñ


68 
TID
 = 
	`omp_gë_thªad_num
();

70 
	`¥ötf
("I¿∑øŒñÑegi⁄ - Thªad ID i†%d\n",
TID
);

74 
	}
}

	@Using-OpenMP-Examples-Distr/chapter3/fig3.5-mxv-serial.c

42 
	~<°dio.h
>

43 
	~<°dlib.h
>

45 
mxv
(
m
, 
n
, * 
ª°ri˘
 
a
,

46 * 
ª°ri˘
 
b
, *Ñe°ri˘ 
c
);

48 
	$maö
(
¨gc
, *
¨gv
[])

50 *
a
,*
b
,*
c
;

51 
i
, 
j
, 
m
, 
n
;

53 
	`¥ötf
("Please give mándÇ: ");

54 
	`sˇnf
("%d %d",&
m
,&
n
);

55 
	`¥ötf
("\n");

57 i‡–(
a
=(*)
	`mÆloc
(
m
*())Ë=
NULL
 )

58 
	`≥º‹
("memoryállocation forá");

59 i‡–(
b
=(*)
	`mÆloc
(
m
*
n
*())Ë=
NULL
 )

60 
	`≥º‹
("memoryállocation for b");

61 i‡–(
c
=(*)
	`mÆloc
(
n
*())Ë=
NULL
 )

62 
	`≥º‹
("memoryállocation for c");

64 
	`¥ötf
("Initializing matrix Bánd vector c\n");

65 
j
=0; j<
n
; j++)

66 
c
[
j
] = 2.0;

67 
i
=0; i<
m
; i++)

68 
j
=0; j<
n
; j++)

69 
b
[
i
*
n
+
j
] = i;

71 
	`¥ötf
("Executög mxv fun˘i⁄ f‹ m = %dÇ = %d\n",
m
,
n
);

72 (Ë
	`mxv
(
m
, 
n
, 
a
, 
b
, 
c
);

74 
	`‰ì
(
a
);‰ì(
b
);‰ì(
c
);

76 
	}
}

78 
	$mxv
(
m
, 
n
, * 
ª°ri˘
 
a
, *Ñe°ri˘ 
b
,

79 * 
ª°ri˘
 
c
)

81 
i
, 
j
;

83 
i
=0; i<
m
; i++)

85 
a
[
i
] = 0.0;

86 
j
=0; j<
n
; j++)

87 
a
[
i
] +
b
[i*
n
+
j
]*
c
[j];

89 
	}
}

	@Using-OpenMP-Examples-Distr/chapter4/fig4.10-for-loop.c

42 
	~<°dio.h
>

43 
	~<°dlib.h
>

45 #ifde‡
_OPENMP


46 
	~<omp.h
>

47 
	#TRUE
 1

	)

48 
	#FALSE
 0

	)

50 
	#omp_gë_thªad_num
(Ë0

	)

53 
	$maö
()

55 
i
, 
n
 = 9;

57 #ifde‡
_OPENMP


58 (Ë
	`omp_£t_dy«mic
(
FALSE
);

59 i‡(
	`omp_gë_dy«mic
()Ë{
	`¥ötf
("Warning: dynamicádjustment ofÅhreads has been set\n");}

60 (Ë
	`omp_£t_num_thªads
(4);

63 #¥agm®
omp
 
∑øŒñ
 (
n⁄e
Ë
	`sh¨ed
(
n
Ë
	`¥iv©e
(
i
)

65 #¥agm®
omp
 

66 
i
=0; i<
n
; i++)

67 
	`¥ötf
("Thread %dÉxecutesÜoop iteration %d\n",

68 
	`omp_gë_thªad_num
(),
i
);

72 
	}
}

	@Using-OpenMP-Examples-Distr/chapter4/fig4.12-two-for-loops.c

42 
	~<°dio.h
>

43 
	~<°dlib.h
>

45 #ifde‡
_OPENMP


46 
	~<omp.h
>

47 
	#TRUE
 1

	)

48 
	#FALSE
 0

	)

50 
	#omp_gë_thªad_num
(Ë0

	)

51 
	#omp_gë_num_thªads
(Ë1

	)

54 
	$maö
()

56 
i
, 
n
 = 9;

58 
a
[
n
], 
b
[n];

60 #ifde‡
_OPENMP


61 (Ë
	`omp_£t_dy«mic
(
FALSE
);

62 i‡(
	`omp_gë_dy«mic
()Ë{
	`¥ötf
("Warning: dynamicádjustment ofÅhreads has been set\n");}

63 (Ë
	`omp_£t_num_thªads
(4);

66 #¥agm®
omp
 
∑øŒñ
 (
n⁄e
Ë
	`sh¨ed
(
n
,
a
,
b
Ë
	`¥iv©e
(
i
)

68 #¥agm®
omp
 
sögÀ


69 
	`¥ötf
("First for-loop:Çumber ofÅhreads is %d\n",

70 
	`omp_gë_num_thªads
());

72 #¥agm®
omp
 
	`scheduÀ
(
ru¡ime
)

73 
i
=0; i<
n
; i++)

75 
	`¥ötf
("Thread %dÉxecutesÜoop iteration %d\n",

76 
	`omp_gë_thªad_num
(),
i
);

77 
a
[
i
] = i;

80 #¥agm®
omp
 
sögÀ


81 
	`¥ötf
("Second for-loop:Çumber ofÅhreads is %d\n",

82 
	`omp_gë_num_thªads
());

84 #¥agm®
omp
 
	`scheduÀ
(
ru¡ime
)

85 
i
=0; i<
n
; i++)

87 
	`¥ötf
("Thread %dÉxecutesÜoop iteration %d\n",

88 
	`omp_gë_thªad_num
(),
i
);

89 
b
[
i
] = 2 * 
a
[i];

94 
	}
}

	@Using-OpenMP-Examples-Distr/chapter4/fig4.16-sections.c

42 
	~<°dio.h
>

43 
	~<°dlib.h
>

45 #ifde‡
_OPENMP


46 
	~<omp.h
>

47 
	#TRUE
 1

	)

48 
	#FALSE
 0

	)

50 
	#omp_gë_thªad_num
(Ë0

	)

53 
funcA
();

54 
funcB
();

56 
	$maö
()

59 #ifde‡
_OPENMP


60 (Ë
	`omp_£t_dy«mic
(
FALSE
);

61 i‡(
	`omp_gë_dy«mic
()Ë{
	`¥ötf
("Warning: dynamicádjustment ofÅhreads has been set\n");}

62 (Ë
	`omp_£t_num_thªads
(4);

65 #¥agm®
omp
 
∑øŒñ


67 #¥agm®
omp
 
£˘i⁄s


69 #¥agm®
omp
 
£˘i⁄


70 (Ë
	`funcA
();

72 #¥agm®
omp
 
£˘i⁄


73 (Ë
	`funcB
();

79 
	}
}

81 
	$funcA
()

83 
	`¥ötf
("In funcA:Åhis section isÉxecuted byÅhread %d\n",

84 
	`omp_gë_thªad_num
());

85 
	}
}

86 
	$funcB
()

88 
	`¥ötf
("In funcB:Åhis section isÉxecuted byÅhread %d\n",

89 
	`omp_gë_thªad_num
());

90 
	}
}

	@Using-OpenMP-Examples-Distr/chapter4/fig4.22-single.c

42 
	~<°dio.h
>

43 
	~<°dlib.h
>

45 #ifde‡
_OPENMP


46 
	~<omp.h
>

47 
	#TRUE
 1

	)

48 
	#FALSE
 0

	)

50 
	#omp_gë_thªad_num
(Ë0

	)

53 
	$maö
()

55 
n
 = 9;

56 
i
, 
a
, 
b
[
n
];

58 #ifde‡
_OPENMP


59 (Ë
	`omp_£t_dy«mic
(
FALSE
);

60 i‡(
	`omp_gë_dy«mic
()Ë{
	`¥ötf
("Warning: dynamicádjustment ofÅhreads has been set\n");}

61 (Ë
	`omp_£t_num_thªads
(4);

64 
i
=0; i<
n
; i++)

65 
b
[
i
] = -1;

66 #¥agm®
omp
 
∑øŒñ
 
	`sh¨ed
(
a
,
b
Ë
	`¥iv©e
(
i
)

68 #¥agm®
omp
 
sögÀ


70 
a
 = 10;

71 
	`¥ötf
("Single constructÉxecuted byÅhread %d\n",

72 
	`omp_gë_thªad_num
());

75 #¥agm®
omp
 

76 
i
=0; i<
n
; i++)

77 
b
[
i
] = 
a
;

81 
	`¥ötf
("AfterÅheÖarallelÑegion:\n");

82 
i
=0; i<
n
; i++)

83 
	`¥ötf
("b[%d] = %d\n",
i
,
b
[i]);

86 
	}
}

	@Using-OpenMP-Examples-Distr/chapter4/fig4.3-parallel-region.c

42 
	~<°dio.h
>

43 
	~<°dlib.h
>

45 #ifde‡
_OPENMP


46 
	~<omp.h
>

47 
	#TRUE
 1

	)

48 
	#FALSE
 0

	)

50 
	#omp_gë_thªad_num
(Ë0

	)

53 
	$maö
()

56 #ifde‡
_OPENMP


57 (Ë
	`omp_£t_dy«mic
(
FALSE
);

58 i‡(
	`omp_gë_dy«mic
()Ë{
	`¥ötf
("Warning: dynamicádjustment ofÅhreads has been set\n");}

59 (Ë
	`omp_£t_num_thªads
(4);

62 #¥agm®
omp
 
∑øŒñ


64 
	`¥ötf
("TheÖarallelÑegion isÉxecuted byÅhread %d\n",

65 
	`omp_gë_thªad_num
());

67 i‡–
	`omp_gë_thªad_num
() == 2 ) {

68 
	`¥ötf
(" Thread %d doesÅhings differently\n",

69 
	`omp_gë_thªad_num
());

74 
	}
}

	@Using-OpenMP-Examples-Distr/chapter4/fig4.31-shared-clause.c

42 
	~<°dio.h
>

43 
	~<°dlib.h
>

45 #ifde‡
_OPENMP


46 
	~<omp.h
>

47 
	#TRUE
 1

	)

48 
	#FALSE
 0

	)

51 
	$maö
()

53 
i
, 
n
 = 7;

54 
a
[
n
];

56 #ifde‡
_OPENMP


57 (Ë
	`omp_£t_dy«mic
(
FALSE
);

58 i‡(
	`omp_gë_dy«mic
()Ë{
	`¥ötf
("Warning: dynamicádjustment ofÅhreads has been set\n");}

59 (Ë
	`omp_£t_num_thªads
(4);

62 
i
=0; i<
n
; i++)

63 
a
[
i
] = i+1;

65 #¥agm®
omp
 
∑øŒñ
 
	`sh¨ed
(
a
)

66 
i
=0; i<
n
; i++)

68 
a
[
i
] += i;

71 
	`¥ötf
("In mainÖrogramáfterÖarallel for:\n");

72 
i
=0; i<
n
; i++)

73 
	`¥ötf
("a[%d] = %d\n",
i
,
a
[i]);

76 
	}
}

	@Using-OpenMP-Examples-Distr/chapter4/fig4.32-private-clause.c

42 
	~<°dio.h
>

43 
	~<°dlib.h
>

45 #ifde‡
_OPENMP


46 
	~<omp.h
>

47 
	#TRUE
 1

	)

48 
	#FALSE
 0

	)

50 
	#omp_gë_thªad_num
(Ë0

	)

51 
	#omp_gë_num_thªads
(Ë1

	)

54 
	$maö
()

56 
i
, 
n
 = 5;

57 
a
;

59 #ifde‡
_OPENMP


60 (Ë
	`omp_£t_dy«mic
(
FALSE
);

61 i‡(
	`omp_gë_dy«mic
()Ë{
	`¥ötf
("Warning: dynamicádjustment ofÅhreads has been set\n");}

62 (Ë
	`omp_£t_num_thªads
(3);

65 #¥agm®
omp
 
∑øŒñ
 
	`¥iv©e
(
i
,
a
)

66 
i
=0; i<
n
; i++)

68 
a
 = 
i
+1;

69 
	`¥ötf
("Thread %d hasá value ofá = %d for i = %d\n",

70 
	`omp_gë_thªad_num
(),
a
,
i
);

74 
	}
}

	@Using-OpenMP-Examples-Distr/chapter4/fig4.34-lastprivate-clause.c

42 
	~<°dio.h
>

43 
	~<°dlib.h
>

45 #ifde‡
_OPENMP


46 
	~<omp.h
>

47 
	#TRUE
 1

	)

48 
	#FALSE
 0

	)

50 
	#omp_gë_thªad_num
(Ë0

	)

51 
	#omp_gë_num_thªads
(Ë1

	)

54 
	$maö
()

56 
i
, 
a
, 
n
 = 5;

58 #ifde‡
_OPENMP


59 (Ë
	`omp_£t_dy«mic
(
FALSE
);

60 i‡(
	`omp_gë_dy«mic
()Ë{
	`¥ötf
("Warning: dynamicádjustment ofÅhreads has been set\n");}

61 (Ë
	`omp_£t_num_thªads
(3);

64 #¥agm®
omp
 
∑øŒñ
 
	`¥iv©e
(
i
Ë
	`œ°¥iv©e
(
a
)

65 
i
=0; i<
n
; i++)

67 
a
 = 
i
+1;

68 
	`¥ötf
("Thread %d hasá value ofá = %d for i = %d\n",

69 
	`omp_gë_thªad_num
(),
a
,
i
);

72 
	`¥ötf
("VÆuêo‡®a·îÖ¨ÆÀ»f‹:á = %d\n",
a
);

75 
	}
}

	@Using-OpenMP-Examples-Distr/chapter4/fig4.36-lastprivate-alternative.c

42 
	~<°dio.h
>

43 
	~<°dlib.h
>

45 #ifde‡
_OPENMP


46 
	~<omp.h
>

47 
	#TRUE
 1

	)

48 
	#FALSE
 0

	)

50 
	#omp_gë_thªad_num
(Ë0

	)

51 
	#omp_gë_num_thªads
(Ë1

	)

54 
	$maö
()

56 
i
, 
n
 = 5;

57 
a
, 
a_sh¨ed
;

59 #ifde‡
_OPENMP


60 (Ë
	`omp_£t_dy«mic
(
FALSE
);

61 i‡(
	`omp_gë_dy«mic
()Ë{
	`¥ötf
("Warning: dynamicádjustment ofÅhreads has been set\n");}

62 (Ë
	`omp_£t_num_thªads
(3);

65 #¥agm®
omp
 
∑øŒñ
 
	`¥iv©e
(
i
Ë¥iv©e(
a
Ë
	`sh¨ed
(
a_sh¨ed
)

66 
i
=0; i<
n
; i++)

68 
a
 = 
i
+1;

69 
	`¥ötf
("Thread %d hasá value ofá = %d for i = %d\n",

70 
	`omp_gë_thªad_num
(),
a
,
i
);

71 i‡–
i
 =
n
-1 ) 
a_sh¨ed
 = 
a
;

74 
	`¥ötf
("VÆuêo‡®a·îÖ¨ÆÀ»f‹:á_sh¨ed = %d\n",
a_sh¨ed
);

77 
	}
}

	@Using-OpenMP-Examples-Distr/chapter4/fig4.37-firstprivate-clause.c

42 
	~<°dio.h
>

43 
	~<°dlib.h
>

45 
	#TRUE
 1

	)

46 
	#FALSE
 0

	)

48 #ifde‡
_OPENMP


49 
	~<omp.h
>

51 
	#omp_gë_thªad_num
(Ë0

	)

52 
	#omp_gë_num_thªads
(Ë1

	)

55 
	$maö
()

57 *
a
;

58 
n
 = 2, 
¡hªads
, 
vÀn
, 
ödx
, 
off£t
 = 4, 
i
, 
TID
;

59 
Áûed
;

61 #ifde‡
_OPENMP


62 (Ë
	`omp_£t_dy«mic
(
FALSE
);

63 i‡(
	`omp_gë_dy«mic
()Ë{
	`¥ötf
("Warning: dynamicádjustment ofÅhreads has been set\n");}

64 (Ë
	`omp_£t_num_thªads
(3);

67 
ödx
 = 
off£t
;

74 #¥agm®
omp
 
∑øŒñ
 
	`fú°¥iv©e
(
ödx
Ë
	`sh¨ed
(
a
,
n
,
¡hªads
,
Áûed
)

76 #¥agm®
omp
 
sögÀ


78 
¡hªads
 = 
	`omp_gë_num_thªads
();

79 
vÀn
 = 
ödx
 + 
n
*
¡hªads
;

80 i‡–(
a
 = (*Ë
	`mÆloc
(
vÀn
*())Ë=
NULL
 )

81 
Áûed
 = 
TRUE
;

83 
Áûed
 = 
FALSE
;

87 i‡–
Áûed
 =
TRUE
 ) {

88 
	`¥ötf
("F©ÆÉº‹: mem‹yáŒoˇti⁄ f‹á faûed vÀ¿%d\n",
vÀn
);

93 
	`¥ötf
("Diagnostics:\n");

94 
	`¥ötf
("¡hªad†%d\n",
¡hªads
);

95 
	`¥ötf
("ödx = %d\n",
ödx
);

96 
	`¥ötf
("¿ = %d\n",
n
);

97 
	`¥ötf
("vÀ¿ = %d\n",
vÀn
);

100 
i
=0; i<
vÀn
; i++Ë
a
[i] = -i-1;

107 
	`¥ötf
("Lígth o‡£gmíà≥∏thªad i†%d\n",
n
);

108 
	`¥ötf
("Off£àf‹ ve˘‹á i†%d\n",
ödx
);

109 #¥agm®
omp
 
∑øŒñ
 (
n⁄e
Ë
	`fú°¥iv©e
(
ödx
) \

110 
	`¥iv©e
(
i
,
TID
Ë
	`sh¨ed
(
n
,
a
)

112 
TID
 = 
	`omp_gë_thªad_num
();

113 
ödx
 +
n
*
TID
;

114 
i
=
ödx
; i<ödx+
n
; i++)

115 
a
[
i
] = 
TID
 + 1;

118 
	`¥ötf
("AfterÅheÖarallelÑegion:\n");

119 
i
=0; i<
vÀn
; i++)

120 
	`¥ötf
("a[%d] = %d\n",
i
,
a
[i]);

122 
	`‰ì
(
a
);

125 
	}
}

	@Using-OpenMP-Examples-Distr/chapter4/fig4.39-firstprivate-alternative.c

42 
	~<°dio.h
>

43 
	~<°dlib.h
>

45 
	#TRUE
 1

	)

46 
	#FALSE
 0

	)

48 #ifde‡
_OPENMP


49 
	~<omp.h
>

51 
	#omp_gë_thªad_num
(Ë0

	)

52 
	#omp_gë_num_thªads
(Ë1

	)

55 
	$maö
()

57 *
a
;

58 
n
 = 2, 
¡hªads
, 
vÀn
, 
ödx
, 
off£t
 = 4, 
i
, 
TID
;

59 
Áûed
;

61 #ifde‡
_OPENMP


62 (Ë
	`omp_£t_dy«mic
(
FALSE
);

63 i‡(
	`omp_gë_dy«mic
()Ë{
	`¥ötf
("Warning: dynamicádjustment ofÅhreads has been set\n");}

64 (Ë
	`omp_£t_num_thªads
(3);

67 
ödx
 = 
off£t
;

74 #¥agm®
omp
 
∑øŒñ
 
	`fú°¥iv©e
(
ödx
Ë
	`sh¨ed
(
a
,
n
,
¡hªads
,
Áûed
)

76 #¥agm®
omp
 
sögÀ


78 
¡hªads
 = 
	`omp_gë_num_thªads
();

79 
vÀn
 = 
ödx
 + 
n
*
¡hªads
;

80 i‡–(
a
 = (*Ë
	`mÆloc
(
vÀn
*())Ë=
NULL
 )

81 
Áûed
 = 
TRUE
;

83 
Áûed
 = 
FALSE
;

87 i‡–
Áûed
 =
TRUE
 ) {

88 
	`¥ötf
("F©ÆÉº‹: mem‹yáŒoˇti⁄ f‹á faûed vÀ¿%d\n",
vÀn
);

93 
	`¥ötf
("Diagnostics:\n");

94 
	`¥ötf
("¡hªad†%d\n",
¡hªads
);

95 
	`¥ötf
("ödx = %d\n",
ödx
);

96 
	`¥ötf
("¿ = %d\n",
n
);

97 
	`¥ötf
("vÀ¿ = %d\n",
vÀn
);

100 
i
=0; i<
vÀn
; i++Ë
a
[i] = -i-1;

107 
	`¥ötf
("Lígth o‡£gmíà≥∏thªad i†%d\n",
n
);

108 
	`¥ötf
("Off£àf‹ ve˘‹á i†%d\n",
ödx
);

109 #¥agm®
omp
 
∑øŒñ
 (
n⁄e
Ë
	`¥iv©e
(
i
,
TID
,
ödx
) \

110 
	`sh¨ed
(
n
,
off£t
,
a
)

112 
TID
 = 
	`omp_gë_thªad_num
();

113 
ödx
 = 
off£t
 + 
n
*
TID
;

114 
i
=
ödx
; i<ödx+
n
; i++)

115 
a
[
i
] = 
TID
 + 1;

118 
	`¥ötf
("AfterÅheÖarallelÑegion:\n");

119 
i
=0; i<
vÀn
; i++)

120 
	`¥ötf
("a[%d] = %d\n",
i
,
a
[i]);

122 
	`‰ì
(
a
);

125 
	}
}

	@Using-OpenMP-Examples-Distr/chapter4/fig4.43-schedule-clause.c

42 
	~<°dio.h
>

43 
	~<°dlib.h
>

45 #ifde‡
_OPENMP


46 
	~<omp.h
>

47 
	#TRUE
 1

	)

48 
	#FALSE
 0

	)

50 
	#omp_gë_thªad_num
(Ë0

	)

53 
	$maö
()

55 
i
, 
j
, 
n
 = 9;

57 #ifde‡
_OPENMP


58 (Ë
	`omp_£t_dy«mic
(
FALSE
);

59 i‡(
	`omp_gë_dy«mic
()Ë{
	`¥ötf
("Warning: dynamicádjustment ofÅhreads has been set\n");}

60 (Ë
	`omp_£t_num_thªads
(4);

63 #¥agm®
omp
 
∑øŒñ
 (
n⁄e
Ë
	`scheduÀ
(
ru¡ime
) \

64 
	`¥iv©e
(
i
,
j
Ë
	`sh¨ed
(
n
)

65 
i
=0; i<
n
; i++)

67 
	`¥ötf
("Iteration %dÉxecuted byÅhread %d\n",

68 
i
, 
	`omp_gë_thªad_num
());

69 
j
=0; j<
i
; j++)

70 
	`sy°em
("sleep 1");

74 
	}
}

	@Using-OpenMP-Examples-Distr/chapter4/fig4.47-barrier.c

42 
	~<°dio.h
>

43 
	~<°dlib.h
>

44 
	~<time.h
>

45 
	~<°rögs.h
>

47 #ifde‡
_OPENMP


48 
	~<omp.h
>

49 
	#TRUE
 1

	)

50 
	#FALSE
 0

	)

52 
	#omp_gë_thªad_num
(Ë0

	)

53 
	#omp_gë_num_thªads
(Ë1

	)

56 
¥öt_time
(
TID
, *
commít
);

58 
	$maö
()

60 
TID
;

61 
i
, 
n
 = 10;

62 
a
[
n
], 
b
[n], 
ªf
[n];

64 #ifde‡
_OPENMP


65 (Ë
	`omp_£t_dy«mic
(
FALSE
);

66 i‡(
	`omp_gë_dy«mic
()Ë{
	`¥ötf
("Warning: dynamicádjustment ofÅhreads has been set\n");}

67 (Ë
	`omp_£t_num_thªads
(4);

70 #¥agm®
omp
 
∑øŒñ
 
	`¥iv©e
(
TID
)

73 
TID
 = 
	`omp_gë_thªad_num
();

75 i‡–
TID
 < 
	`omp_gë_num_thªads
()/2 ) 
	`sy°em
("sleep 3");

77 (Ë
	`¥öt_time
(
TID
,"before");

79 #¥agm®
omp
 
b¨rõr


81 (Ë
	`¥öt_time
(
TID
,"after ");

85 
i
=0; i<
n
; i++)

87 
b
[
i
] = 2*(i+1);

88 
ªf
[
i
] = i + 
b
[i];

91 #¥agm®
omp
 
∑øŒñ
 
	`¥iv©e
(
i
Ë
	`sh¨ed
(
n
,
a
,
b
)

93 #¥agm®
omp
 
	`scheduÀ
(
dy«mic
,1Ë
nowaô


94 
i
=0; i<
n
; i++)

95 
a
[
i
] = i;

97 #¥agm®
omp
 
b¨rõr


99 #¥agm®
omp
 
	`scheduÀ
(
dy«mic
,1Ë
nowaô


100 
i
=0; i<
n
; i++)

101 
a
[
i
] +
b
[i];

104 
	`¥ötf
("AfterÅheÖarallelÑegion\n");

105 
i
=0; i<
n
; i++)

106 
	`¥ötf
("á[%3d] = %6dÑef[%3d] = %6d\n",
i
,
a
[i],i,
ªf
[i]);

109 
	}
}

111 
	$¥öt_time
(
TID
, *
commít
)

113 
time_t
 
ç
;

114 
buf„r
[26], 
mytime
[9];

116 (Ë
	`time
(&
ç
);

117 
	`°r˝y
(&
buf„r
[0],
	`˘ime
(&
ç
));

119 
	`°∫˝y
(&
mytime
[0],&
buf„r
[11],8);

120 
mytime
[8]='\0';

122 
	`¥ötf
("Thªad %d %†b¨rõ∏© %s\n",
TID
,
commít
,&
mytime
[0]);

125 
	}
}

	@Using-OpenMP-Examples-Distr/chapter4/fig4.55-critical-region.c

42 
	~<°dio.h
>

43 
	~<°dlib.h
>

45 #ifde‡
_OPENMP


46 
	~<omp.h
>

47 
	#TRUE
 1

	)

48 
	#FALSE
 0

	)

50 
	#omp_gë_thªad_num
(Ë0

	)

51 
	#omp_gë_num_thªads
(Ë1

	)

54 
	#SUM_INIT
 0

	)

56 
	$maö
()

58 
i
, 
n
 = 25;

59 
sum
, 
TID
, 
a
[
n
];

60 
ªf
 = 
SUM_INIT
 + (
n
-1)*n/2;

61 
sumLoˇl
;

63 #ifde‡
_OPENMP


64 (Ë
	`omp_£t_dy«mic
(
FALSE
);

65 i‡(
	`omp_gë_dy«mic
()Ë{
	`¥ötf
("Warning: dynamicádjustment ofÅhreads has been set\n");}

66 (Ë
	`omp_£t_num_thªads
(3);

69 
i
=0; i<
n
; i++)

70 
a
[
i
] = i;

72 #¥agm®
omp
 
∑øŒñ


74 #¥agm®
omp
 
sögÀ


75 
	`¥ötf
("Numbî o‡thªad†i†%d\n",
	`omp_gë_num_thªads
());

78 
sum
 = 
SUM_INIT
;

79 
	`¥ötf
("VÆuêo‡sumÖri‹Åÿ∑øŒñÑegi⁄: %d\n",
sum
);

80 #¥agm®
omp
 
∑øŒñ
 (
n⁄e
Ë
	`sh¨ed
(
n
,
a
,
sum
) \

81 
	`¥iv©e
(
TID
,
sumLoˇl
)

83 
TID
 = 
	`omp_gë_thªad_num
();

84 
sumLoˇl
 = 0;

85 #¥agm®
omp
 

86 
i
=0; i<
n
; i++)

87 
sumLoˇl
 +
a
[
i
];

88 #¥agm®
omp
 
	`¸ôiˇl
 (
upd©e_sum
)

90 
sum
 +
sumLoˇl
;

91 
	`¥ötf
("TID=%d: sumLoˇ»%d sum = %d\n",
TID
,
sumLoˇl
,
sum
);

95 
	`¥ötf
("VÆuêo‡sumá·îÖ¨ÆÀ»ªgi⁄: %d\n",
sum
);

96 
	`¥ötf
("CheckÑesu…s: sum = %d (should bê%d)\n",
sum
,
ªf
);

100 
	}
}

	@Using-OpenMP-Examples-Distr/chapter4/fig4.57-critical-region-print.c

42 
	~<°dio.h
>

43 
	~<°dlib.h
>

45 #ifde‡
_OPENMP


46 
	~<omp.h
>

47 
	#TRUE
 1

	)

48 
	#FALSE
 0

	)

50 
	#omp_gë_thªad_num
(Ë0

	)

51 
	#omp_gë_num_thªads
(Ë1

	)

54 
	$maö
()

56 
TID
;

58 #ifde‡
_OPENMP


59 (Ë
	`omp_£t_dy«mic
(
FALSE
);

60 i‡(
	`omp_gë_dy«mic
()Ë{
	`¥ötf
("Warning: dynamicádjustment ofÅhreads has been set\n");}

61 (Ë
	`omp_£t_num_thªads
(3);

64 #¥agm®
omp
 
∑øŒñ


66 #¥agm®
omp
 
sögÀ


67 
	`¥ötf
("Numbî o‡thªad†i†%d\n",
	`omp_gë_num_thªads
());

70 #¥agm®
omp
 
∑øŒñ
 (
n⁄e
Ë
	`¥iv©e
(
TID
)

72 
TID
 = 
	`omp_gë_thªad_num
();

74 #¥agm®
omp
 
	`¸ôiˇl
 (
¥öt_tid
)

76 
	`¥ötf
("IámÅhªad %d\n",
TID
);

82 
	}
}

	@Using-OpenMP-Examples-Distr/chapter4/fig4.58-critical-region-minval.c

42 
	~<°dio.h
>

43 
	~<°dlib.h
>

45 #ifde‡
_OPENMP


46 
	~<omp.h
>

47 
	#TRUE
 1

	)

48 
	#FALSE
 0

	)

50 
	#omp_gë_thªad_num
(Ë0

	)

51 
	#omp_gë_num_thªads
(Ë1

	)

54 
	#N
 10

	)

56 
	$maö
()

58 
ix
;

59 
SˇÀ
, 
LSˇÀ
, 
ssq
, 
Lssq
;

61 #ifde‡
_OPENMP


62 (Ë
	`omp_£t_dy«mic
(
FALSE
);

63 i‡(
	`omp_gë_dy«mic
()Ë{
	`¥ötf
("Warning: dynamicádjustment ofÅhreads has been set\n");}

64 (Ë
	`omp_£t_num_thªads
(3);

67 #¥agm®
omp
 
∑øŒñ


69 #¥agm®
omp
 
sögÀ


70 
	`¥ötf
("Numbî o‡thªad†i†%d\n",
	`omp_gë_num_thªads
());

73 
SˇÀ
 = 2.0;

74 
ssq
 = 1.0;

76 
	`¥ötf
("Bef‹ê∑øŒñÑegi⁄: SˇÀ = %‡ssq = %f\n",
SˇÀ
,
ssq
);

78 #¥agm®
omp
 
∑øŒñ
 (
n⁄e
Ë
	`¥iv©e
(
ix
,
LSˇÀ
,
Lssq
) \

79 
	`sh¨ed
(
SˇÀ
,
ssq
)

82 
TID
 = 
	`omp_gë_thªad_num
();

84 
Lssq
 = 2.0 * 
TID
;

86 #¥agm®
omp
 

87 
ix
 = 1; ix < 
N
; ix ++)

89 
LSˇÀ
 = 
TID
 + 
ix
;

91 
	`¥ötf
("Thªad %d compuãd LSˇÀ = %f\n",
TID
,
LSˇÀ
);

94 #¥agm®
omp
 
¸ôiˇl


97 
	`¥ötf
("Thªad %dÉ¡îed crôiˇ»ªgi⁄\n",
TID
);

99 i‡–
SˇÀ
 < 
LSˇÀ
 )

101 
ssq
 = (
SˇÀ
/
LSˇÀ
Ë* ssq + 
Lssq
;

102 
SˇÀ
 = 
LSˇÀ
;

103 
	`¥ötf
("\tThªad %d: Re£àSˇÀÅÿ%f\n",
TID
,
SˇÀ
);

105 
ssq
 = ssq + (
LSˇÀ
/
SˇÀ
Ë* 
Lssq
;

107 
	`¥ötf
("\tThªad %d: New vÆuêo‡ssq = %f\n",
TID
,
ssq
);

113 
	`¥ötf
("A·îÖ¨ÆÀ»ªgi⁄: SˇÀ = %‡ssq = %f\n",
SˇÀ
,
ssq
);

117 
	}
}

	@Using-OpenMP-Examples-Distr/chapter4/fig4.61-atomic.c

42 
	~<°dio.h
>

43 
	~<°dlib.h
>

45 #ifde‡
_OPENMP


46 
	~<omp.h
>

47 
	#TRUE
 1

	)

48 
	#FALSE
 0

	)

50 
	#omp_gë_num_thªads
(Ë1

	)

53 
	$maö
()

55 
ic
, 
i
, 
n
 = 7;

57 #ifde‡
_OPENMP


58 (Ë
	`omp_£t_dy«mic
(
FALSE
);

59 i‡(
	`omp_gë_dy«mic
()Ë{
	`¥ötf
("Warning: dynamicádjustment ofÅhreads has been set\n");}

60 (Ë
	`omp_£t_num_thªads
(3);

63 
ic
 = 0;

64 #¥agm®
omp
 
∑øŒñ
 
	`sh¨ed
(
ic
,
n
Ë
	`¥iv©e
(
i
)

65 
i
=0; i<
n
; i++)

67 #¥agm®
omp
 
©omic


68 
ic
 += 1;

70 
	`¥ötf
("Cou¡î = %d\n",
ic
);

74 
	}
}

	@Using-OpenMP-Examples-Distr/chapter4/fig4.62-atomic-func.c

42 
	~<°dio.h
>

43 
	~<°dlib.h
>

45 #ifde‡
_OPENMP


46 
	~<omp.h
>

47 
	#TRUE
 1

	)

48 
	#FALSE
 0

	)

50 
	#omp_gë_thªad_num
(Ë0

	)

53 
bigfunc
(
TID
);

55 
	$maö
()

57 
ic
, 
i
, 
n
 = 7;

59 #ifde‡
_OPENMP


60 (Ë
	`omp_£t_dy«mic
(
FALSE
);

61 i‡(
	`omp_gë_dy«mic
()Ë{
	`¥ötf
("Warning: dynamicádjustment ofÅhreads has been set\n");}

62 (Ë
	`omp_£t_num_thªads
(3);

65 
ic
 = 0;

66 #¥agm®
omp
 
∑øŒñ
 
	`sh¨ed
(
ic
,
n
Ë
	`¥iv©e
(
i
)

67 
i
=0; i<
n
; i++)

70 
TID
 = 
	`omp_gë_thªad_num
();

71 #¥agm®
omp
 
©omic


72 
ic
 +
	`bigfunc
(
TID
);

74 
	`¥ötf
("Cou¡î = %d\n",
ic
);

78 
	}
}

80 
	$bigfunc
(
TID
)

82 
	`¥ötf
("Thi†fun˘i⁄ i†ˇŒed fromÅhªad %dándÇìd†tÿbêthªad sa„\n",
TID
);

85 
	}
}

	@Using-OpenMP-Examples-Distr/chapter4/fig4.68-master.c

42 
	~<°dio.h
>

43 
	~<°dlib.h
>

45 #ifde‡
_OPENMP


46 
	~<omp.h
>

47 
	#TRUE
 1

	)

48 
	#FALSE
 0

	)

50 
	#omp_gë_thªad_num
(Ë0

	)

51 
	#omp_gë_num_thªads
(Ë1

	)

54 
	$maö
()

56 
n
 = 9;

57 
i
, 
a
, 
b
[
n
];

59 #ifde‡
_OPENMP


60 (Ë
	`omp_£t_dy«mic
(
FALSE
);

61 i‡(
	`omp_gë_dy«mic
()Ë{
	`¥ötf
("Warning: dynamicádjustment ofÅhreads has been set\n");}

62 (Ë
	`omp_£t_num_thªads
(4);

65 
i
=0; i<
n
; i++)

66 
b
[
i
] = -1;

68 #¥agm®
omp
 
∑øŒñ
 
	`sh¨ed
(
a
,
b
Ë
	`¥iv©e
(
i
)

70 #¥agm®
omp
 
ma°î


72 
a
 = 10;

73 
	`¥ötf
("Master construct isÉxecuted byÅhread %d\n",

74 
	`omp_gë_thªad_num
());

77 #¥agm®
omp
 
b¨rõr


79 #¥agm®
omp
 

80 
i
=0; i<
n
; i++)

81 
b
[
i
] = 
a
;

85 
	`¥ötf
("AfterÅheÖarallelÑegion:\n");

86 
i
=0; i<
n
; i++)

87 
	`¥ötf
("b[%d] = %d\n",
i
,
b
[i]);

90 
	}
}

	@Using-OpenMP-Examples-Distr/chapter4/fig4.70-if-clause.c

42 
	~<°dio.h
>

43 
	~<°dlib.h
>

45 #ifde‡
_OPENMP


46 
	~<omp.h
>

47 
	#TRUE
 1

	)

48 
	#FALSE
 0

	)

50 
	#omp_gë_thªad_num
(Ë0

	)

51 
	#omp_gë_num_thªads
(Ë1

	)

54 
	$maö
()

56 
TID
;

58 #ifde‡
_OPENMP


59 (Ë
	`omp_£t_dy«mic
(
FALSE
);

60 i‡(
	`omp_gë_dy«mic
()Ë{
	`¥ötf
("Warning: dynamicádjustment ofÅhreads has been set\n");}

61 (Ë
	`omp_£t_num_thªads
(4);

64 
n
=5;Ç<11;Ç+=5)

66 #¥agm®
omp
 
∑øŒñ
 i‡(
n
 > 5Ë(
n⁄e
) \

67 
	`¥iv©e
(
TID
Ë
	`sh¨ed
(
n
)

69 
TID
 = 
	`omp_gë_thªad_num
();

70 #¥agm®
omp
 
sögÀ


72 
	`¥ötf
("VÆuêo‡¿%d\n",
n
);

73 
	`¥ötf
("Number ofÅhreads inÖarallelÑegion: %d\n",

74 
	`omp_gë_num_thªads
());

76 
	`¥ötf
("Pröà°©emíàexecuãd byÅhªad %d\n",
TID
);

81 
	}
}

	@Using-OpenMP-Examples-Distr/chapter4/fig4.72-num-threads-clause.c

42 
	~<°dio.h
>

43 
	~<°dlib.h
>

45 #ifde‡
_OPENMP


46 
	~<omp.h
>

47 
	#TRUE
 1

	)

48 
	#FALSE
 0

	)

50 
	#omp_gë_thªad_num
(Ë0

	)

51 
	#omp_gë_num_thªads
(Ë1

	)

54 
	$maö
()

56 
TID
;

58 #ifde‡
_OPENMP


59 (Ë
	`omp_£t_dy«mic
(
FALSE
);

60 i‡(
	`omp_gë_dy«mic
()Ë{
	`¥ötf
("Warning: dynamicádjustment ofÅhreads has been set\n");}

61 (Ë
	`omp_£t_num_thªads
(4);

64 
n
=5;Ç<11;Ç+=5)

66 #¥agm®
omp
 
∑øŒñ
 i‡(
n
 > 5Ë
	`num_thªads
“Ë(
n⁄e
) \

67 
	`¥iv©e
(
TID
Ë
	`sh¨ed
(
n
)

69 
TID
 = 
	`omp_gë_thªad_num
();

70 #¥agm®
omp
 
sögÀ


72 
	`¥ötf
("VÆuêo‡¿%d\n",
n
);

73 
	`¥ötf
("Number ofÅhreads inÖarallelÑegion: %d\n",

74 
	`omp_gë_num_thªads
());

76 
	`¥ötf
("Pröà°©emíàexecuãd byÅhªad %d\n",
TID
);

81 
	}
}

	@Using-OpenMP-Examples-Distr/chapter4/fig4.74-ordered.c

42 
	~<°dio.h
>

43 
	~<°dlib.h
>

45 #ifde‡
_OPENMP


46 
	~<omp.h
>

47 
	#TRUE
 1

	)

48 
	#FALSE
 0

	)

50 
	#omp_gë_thªad_num
(Ë0

	)

51 
	#omp_gë_num_thªads
(Ë1

	)

54 
	$maö
()

56 
i
, 
TID
, 
n
 = 9;

58 
a
[
n
];

60 #ifde‡
_OPENMP


61 (Ë
	`omp_£t_dy«mic
(
FALSE
);

62 i‡(
	`omp_gë_dy«mic
()Ë{
	`¥ötf
("Warning: dynamicádjustment ofÅhreads has been set\n");}

63 (Ë
	`omp_£t_num_thªads
(4);

66 
i
=0; i<
n
; i++)

67 
a
[
i
] = i;

69 #¥agm®
omp
 
∑øŒñ
 (
n⁄e
Ë
‹dîed
 
	`scheduÀ
(
ru¡ime
) \

70 
	`¥iv©e
(
i
,
TID
Ë
	`sh¨ed
(
n
,
a
)

71 
i
=0; i<
n
; i++)

73 
TID
 = 
	`omp_gë_thªad_num
();

75 
	`¥ötf
("Thªad %d upd©e†a[%d]\n",
TID
,
i
);

77 
a
[
i
] += i;

79 #¥agm®
omp
 
‹dîed


80 {
	`¥ötf
("Thªad %dÖröt†vÆuêo‡a[%d] = %d\n",
TID
,
i
,
a
[i]);}

85 
	}
}

	@Using-OpenMP-Examples-Distr/chapter4/fig4.77-reduction.c

42 
	~<°dio.h
>

43 
	~<°dlib.h
>

45 #ifde‡
_OPENMP


46 
	~<omp.h
>

47 
	#TRUE
 1

	)

48 
	#FALSE
 0

	)

50 
	#omp_gë_thªad_num
(Ë0

	)

51 
	#omp_gë_num_thªads
(Ë1

	)

54 
	#SUM_INIT
 0

	)

56 
	$maö
()

58 
i
, 
n
 = 25;

59 
sum
, 
a
[
n
];

60 
ªf
 = 
SUM_INIT
 + (
n
-1)*n/2;

62 #ifde‡
_OPENMP


63 (Ë
	`omp_£t_dy«mic
(
FALSE
);

64 i‡(
	`omp_gë_dy«mic
()Ë{
	`¥ötf
("Warning: dynamicádjustment ofÅhreads has been set\n");}

65 (Ë
	`omp_£t_num_thªads
(3);

68 
i
=0; i<
n
; i++)

69 
a
[
i
] = i;

71 #¥agm®
omp
 
∑øŒñ


73 #¥agm®
omp
 
sögÀ


74 
	`¥ötf
("Numbî o‡thªad†i†%d\n",
	`omp_gë_num_thªads
());

77 
sum
 = 
SUM_INIT
;

78 
	`¥ötf
("VÆuêo‡sumÖri‹Åÿ∑øŒñÑegi⁄: %d\n",
sum
);

79 #¥agm®
omp
 
∑øŒñ
 (
n⁄e
Ë
	`sh¨ed
(
n
,
a
) \

80 
	`ªdu˘i⁄
(+:
sum
)

81 
i
=0; i<
n
; i++)

82 
sum
 +
a
[
i
];

85 
	`¥ötf
("VÆuêo‡sumá·îÖ¨ÆÀ»ªgi⁄: %d\n",
sum
);

86 
	`¥ötf
("CheckÑesu…s: sum = %d (should bê%d)\n",
sum
,
ªf
);

90 
	}
}

	@Using-OpenMP-Examples-Distr/chapter4/fig4.85-nested-parallel.c

42 
	~<°dio.h
>

43 
	~<°dlib.h
>

45 #ifde‡
_OPENMP


46 
	~<omp.h
>

47 
	#TRUE
 1

	)

48 
	#FALSE
 0

	)

50 
	#omp_gë_thªad_num
(Ë0

	)

51 
	#omp_gë_num_thªads
(Ë1

	)

52 
	#omp_gë_√°ed
(Ë0

	)

55 
	$maö
()

58 #ifde‡
_OPENMP


59 (Ë
	`omp_£t_dy«mic
(
FALSE
);

60 i‡(
	`omp_gë_dy«mic
()Ë{
	`¥ötf
("Warning: dynamicádjustment ofÅhreads has been set\n");}

61 (Ë
	`omp_£t_num_thªads
(3);

63 (Ë
	`omp_£t_√°ed
(
TRUE
);

64 i‡(! 
	`omp_gë_√°ed
()Ë{
	`¥ötf
("Warning:ÇestedÖarallelismÇot set\n");}

67 
	`¥ötf
("NestedÖarallelism is %s\n",

68 
	`omp_gë_√°ed
() ? "supported" : "not supported");

76 #¥agm®
omp
 
∑øŒñ


78 
	`¥ötf
("Thread %dÉxecutesÅhe outerÖarallelÑegion\n",

79 
	`omp_gë_thªad_num
());

81 #¥agm®
omp
 
∑øŒñ
 
	`num_thªads
(2)

83 
	`¥ötf
(" Thread %dÉxecutesÅhe innerÖarallelÑegion\n",

84 
	`omp_gë_thªad_num
());

89 
	}
}

	@Using-OpenMP-Examples-Distr/chapter4/fig4.87-nested-parallel-mod.c

42 
	~<°dio.h
>

43 
	~<°dlib.h
>

45 #ifde‡
_OPENMP


46 
	~<omp.h
>

47 
	#TRUE
 1

	)

48 
	#FALSE
 0

	)

50 
	#omp_gë_thªad_num
(Ë0

	)

51 
	#omp_gë_num_thªads
(Ë1

	)

52 
	#omp_gë_√°ed
(Ë0

	)

55 
	$maö
()

57 
TID
 = -1;

59 #ifde‡
_OPENMP


60 (Ë
	`omp_£t_dy«mic
(
FALSE
);

61 i‡(
	`omp_gë_dy«mic
()Ë{
	`¥ötf
("Warning: dynamicádjustment ofÅhreads has been set\n");}

62 (Ë
	`omp_£t_num_thªads
(3);

64 (Ë
	`omp_£t_√°ed
(
TRUE
);

65 i‡(! 
	`omp_gë_√°ed
()Ë{
	`¥ötf
("Warning:ÇestedÖarallelismÇot set\n");}

68 
	`¥ötf
("NestedÖarallelism is %s\n",

69 
	`omp_gë_√°ed
() ? "supported" : "not supported");

77 #¥agm®
omp
 
∑øŒñ
 
	`¥iv©e
(
TID
)

79 
TID
 = 
	`omp_gë_thªad_num
();

81 
	`¥ötf
("Thªad %dÉxecuã†thêouã∏∑øŒñÑegi⁄\n",
TID
);

83 #¥agm®
omp
 
∑øŒñ
 
	`num_thªads
(2Ë
	`fú°¥iv©e
(
TID
)

85 
	`¥ötf
("TID %d: Thread %dÉxecutes innerÖarallelÑegion\n",

86 
TID
,
	`omp_gë_thªad_num
());

91 
	}
}

	@Using-OpenMP-Examples-Distr/chapter4/fig4.96-global-data.c

42 
	~<°dio.h
>

43 
	~<°dlib.h
>

45 
ˇlcuœã_sum
(
Àngth
);

47 *
	gpglobÆ
;

49 
	$maö
()

51 
i
, 
j
, 
sum
, 
n
 = 5;

52 
Àngth
[
n
];

54 
i
=0; i<
n
; i++)

55 
Àngth
[
i
] = 10 * (i+1);

57 
i
=0; i<
n
; i++)

59 i‡–(
pglobÆ
 = (*Ë
	`mÆloc
(
Àngth
[
i
]*())Ë!
NULL
 ) {

61 
j
=
sum
=0; j<
Àngth
[
i
]; j++)

62 
pglobÆ
[
j
] = j+1;

64 
sum
 = 
	`ˇlcuœã_sum
(
Àngth
[
i
]);

66 
	`¥ötf
("VÆuêo‡sum f‹ i = %d i†%8d\n",
i
,
sum
);

68 
	`‰ì
(
pglobÆ
);

71 
	`¥ötf
("FatalÉrror in malloc forÜength[%d] = %d\n",

72 
i
,
Àngth
[i]);

77 
	}
}

78 
	$ˇlcuœã_sum
(
Àngth
)

80 
sum
 = 0;

82 
j
=0; j<
Àngth
; j++)

83 
sum
 +
pglobÆ
[
j
];

85 (
sum
);

86 
	}
}

	@Using-OpenMP-Examples-Distr/chapter4/fig4.98-threadprivate.c

42 
	~<°dio.h
>

43 
	~<°dlib.h
>

45 #ifde‡
_OPENMP


46 
	~<omp.h
>

47 
	#TRUE
 1

	)

48 
	#FALSE
 0

	)

50 
	#omp_gë_thªad_num
(Ë0

	)

51 
	#omp_gë_num_thªads
(Ë1

	)

54 
ˇlcuœã_sum
(
Àngth
);

56 *
	gpglobÆ
;

58 #¥agm®
omp
 
thªad¥iv©e
(
pglobÆ
)

60 
	$maö
()

62 
i
, 
j
, 
sum
, 
TID
, 
n
 = 5;

63 
Àngth
[
n
], 
check
[n];

65 #ifde‡
_OPENMP


66 (Ë
	`omp_£t_dy«mic
(
FALSE
);

67 i‡(
	`omp_gë_dy«mic
()Ë{
	`¥ötf
("Warning: dynamicádjustment ofÅhreads has been set\n");}

68 (Ë
	`omp_£t_num_thªads
(3);

71 
i
=0; i<
n
; i++)

73 
Àngth
[
i
] = 10 * (i+1);

74 
check
[
i
] = 
Àngth
[i]*(length[i]+1)/2;

77 #¥agm®
omp
 
∑øŒñ
 
	`sh¨ed
(
n
,
Àngth
,
check
Ë
	`¥iv©e
(
TID
,
i
,
j
,
sum
)

78 
i
=0; i<
n
; i++)

80 
TID
 = 
	`omp_gë_thªad_num
();

82 i‡–(
pglobÆ
 = (*Ë
	`mÆloc
(
Àngth
[
i
]*())Ë!
NULL
 ) {

84 
j
=
sum
=0; j<
Àngth
[
i
]; j++)

85 
pglobÆ
[
j
] = j+1;

87 
sum
 = 
	`ˇlcuœã_sum
(
Àngth
[
i
]);

89 
	`¥ötf
("TID %d: value of sum for i = %d is %8d (check = %8d)\n",

90 
TID
,
i
,
sum
,
check
[i]);

92 
	`‰ì
(
pglobÆ
);

95 
	`¥ötf
("TID %d: fatalÉrror in malloc forÜength[%d] = %d\n",

96 
TID
,
i
,
Àngth
[i]);

101 
	}
}

102 
	$ˇlcuœã_sum
(
Àngth
)

104 
sum
 = 0;

106 
j
=0; j<
Àngth
; j++)

107 
sum
 +
pglobÆ
[
j
];

109 (
sum
);

110 
	}
}

	@Using-OpenMP-Examples-Distr/chapter6/fig6.22-overlap-comp-io.c

42 
	~<°dio.h
>

43 
	~<°dlib.h
>

44 
	~<°rög.h
>

45 
	~<Êﬂt.h
>

46 
	~<mÆloc.h
>

47 
	~<uni°d.h
>

49 
	~<time.h
>

51 
	#TRUE
 1

	)

52 
	#FALSE
 0

	)

54 
	#FABS
(
x
Ë(x < 0 ? -x : x)

	)

56 #ifde‡
_OPENMP


57 
	~<omp.h
>

59 
	#omp_gë_thªad_num
(Ë0

	)

62 
	gDefVÆN
 = 6;

63 
	gDefVÆM
 = 10;

65 
	gfûe_ªad
[] = "fig6.22-file-io.bin";

67 
	eSTATUS
 {
	mUNDEFINED
, 
	mREAD_IN_PROGRESS
, 
	mREAD_FINISHED
,

68 
	mPROCESSING_IN_PROGRESS
, 
	mPROCESSING_FINISHED
} *
	gexecuti⁄_°©e
;

70 
ªad_öput
(
i
);

71 
sig«l_ªad
(
i
);

72 
waô_ªad
(
i
);

73 
¥o˚ss_d©a
(
i
);

74 
sig«l_¥o˚s£d
(
i
);

75 
waô_¥o˚s£d
(
i
);

76 
wrôe_ouçut
(
i
);

77 
do_compuã
(
i
,
j
);

79 
gë_cmd_löe_›ti⁄s
(, **);

80 
öô_mem‹y
();

81 
öô_d©a
();

82 
gíî©e_öput_fûe
();

83 
compuã_ª„ªn˚_ªsu…s
();

84 
¥öt_hódî
();

85 
check_ªsu…s
();

86 
¥öt_°©e_¨øy
(, *, );

88 *
	ga
, *
	gb
, **
	gc
, **
	gªf
;

90 
FILE
 *
	gÂ_wrôe
;

92 
	gvîbo£
;

93 
	gN
, 
	gM
;

95 
	$maö
(
¨gc
, **
¨gv
)

98 
îr‹_cou¡
;

106 #ifde‡
_OPENMP


107 
thªad_cou¡_îr‹
;

109 (Ë
	`omp_£t_dy«mic
(
FALSE
);

110 i‡(
	`omp_gë_dy«mic
()Ë{
	`¥ötf
("Warning: dynamicádjustment ofÅhreads has been set\n");}

111 (Ë
	`omp_£t_num_thªads
(3);

113 (Ë
	`omp_£t_√°ed
(
TRUE
);

114 i‡(! 
	`omp_gë_√°ed
()Ë{
	`¥ötf
("Warning:ÇestedÖarallelismÇot set\n");}

116 #¥agm®
omp
 
∑øŒñ
 
	`sh¨ed
(
thªad_cou¡_îr‹
)

118 #¥agm®
omp
 
sögÀ


120 i‡–
	`omp_gë_num_thªads
() < 3 ) {

121 
	`¥ötf
("FatalÉrror - AtÜeast 3ÅhreadsáreÇeeded, but only %dávailable\n",

122 
	`omp_gë_num_thªads
());

123 
thªad_cou¡_îr‹
 = 
TRUE
;

125 
thªad_cou¡_îr‹
 = 
FALSE
;

131 i‡–
thªad_cou¡_îr‹
 =
TRUE
 ) (-1);

141 (Ë
	`gë_cmd_löe_›ti⁄s
(
¨gc
,
¨gv
);

143 i‡(
vîbo£
Ë
	`¥ötf
("Allocating memory for data structures\n");

145 (Ë
	`öô_mem‹y
();

147 i‡(
vîbo£
Ë
	`¥ötf
("Memory for data structuresállocated\n");

149 i‡(
vîbo£
Ë
	`¥ötf
("Initializing data structures\n");

151 (Ë
	`öô_d©a
();

153 i‡(
vîbo£
Ë
	`¥ötf
("Data structures initialized\n");

155 (Ë
	`gíî©e_öput_fûe
();

157 (Ë
	`compuã_ª„ªn˚_ªsu…s
();

159 (Ë
	`¥öt_hódî
();

168 #¥agm®
omp
 
∑øŒñ
 
£˘i⁄s


170 #¥agm®
omp
 
£˘i⁄


172 i‡(
vîbo£
Ë
	`¥ötf
("TID = %d - i¿maö:Öîf‹m†thêªad o≥øti⁄s\n",
	`omp_gë_thªad_num
());

174 
i
=0; i<
N
; i++) {

175 (Ë
	`ªad_öput
(
i
);

176 (Ë
	`sig«l_ªad
(
i
);

179 #¥agm®
omp
 
£˘i⁄


181 i‡(
vîbo£
Ë
	`¥ötf
("TID = %d - i¿maö:Öîf‹m†thêcompuèti⁄s\n",
	`omp_gë_thªad_num
());

182 
i
=0; i<
N
; i++) {

183 (Ë
	`waô_ªad
(
i
);

184 (Ë
	`¥o˚ss_d©a
(
i
);

185 (Ë
	`sig«l_¥o˚s£d
(
i
);

188 #¥agm®
omp
 
£˘i⁄


190 i‡(
vîbo£
Ë
	`¥ötf
("TID = %d - i¿maö:Öîf‹m†thêwrôê›î©i⁄s\n",
	`omp_gë_thªad_num
());

191 
i
=0; i<
N
; i++) {

192 (Ë
	`waô_¥o˚s£d
(
i
);

193 (Ë
	`wrôe_ouçut
(
i
);

198 i‡–(
îr‹_cou¡
 = 
	`check_ªsu…s
()) == 0 ) {

199 
	`¥ötf
("ProgramÉxecuted successfully\n");

201 
	`¥ötf
("FATAL ERROR: found %d dif„ªn˚†öÅhêªsu…(s)\n",
îr‹_cou¡
);

204 
	`‰ì
(
a
);

205 
	`‰ì
(
b
);

206 
	`‰ì
(
c
);

207 
	`‰ì
(
ªf
);

208 
	`‰ì
(
executi⁄_°©e
);

212 
	}
}

214 
	$ªad_öput
(
i
)

216 
FILE
 *
Â_ªad
;

218 
executi⁄_°©e
[
i
] = 
READ_IN_PROGRESS
;

220 #¥agm®
omp
 
Êush


222 
	`¥öt_°©e_¨øy
(
	`omp_gë_thªad_num
(),"ªad_öput",
i
);

231 i‡–(
Â_ªad
 = 
	`f›í
(
fûe_ªad
,"r")Ë!
NULL
 ) {

232 i‡–
	`f£ek
(
Â_ªad
,(Ë
i
*2*(), 
SEEK_SET
) == 0 ) {

233 i‡–
	`‰ód
(&
a
[
i
],(),1,
Â_ªad
) != 1 ) {

234 
	`≥º‹
("ªad_öput:áºayá"); 
	`exô
(1);

236 i‡–
	`‰ód
(&
b
[
i
],(),1,
Â_ªad
) != 1 ) {

237 
	`≥º‹
("ªad_öput:áºay b"); 
	`exô
(1);

239 i‡(
vîbo£
) {

240 
	`¥ötf
("TID = %d - inÑead_input:á[%d]=%f b[%d]=%f\n",

241 
	`omp_gë_thªad_num
(),
i
,
a
[i],i,
b
[i]);

244 
	`≥º‹
("ªad_öput: sìkÉº‹"); 
	`exô
(1);

246 
	`f˛o£
(
Â_ªad
);

248 
	`≥º‹
("read_input: open file forÑead");

251 
	}
}

253 
	$sig«l_ªad
(
i
)

255 
	`¥öt_°©e_¨øy
(
	`omp_gë_thªad_num
(),"sig«l_ªad",
i
);

257 
executi⁄_°©e
[
i
] = 
READ_FINISHED
;

259 #¥agm®
omp
 
Êush


261 
	`¥öt_°©e_¨øy
(
	`omp_gë_thªad_num
(),"sig«l_ªad",
i
);

263 
	}
}

265 
	$waô_ªad
(
i
)

268 
	`¥öt_°©e_¨øy
(
	`omp_gë_thªad_num
(),"waô_ªad",
i
);

270 #¥agm®
omp
 
Êush


272  
executi⁄_°©e
[
i
] !
READ_FINISHED
 )

274 
	`¥öt_°©e_¨øy
(
	`omp_gë_thªad_num
(),"waô_ªad",
i
);

276 
	`sy°em
("sleep 1");

278 #¥agm®
omp
 
Êush


280 
	`¥öt_°©e_¨øy
(
	`omp_gë_thªad_num
(),"waô_ªad",
i
);

282 
	}
}

284 
	$¥o˚ss_d©a
(
i
)

286 
TID_LVL_1
 = 
	`omp_gë_thªad_num
();

288 
executi⁄_°©e
[
i
] = 
PROCESSING_IN_PROGRESS
;

290 #¥agm®
omp
 
Êush


292 
	`¥öt_°©e_¨øy
(
TID_LVL_1
,"¥o˚ss_d©a",
i
);

294 #¥agm®
omp
 
∑øŒñ
 
	`num_thªads
(4)

295 
j
=0 ; j<
M
; j++) {

296 i‡(
vîbo£
Ë
	`¥ötf
("TID:subTID = %d:%d - inÖrocess_data: iteration j=%d\n",

297 
TID_LVL_1
,
	`omp_gë_thªad_num
(),
j
);

298 
	`do_compuã
(
i
,
j
);

301 
	}
}

303 
	$do_compuã
(
i
,
j
)

306 
c
[
i
][
j
] +
a
[i] + 
b
[i];

308 i‡(
vîbo£
) {

309 
	`¥ötf
("\tö do_compuã: upd©ed c[%d][%d]\n",
i
,
j
);

312 
	}
}

315 
	$sig«l_¥o˚s£d
(
i
)

317 
executi⁄_°©e
[
i
] = 
PROCESSING_FINISHED
;

319 #¥agm®
omp
 
Êush


321 
	`¥öt_°©e_¨øy
(
	`omp_gë_thªad_num
(),"sig«l_¥o˚s£d",
i
);

323 
	}
}

325 
	$waô_¥o˚s£d
(
i
)

328 
	`¥öt_°©e_¨øy
(
	`omp_gë_thªad_num
(),"waô_¥o˚s£d",
i
);

330 #¥agm®
omp
 
Êush


332  
executi⁄_°©e
[
i
] !
PROCESSING_FINISHED
 )

334 
	`¥öt_°©e_¨øy
(
	`omp_gë_thªad_num
(),"waô_¥o˚s£d",
i
);

336 
	`sy°em
("sleep 1");

338 #¥agm®
omp
 
Êush


341 
	`¥öt_°©e_¨øy
(
	`omp_gë_thªad_num
(),"waô_¥o˚s£d",
i
);

343 
	}
}

345 
	$wrôe_ouçut
(
i
)

347 
CutOffPröt
 = 9;

349 
	`¥öt_°©e_¨øy
(
	`omp_gë_thªad_num
(),"wrôe_ouçut",
i
);

351 i‡(
vîbo£
) {

352 
	`¥ötf
("TID = %d - i¿wrôe_ouçut: i=%d\n",
	`omp_gë_thªad_num
(),
i
);

354 
	`¥ötf
("\tc[%d][]: ",
i
);

355 i‡–
M
 < 
CutOffPröt
 ) {

356 
j
=0; j<
M
; j++)

357 
	`¥ötf
("%.2‡",
c
[
i
][
j
]);

359 
j
=0; j<
CutOffPröt
; j++)

360 
	`¥ötf
("%.2‡",
c
[
i
][
j
]);

361 
	`¥ötf
("... %.2‡",
c
[
i
][
M
-1]);

363 
	`¥ötf
("\n");

366 
	}
}

368 
	$gíî©e_öput_fûe
()

370 i‡–(
Â_wrôe
 = 
	`f›í
(
fûe_ªad
,"w")Ë!
NULL
 ) {

371 
i
=0; i<
N
; i++)

373 
	`fwrôe
(&
a
[
i
],(),1,
Â_wrôe
);

374 
	`fwrôe
(&
b
[
i
],(),1,
Â_wrôe
);

376 
	`f˛o£
(
Â_wrôe
);

378 
	`≥º‹
("gíî©e_öput_fûe: o≥¿fûêf‹ wrôe"); 
	`exô
(1);

381 
	}
}

383 
	$compuã_ª„ªn˚_ªsu…s
()

385 
i
=0; i<
N
; i++)

386 
j
=0; j<
M
; j++)

387 
ªf
[
i
][
j
] = 0.0;

389 
i
=0; i<
N
; i++)

390 
j
=0; j<
M
; j++)

391 
ªf
[
i
][
j
] +
a
[i] + 
b
[i];

393 
	}
}

395 
	$check_ªsu…s
()

397 
ªl_îr‹
;

398 
TOL
 = 
DBL_EPSILON
*10.0;

399 
îr‹_cou¡
 = 0;

401 
i
=0; i<
N
; i++)

402 
j
=0; j<
M
; j++)

404 i‡(
	`FABS
(
ªf
[
i
][
j
]Ë> 
DBL_MAX
)

405 
ªl_îr‹
 = 
	`FABS
–(
c
[
i
][
j
] - 
ªf
[i][j])/ref[i][j] );

407 
ªl_îr‹
 = 
	`FABS
–
c
[
i
][
j
] - 
ªf
[i][j] );

409 i‡(
ªl_îr‹
 > 
TOL
 ) {

410 
îr‹_cou¡
++;

411 
	`¥ötf
("c[%d][%d] = %fÑef[%d][%d] = %fÑel.Érror = %e\n",

412 
i
,
j
,
c
[i][j],i,j,
ªf
[i][j],
ªl_îr‹
);

415 (
îr‹_cou¡
);

417 
	}
}

419 
	$öô_mem‹y
()

421 i‡–(
a
 = (*Ë
	`mÆloc
(
N
*())Ë=
NULL
 ) {

422 
	`≥º‹
("öô_mem‹y: mem‹yáŒoˇti⁄ faûuª f‹á"); 
	`exô
(1);

424 i‡(
vîbo£
Ë
	`¥ötf
("\tAllocated memory forá\n");

427 i‡–(
b
 = (*Ë
	`mÆloc
(
N
*())Ë=
NULL
 ) {

428 
	`≥º‹
("öô_mem‹y: mem‹yáŒoˇti⁄ faûuª f‹ b"); 
	`exô
(1);

430 i‡(
vîbo£
Ë
	`¥ötf
("\tAllocated memory for b\n");

433 i‡–(
c
 = (**Ë
	`mÆloc
(
N
*())Ë=
NULL
 ) {

434 
	`≥º‹
("öô_mem‹y: mem‹yáŒoˇti⁄ faûuª f‹ c"); 
	`exô
(1);

436 
i
=0; i<
N
; i++)

437 i‡–(
c
[
i
] = 
	`mÆloc
(
M
*())Ë=
NULL
 ) {

438 
	`≥º‹
("öô_mem‹y: mem‹yáŒoˇti⁄ faûuª f‹ c"); 
	`exô
(1);

441 i‡(
vîbo£
Ë
	`¥ötf
("\tAllocated memory for c\n");

443 i‡–(
ªf
 = (**Ë
	`mÆloc
(
N
*())Ë=
NULL
 ) {

444 
	`≥º‹
("öô_mem‹y: mem‹yáŒoˇti⁄ faûuª f‹Ñef"); 
	`exô
(1);

446 
i
=0; i<
N
; i++)

447 i‡–(
ªf
[
i
] = 
	`mÆloc
(
M
*())Ë=
NULL
 ) {

448 
	`≥º‹
("öô_mem‹y: mem‹yáŒoˇti⁄ faûuª f‹Ñef"); 
	`exô
(1);

451 i‡(
vîbo£
Ë
	`¥ötf
("\tAllocated memory forÑef\n");

453 i‡–(
executi⁄_°©e
 = 
	`mÆloc
(
N
*())Ë=
NULL
 ) {

454 
	`≥º‹
("öô_mem‹y: mem‹yáŒoˇti⁄ faûuª f‹Éxecuti⁄_°©e"); 
	`exô
(1);

456 i‡(
vîbo£
Ë
	`¥ötf
("\tAllocated memory forÉxecution_state\n");

459 
	}
}

461 
	$öô_d©a
()

463 
i
=0; i<
N
; i++)

464 
a
[
i
] = i+1;

466 
i
=0; i<
N
; i++)

467 
b
[
i
] = 
a
[
N
-1] + i+1;

469 
i
=0; i<
N
; i++)

470 
j
=0; j<
M
; j++)

471 
c
[
i
][
j
] = 0.0;

473 
i
=0; i<
N
; i++)

474 
executi⁄_°©e
[
i
] = 
UNDEFINED
;

475 #¥agm®
omp
 
Êush


477 
	}
}

479 
	$gë_cmd_löe_›ti⁄s
(
¨gc
, **
¨gv
)

481 
›t°rög
[]="N:M:hv";

483 
c
;

484 *
›èrg
;

485 
›ãº
;

487 
N
 = 
DefVÆN
;

488 
M
 = 
DefVÆM
;

489 
vîbo£
 = 
FALSE
;

491 i‡–
¨gc
 > 1 ) {

492 
›ãº
 = 0;

493 (
c
 = 
	`gë›t
(
¨gc
, 
¨gv
, 
›t°rög
)Ë!
EOF
)

495 
c
) {

497 
N
 = 
	`©oi
(
›èrg
);

500 
M
 = 
	`©oi
(
›èrg
);

503 
vîbo£
 = 
TRUE
;

506 
	`¥ötf
("Ußge:%†[-N <n>] [-M <m>] [-v] [-h]\n\n",
¨gv
[0]);

507 
	`¥ötf
("Options supported:\n");

508 
	`¥ötf
(" <N>ÖrobÀm sizê(›ti⁄Æ - deÁu… i†%d)\n",
DefVÆN
);

509 
	`¥ötf
(" <M>ÖrobÀm sizê(›ti⁄Æ - deÁu… i†%d)\n",
DefVÆM
);

510 
	`¥ötf
(" <v>áctivates verbose mode (optional- by default it is off)\n");

511 
	`¥ötf
(" <h> displayÅhis usage overview\n");

512 
	`exô
(0);

515 
	`¥ötf
("Warning: incomplete or incorrect option(s) ignored\n");

524 i‡(
vîbo£
Ë
	`¥ötf
("N=%d M=%d\n",
N
,
M
);

527 
	}
}

529 
	$¥öt_°©e_¨øy
(
TID
, *
«me
, 
i
)

531 
fú°
 = 
TRUE
;

533 #¥agm®
omp
 
¸ôiˇl


535 i‡(
fú°
) {

536 
fú°
 = 
FALSE
;

538 #¥agm®
omp
 
Êush


540 
	`¥ötf
("Thread ID Function Execution Status Array\n");

541 
	`¥ötf
(" Value of i:");

542 
j
=0; j<
N
; j++Ë
	`¥ötf
("%3d",j);

543 
	`¥ötf
("\n\n");

546 
	`¥ötf
("%6d %-20s",
TID
,
«me
);

548 i‡–
i
 >= 0 )

550 
j
=0; j<
i
; j++) {

552 #¥agm®
omp
 
Êush


553 
	`¥ötf
(" %2d",
executi⁄_°©e
[
j
]);

555 #¥agm®
omp
 
Êush


556 
	`¥ötf
(" *%1d",
executi⁄_°©e
[
i
]);

559 
j
=
i
+1; j<
N
; j++) {

561 #¥agm®
omp
 
Êush


562 
	`¥ötf
(" %2d",
executi⁄_°©e
[
j
]);

564 
	`¥ötf
("\n");

569 
	}
}

571 
	$¥öt_hódî
()

573 
	`¥ötf
("ThisÖrogram demonstrates how I/O can be overlapped with computations.\n");

574 
	`¥ötf
("Several optionsáre supported. UseÅhe -h option forán overview.\n");

575 
	`¥ötf
("\n");

576 
	`¥ötf
("Thereáre 3 distinctÖhases. EachÖhase isássignedÅoá differentÅhread.\n");

577 
	`¥ötf
("CorrectÉxecution is independent ofÅheássignment ofáÖhaseÅoá specificÅhread.\n");

578 
	`¥ötf
("\n");

579 
	`¥ötf
("TheseáreÅhe differentÖhases:\n");

580 
	`¥ötf
("InputÖhase:Ñead_input - signal_read\n");

581 
	`¥ötf
("ComputationalÖhase: wait_read -Örocess_data - signal_processed\n");

582 
	`¥ötf
("OutputÖhase: wait_processed - write_output\n");

583 
	`¥ötf
("\n");

584 
	`¥ötf
("TheÉntire operation is splitted into chunks. A specific chunk isÑepresented\n");

585 
	`¥ötf
("byÅhêvÆuêo‡ôî©i⁄ i. I¿tŸÆÅhîê¨ê%d chunks\n",
N
);

586 
	`¥ötf
("\n");

588 
	`¥ötf
("An internal status flag is usedÅoÖass on information betweenÅheÅhreads\n");

589 
	`¥ötf
("regardingá specificÖhase.\n");

590 
	`¥ötf
("\n");

591 
	`¥ötf
("Legend for status flag\n");

592 
	`¥ötf
("\t%d - UNDEFINED\n" ,
UNDEFINED
);

593 
	`¥ötf
("\t%d - READ_IN_PROGRESS\n" ,
READ_IN_PROGRESS
);

594 
	`¥ötf
("\t%d - READ_FINISHED\n" ,
READ_FINISHED
);

595 
	`¥ötf
("\t%d - PROCESSING_IN_PROGRESS\n",
PROCESSING_IN_PROGRESS
);

596 
	`¥ötf
("\t%d - PROCESSING_FINISHED\n" ,
PROCESSING_FINISHED
);

597 
	`¥ötf
("\n");

598 
	`¥ötf
("TheÅable below displays what functioná specificÅhread isÉxecuting,\n");

599 
	`¥ötf
("as wellásÅhe value ofÅhe status flag forá values of i.\n");

600 
	`¥ötf
("\n");

602 
	`¥ötf
("The * symbol indicatesÅhe current value of iÅhe function is working on\n");

603 
	`¥ötf
("\n");

605 
	`¥öt_°©e_¨øy
(
	`omp_gë_thªad_num
(),"initialization",-1);

607 
	}
}

	@Using-OpenMP-Examples-Distr/chapter7/fig7.11-nested-parallel.c

42 
	~<°dlib.h
>

43 
	~<°dio.h
>

45 #ifde‡
_OPENMP


46 
	~<omp.h
>

47 
	#TRUE
 1

	)

48 
	#FALSE
 0

	)

51 
	$maö
()

53 
n
 = 4;

54 *
a
, **
b
;

56 #ifde‡
_OPENMP


57 (Ë
	`omp_£t_dy«mic
(
FALSE
);

58 i‡(
	`omp_gë_dy«mic
()Ë{
	`¥ötf
("Warning: dynamicádjustment ofÅhreads has been set\n");}

59 (Ë
	`omp_£t_num_thªads
(4);

62 i‡–(
a
=(*)
	`mÆloc
(
n
*())Ë=
NULL
 ) {

63 
	`≥º‹
("¨øyá"); 
	`exô
(-1);

66 i‡–(
b
=(**)
	`mÆloc
(
n
*(*))Ë=
NULL
 ) {

67 
	`≥º‹
("¨øy b"); 
	`exô
(-1);

70 
i
=0; i<
n
; i++)

71 i‡–(
b
[
i
]=(*)
	`mÆloc
(
n
*())Ë=
NULL
 )

72 {
	`≥º‹
("¨øy b"); 
	`exô
(-1);}

75 #¥agm®
omp
 
∑øŒñ
 
	`sh¨ed
(
n
,
a
,
b
)

77 #¥agm®
omp
 

78 
i
=0; i<
n
; i++)

80 
a
[
i
] = i + 1;

81 #¥agm®
omp
 
∑øŒñ
 

82 
j
=0; j<
n
; j++)

83 
b
[
i
][
j
] = 
a
[i];

87 
i
=0; i<
n
; i++)

89 
j
=0; j<
n
; j++)

90 
	`¥ötf
("b[%d][%d] = %d ",
i
,
j
,
b
[i][j]);

91 
	`¥ötf
("\n");

94 
	`‰ì
(
a
);

95 
	`‰ì
(
b
);

96 
	}
}

	@Using-OpenMP-Examples-Distr/chapter7/fig7.7-first-lastprivate.c

42 
	~<°dio.h
>

43 
	~<°dlib.h
>

45 
	#TRUE
 1

	)

46 
	#FALSE
 0

	)

48 #ifde‡
_OPENMP


49 
	~<omp.h
>

51 
	#omp_gë_thªad_num
(Ë0

	)

54 
	$maö
 ()

56 
a
, 
b
, 
c
, 
i
, 
n
;

57 
a_check
, 
c_check
;

59 #ifde‡
_OPENMP


60 (Ë
	`omp_£t_dy«mic
(
FALSE
);

61 i‡(
	`omp_gë_dy«mic
()Ë{
	`¥ötf
("Warning: dynamicádjustment ofÅhreads has been set\n");}

62 (Ë
	`omp_£t_num_thªads
(4);

65 
b
 = 50;

66 
n
 = 1858;

68 
a_check
 = 
b
 + 
n
-1;

69 
c_check
 = 
a_check
 + 
b
;

71 
	`¥ötf
("Bef‹ê∑øŒñÜo›: b = %dÇ = %d\n",
b
,
n
);

73 #¥agm®
omp
 
∑øŒñ
 
	`¥iv©e
(
i
), 
	`fú°¥iv©e
(
b
), \

74 
	`œ°¥iv©e
(
a
)

75 
i
=0; i<
n
; i++)

77 
a
 = 
b
+
i
;

80 
c
 = 
a
 + 
b
;

82 
	`¥ötf
("Values ofáánd cáfterÖarallel for:\n");

83 
	`¥ötf
("\è = %d\t(c‹ª˘ vÆuêi†%d)\n",
a
,
a_check
);

84 
	`¥ötf
("\t¯%d\t(c‹ª˘ vÆuêi†%d)\n",
c
,
c_check
);

87 
	}
}

	@Using-OpenMP-Examples-Distr/include/gnu-compilers.h

2 #Thi†
fûe
 
c⁄èös
 
the
 
compûî
 
›ti⁄s
 thê
GNU
 
C
 
™d
 
F‹å™


3 #compûî†
⁄
 
Löux
.

4 #
#Makê
v¨übÀs
 
¨e
 
u£d
 
to
 
£t
 
up
 
the
 
fﬁlowög
 v¨übÀ†
th©
áre

6 #u£d 
to
 
compûe
 
™d
 
lök
 
the
 
v¨ious
 
¥ogøms
:

7 #
#CFLAGS - 
Sîül
 
›ti⁄s
 
the
 
C
 
compûî


9 #FFLAGS - 
Sîül
 
›ti⁄s
 
the
 
F‹å™
 
compûî


10 #C_OMP - 
O±i⁄
(
s
Ë
to
 
a˘iv©e
 
O≥nMP
 
ö
 
the
 
C
 
compûî


11 #FTN_OMP - 
O±i⁄
(
s
Ë
to
 
a˘iv©e
 
O≥nMP
 
ö
 
the
 
F‹å™
 
compûî


12 #LDFLAGS - 
Sîül
 
›ti⁄s
 
the
 
lﬂdî


13 #
#Ruud 
v™
 
dî
 
Pas
, 
Sun
 
Mi¸osy°ems


18 #Name†
of
 
compûîs
. 
The
  
£¨ch
 
∑th
 
is
 
assumed
 
to
 
ö˛ude
 
the


19 #C 
™d
 
F‹å™
 
compûîs
.

21 
	gCC
 = 
gcc


22 
FTN
 = 
gf‹å™


25 #GíîÆ 
›ti⁄s
, 
sh¨ed
 
a¸oss
 
F‹å™
 
™d
 
C


27 
	gOPT
 = -
O


28 
C_OMP
 = -
f›ímp


29 
FTN_OMP
 = -
f›ímp


32 #O±i⁄†
•ecific
 
to
 
C


34 
STD
 = -
°d
=
gnu9x
 #C99 
∂us
 
GNU
 
	$exãnsi⁄s
 (
√eded
 
gë›t
)

37 #O±i⁄†
•ecific
 
to
 
F‹å™


39 
FORMAT
 =

42 #Nÿ
ch™ges
 
√eded
 
bñow
 
this
 
löe


44 
CFLAGS
 = 
	`$
(
OPT
Ë
	$$
(
STD
)

45 
FFLAGS
 = 
	`$
(
OPT
Ë
	$$
(
FORMAT
)

46 
LDFLAGS
 = 
	$$
(
OPT
)

47 
LIBS
 =

	@Using-OpenMP-Examples-Distr/include/ibm-compilers.h

2 #Thi†
fûe
 
c⁄èös
 
the
 
compûî
 
›ti⁄s
 thê
IBM
 
C
 
™d
 
F‹å™


3 #compûî†
⁄
 
AIX
 
™d
 
Löux
.

4 #
#Makê
v¨übÀs
 
¨e
 
u£d
 
to
 
£t
 
up
 
the
 
fﬁlowög
 v¨übÀ†
th©
áre

6 #u£d 
to
 
compûe
 
™d
 
lök
 
the
 
v¨ious
 
¥ogøms
:

7 #
#CFLAGS - 
Sîül
 
›ti⁄s
 
the
 
C
 
compûî


9 #FFLAGS - 
Sîül
 
›ti⁄s
 
the
 
F‹å™
 
compûî


10 #C_OMP - 
O±i⁄
(
s
Ë
to
 
a˘iv©e
 
O≥nMP
 
ö
 
the
 
C
 
compûî


11 #FTN_OMP - 
O±i⁄
(
s
Ë
to
 
a˘iv©e
 
O≥nMP
 
ö
 
the
 
F‹å™
 
compûî


12 #LDFLAGS - 
Sîül
 
›ti⁄s
 
the
 
lﬂdî


13 #
#Ruud 
v™
 
dî
 
Pas
, 
Sun
 
Mi¸osy°ems


18 #Name†
of
 
compûîs
. 
The
  
£¨ch
 
∑th
 
is
 
assumed
 
to
 
ö˛ude
 
the


19 #C 
™d
 
F‹å™
 
compûîs
.

21 
	gCC
 = 
xlc_r


22 
FTN
 = 
xlf90_r


25 #GíîÆ 
›ti⁄s
, 
sh¨ed
 
a¸oss
 
F‹å™
 
™d
 
C


27 
	gOPT
 =

28 
C_OMP
 = -
qsmp
=
omp


29 
FTN_OMP
 = -
qsmp
=
omp


32 #O±i⁄†
•ecific
 
to
 
C


36 #O±i⁄†
•ecific
 
to
 
F‹å™


38 #FORMAT = -
qfixed
 (
fixed
 
f‹m
Ë
‹
 -
q‰ì
 (
‰ì
 form)

39 
FORMAT
 = -
q‰ì
=
f90


42 #Nÿ
ch™ges
 
√eded
 
bñow
 
this
 
löe


44 
CFLAGS
 = 
	$$
(
OPT
)

45 
FFLAGS
 = 
	`$
(
OPT
Ë
	$$
(
FORMAT
)

46 
LDFLAGS
 = 
	$$
(
OPT
)

47 
LIBS
 =

	@Using-OpenMP-Examples-Distr/include/intel-compilers-linux.h

2 #Thi†
fûe
 
c⁄èös
 
the
 
compûî
 
›ti⁄s
 thê
I¡ñ
 
C
 
™d
 
F‹å™


3 #compûî†
⁄
 
Löux
.

4 #
#Makê
v¨übÀs
 
¨e
 
u£d
 
to
 
£t
 
up
 
the
 
fﬁlowög
 v¨übÀ†
th©
áre

6 #u£d 
to
 
compûe
 
™d
 
lök
 
the
 
v¨ious
 
¥ogøms
:

7 #
#CFLAGS - 
Sîül
 
›ti⁄s
 
the
 
C
 
compûî


9 #FFLAGS - 
Sîül
 
›ti⁄s
 
the
 
F‹å™
 
compûî


10 #C_OMP - 
O±i⁄
(
s
Ë
to
 
a˘iv©e
 
O≥nMP
 
ö
 
the
 
C
 
compûî


11 #FTN_OMP - 
O±i⁄
(
s
Ë
to
 
a˘iv©e
 
O≥nMP
 
ö
 
the
 
F‹å™
 
compûî


12 #LDFLAGS - 
Sîül
 
›ti⁄s
 
the
 
lﬂdî


13 #
#Ruud 
v™
 
dî
 
Pas
, 
Sun
 
Mi¸osy°ems


18 #Name†
of
 
compûîs
. 
The
  
£¨ch
 
∑th
 
is
 
assumed
 
to
 
ö˛ude
 
the


19 #C 
™d
 
F‹å™
 
compûîs
.

21 
	gCC
 = 
icc


22 
FTN
 = 
if‹t


25 #GíîÆ 
›ti⁄s
, 
sh¨ed
 
a¸oss
 
F‹å™
 
™d
 
C


27 
	gOPT
 = -
O


28 
C_OMP
 = -
›ímp


29 
FTN_OMP
 = -
›ímp


32 #O±i⁄†
•ecific
 
to
 
C


36 #O±i⁄†
•ecific
 
to
 
F‹å™


38 
FORMAT
 =

41 #Nÿ
ch™ges
 
√eded
 
bñow
 
this
 
löe


43 
CFLAGS
 = 
$
(
OPT
Ë-
ª°ri˘
 -
°d
=
c99


44 
FFLAGS
 = 
$
(
OPT
Ë
	$$
(
FORMAT
)

45 
LDFLAGS
 = 
	`$
(
OPT
Ë-
›ímp


46 
LIBS
 =

	@Using-OpenMP-Examples-Distr/include/intel-compilers-macos.h

2 #Thi†
fûe
 
c⁄èös
 
the
 
compûî
 
›ti⁄s
 thê
I¡ñ
 
C
 
™d
 
F‹å™


3 #compûî†
⁄
 
Mac
 
OS
.

4 #
#Makê
v¨übÀs
 
¨e
 
u£d
 
to
 
£t
 
up
 
the
 
fﬁlowög
 v¨übÀ†
th©
áre

6 #u£d 
to
 
compûe
 
™d
 
lök
 
the
 
v¨ious
 
¥ogøms
:

7 #
#CFLAGS - 
Sîül
 
›ti⁄s
 
the
 
C
 
compûî


9 #FFLAGS - 
Sîül
 
›ti⁄s
 
the
 
F‹å™
 
compûî


10 #C_OMP - 
O±i⁄
(
s
Ë
to
 
a˘iv©e
 
O≥nMP
 
ö
 
the
 
C
 
compûî


11 #FTN_OMP - 
O±i⁄
(
s
Ë
to
 
a˘iv©e
 
O≥nMP
 
ö
 
the
 
F‹å™
 
compûî


12 #LDFLAGS - 
Sîül
 
›ti⁄s
 
the
 
lﬂdî


13 #
#Ruud 
v™
 
dî
 
Pas
, 
Sun
 
Mi¸osy°ems


18 #Name†
of
 
compûîs
. 
The
  
£¨ch
 
∑th
 
is
 
assumed
 
to
 
ö˛ude
 
the


19 #C 
™d
 
F‹å™
 
compûîs
.

21 
	gCC
 = 
icc


22 
FTN
 = 
if‹t


25 #GíîÆ 
›ti⁄s
, 
sh¨ed
 
a¸oss
 
F‹å™
 
™d
 
C


27 
	gOPT
 = -
O


28 
C_OMP
 = -
›ímp


29 
FTN_OMP
 = -
›ímp


32 #O±i⁄†
•ecific
 
to
 
C


36 #O±i⁄†
•ecific
 
to
 
F‹å™


38 
FORMAT
 =

41 #Nÿ
ch™ges
 
√eded
 
bñow
 
this
 
löe


43 
CFLAGS
 = 
$
(
OPT
Ë-
ª°ri˘
 -
°d
=
c99


44 
FFLAGS
 = 
$
(
OPT
Ë
	$$
(
FORMAT
)

45 
LDFLAGS
 = 
	`$
(
OPT
Ë-
›ímp


46 
LIBS
 =

	@Using-OpenMP-Examples-Distr/include/pgi-compilers.h

2 #Thi†
fûe
 
c⁄èös
 
the
 
compûî
 
›ti⁄s
 thê
PGI
 
C
 
™d
 
F‹å™


3 #compûî†
⁄
 
Löux
, 
Mac
 
OS
 
™d
 
Wödows
.

4 #
#Makê
v¨übÀs
 
¨e
 
u£d
 
to
 
£t
 
up
 
the
 
fﬁlowög
 v¨übÀ†
th©
áre

6 #u£d 
to
 
compûe
 
™d
 
lök
 
the
 
v¨ious
 
¥ogøms
:

7 #
#CFLAGS - 
Sîül
 
›ti⁄s
 
the
 
C
 
compûî


9 #FFLAGS - 
Sîül
 
›ti⁄s
 
the
 
F‹å™
 
compûî


10 #C_OMP - 
O±i⁄
(
s
Ë
to
 
a˘iv©e
 
O≥nMP
 
ö
 
the
 
C
 
compûî


11 #FTN_OMP - 
O±i⁄
(
s
Ë
to
 
a˘iv©e
 
O≥nMP
 
ö
 
the
 
F‹å™
 
compûî


12 #LDFLAGS - 
Sîül
 
›ti⁄s
 
the
 
lﬂdî


13 #
#Ruud 
v™
 
dî
 
Pas
, 
Sun
 
Mi¸osy°ems


18 #Name†
of
 
compûîs
. 
The
  
£¨ch
 
∑th
 
is
 
assumed
 
to
 
ö˛ude
 
the


19 #C 
™d
 
F‹å™
 
compûîs
.

21 
	gCC
 = 
pgcc


22 
FTN
 = 
pgf90


25 #GíîÆ 
›ti⁄s
, 
sh¨ed
 
a¸oss
 
F‹å™
 
™d
 
C


27 
	gOPT
 = -
Á°s£


28 
C_OMP
 = -
mp
 -
Möfo


29 
FTN_OMP
 = -
mp
 -
Möfo


32 #O±i⁄†
•ecific
 
to
 
C


36 #O±i⁄†
•ecific
 
to
 
F‹å™


38 
FORMAT
 = -
M‰ì


41 #Nÿ
ch™ges
 
√eded
 
bñow
 
this
 
löe


43 
CFLAGS
 = 
	$$
(
OPT
)

44 
FFLAGS
 = 
	`$
(
OPT
Ë
	$$
(
FORMAT
)

45 
LDFLAGS
 = 
	$$
(
OPT
)

46 
LIBS
 =

	@Using-OpenMP-Examples-Distr/include/sun-studio-compilers.h

2 #Thi†
fûe
 
c⁄èös
 
the
 
compûî
 
›ti⁄s
 thê
Sun
 
Studio
 
compûîs


3 #⁄ 
Sﬁ¨is
 
™d
 
Löux
.

4 #
#Makê
v¨übÀs
 
¨e
 
u£d
 
to
 
£t
 
up
 
the
 
fﬁlowög
 v¨übÀ†
th©
áre

6 #u£d 
to
 
compûe
 
™d
 
lök
 
the
 
v¨ious
 
¥ogøms
:

7 #
#CFLAGS - 
Sîül
 
›ti⁄s
 
the
 
C
 
compûî


9 #FFLAGS - 
Sîül
 
›ti⁄s
 
the
 
F‹å™
 
compûî


10 #C_OMP - 
O±i⁄
(
s
Ë
to
 
a˘iv©e
 
O≥nMP
 
ö
 
the
 
C
 
compûî


11 #FTN_OMP - 
O±i⁄
(
s
Ë
to
 
a˘iv©e
 
O≥nMP
 
ö
 
the
 
F‹å™
 
compûî


12 #LDFLAGS - 
Sîül
 
›ti⁄s
 
the
 
lﬂdî


13 #
#Ruud 
v™
 
dî
 
Pas
, 
Sun
 
Mi¸osy°ems


18 #Name†
of
 
compûîs
. 
The
  
£¨ch
 
∑th
 
is
 
assumed
 
to
 
ö˛ude
 
the


19 #C 
™d
 
F‹å™
 
compûîs
.

21 
	gCC
 = 
cc


22 
FTN
 = 
f95


25 #GíîÆ 
›ti⁄s
, 
sh¨ed
 
a¸oss
 
F‹å™
 
™d
 
C


27 
	gOPT
 = -
xO3


28 
C_OMP
 = -
x›ímp
 -
xlo›öfo


29 
FTN_OMP
 = -
x›ímp
 -
xlo›öfo


32 #O±i⁄†
•ecific
 
to
 
C


36 #O±i⁄†
•ecific
 
to
 
F‹å™


38 
FORMAT
 =

41 #Nÿ
ch™ges
 
√eded
 
bñow
 
this
 
löe


43 
CFLAGS
 = 
	$$
(
OPT
)

44 
FFLAGS
 = 
	`$
(
OPT
Ë
	$$
(
FORMAT
)

45 
LDFLAGS
 = 
	$$
(
OPT
)

46 
LIBS
 =

	@aff.c

2 
	#_GNU_SOURCE


	)

5 
	~<°dio.h
>

6 
	~<°dlib.h
>

7 
	~<omp.h
>

8 
	~<time.h
>

9 
	~<sched.h
>

10 
	~<uni°d.h
>

11 
	~<sys/waô.h
>

14 
	#N
 500

	)

16 
	#M
 500

	)

18 
	#OMP_PROC_BIND
 
åue


	)

19 
	$myH™dÀr
(
sig
){

20 i‡(
sig
 =
SIGUSR1
)

21 
	`¥ötf
("signalÑeceived, continuing\n");

22 
	}
}

25 
	$maö
–
¨gc
, ** 
¨gv
) {

26 
t1
[
N
];

27 
t2
[
M
];

29 
i
 = 0; i<
N
; i++)

30 
t1
[
i
]= 3*i + 2.0;

32 
i
=0; i <
M
; i++)

33 
t2
[
i
]= i*i + 7.0;

36 
pid
;

37 i‡((
pid

	`f‹k
())==-1)

38 
	`≥º‹
("couldÇot fork \n");

39 i‡(
pid
 == 0)

41 
˝u_£t_t
 
£t
, 
£ç
, 
gë
;

42 
r
, 
r1
;

43 
	`CPU_ZERO
(&
£t
);

44 
	`CPU_ZERO
(&
£ç
);

45 
	`CPU_SET
(0, &
£t
);

46 
	`CPU_SET
(3, &
£ç
);

48 i‡((
r
=
	`sched_£èfföôy
(
	`gëpid
(), (
˝u_£t_t
), &
£t
))==-1)

49 
	`≥º‹
("couldÇot setáffinity");

50 i‡((
r
=
	`sched_£èfföôy
(
	`gëµid
(), (
˝u_£t_t
), &
£ç
))==-1)

51 
	`≥º‹
("couldÇot setáffinity");

52 
	`kûl
(
	`gëµid
(), 
SIGUSR1
);

53 i‡((
r1
=
	`sched_gëafföôy
(
	`gëpid
(), (
˝u_£t_t
), &
gë
))==-1)

54 
	`≥º‹
("couldÇot getáffinity");

55 
n˝u
=0;

56 
n˝u
 = 
	`CPU_COUNT
(&
gë
);

57 
	`¥ötf
("‰om chûd,Çumbî o‡˝u=%d,\n", 
n˝u
);

58 
˛ock_t
 
°¨t
=
	`˛ock
(), 
diff
;

60 
i
=0;;i++)

62 
t1
[
i
%
N
]+= 3.0;

63 
diff

	`˛ock
(Ë- 
°¨t
;

64 
m£c
 = 
diff
 * 1000 / 
CLOCKS_PER_SEC
;

66 i‡(
m£c
 > 2000)

68 
°¨t
 = 
	`˛ock
();

69 
	`¥ötf
("‰om chûd,Å1[0]%f\n", 
t1
[0]);

77 
	`sig«l
(
SIGUSR1
,
myH™dÀr
);

78 
˛ock_t
 
°¨t
=
	`˛ock
(), 
diff
;

79 
˝u_£t_t
 
£t
, 
gë
;

80 
r
, 
r2
;

81 
	`CPU_ZERO
(&
£t
);

86 
	`∑u£
();

87 i‡((
r2
=
	`sched_gëafföôy
(
	`gëpid
(), (
˝u_£t_t
), &
gë
))==-1)

88 
	`≥º‹
("couldÇot getáffinity");

90 
n˝u
=0;

91 
n˝u
 = 
	`CPU_COUNT
(&
gë
);

92 
	`¥ötf
("‰omÖ¨ít,Çumbî o‡˝u=%d,\n", 
n˝u
);

93 
i
=0;;i++)

95 
t2
[
i
%
N
]-= 4.0;

96 
diff

	`˛ock
(Ë- 
°¨t
;

97 
m£c
 = 
diff
 * 1000 / 
CLOCKS_PER_SEC
;

98 i‡(
m£c
 > 2000)

100 
°¨t
 = 
	`˛ock
();

101 
	`¥ötf
("‰omÖ¨ít,Å2[0]%f\n", 
t2
[0]);

108 
	}
}

	@example.c

1 
	~<°dio.h
>

2 
	~<°dlib.h
>

3 
	~<omp.h
>

4 
	~<time.h
>

7 
	#N
 100000

	)

8 
	#M
 100000

	)

11 
	$maö
–
¨gc
, ** 
¨gv
) {

12 
t1
[
N
];

13 
t2
[
M
];

15 
i
 = 0; i<
N
; i++)

16 
t1
[
i
]= 3*i + 2.0;

18 
i
=0; i <
M
; i++)

19 
t2
[
i
]= i*i + 7.0;

21 #¥agm®
omp
 
∑øŒñ
 
	`fú°¥iv©e
(
t1
, 
t2
)

23 #¥agm®
omp
 
£˘i⁄s


25 #¥agm®
omp
 
£˘i⁄


27 
	`¥ötf
("Thªad %d ha†èkí se˘i⁄ 1\n", 
	`omp_gë_thªad_num
());

28 
˛ock_t
 
°¨t
=
	`˛ock
(), 
diff
;

30 
i
=0;;i++)

32 
t1
[
i
%
N
]+= 3.0;

33 
diff

	`˛ock
(Ë- 
°¨t
;

34 
m£c
 = 
diff
 * 1000 / 
CLOCKS_PER_SEC
;

36 i‡(
m£c
 > 2000)

38 
°¨t
 = 
	`˛ock
();

39 
	`¥ötf
("‰om Thªad %d,Å1[0]%f\n", 
	`omp_gë_thªad_num
(),
t1
[0]);

45 #¥agm®
omp
 
£˘i⁄


47 
	`¥ötf
("Thªad %d ha†èkí se˘i⁄ 2\n", 
	`omp_gë_thªad_num
());

48 
˛ock_t
 
°¨t
=
	`˛ock
(), 
diff
;

50 
i
=0;;i++)

52 
t2
[
i
%
N
]-= 4.0;

53 
diff

	`˛ock
(Ë- 
°¨t
;

54 
m£c
 = 
diff
 * 1000 / 
CLOCKS_PER_SEC
;

55 i‡(
m£c
 > 2000)

57 
°¨t
 = 
	`˛ock
();

58 
	`¥ötf
("‰om Thªad %d,Å2[0]%f\n", 
	`omp_gë_thªad_num
(),
t2
[0]);

66 
	}
}

	@exercises/bug1.c

10 
	~<omp.h
>

11 
	~<°dio.h
>

12 
	~<°dlib.h
>

13 
	#N
 50

	)

14 
	#CHUNKSIZE
 5

	)

16 
	$maö
 (
¨gc
, *
¨gv
[])

18 
i
, 
chunk
, 
tid
;

19 
a
[
N
], 
b
[N], 
c
[N];

22 
i
=0; i < 
N
; i++)

23 
a
[
i
] = 
b
[i] = i * 1.0;

24 
chunk
 = 
CHUNKSIZE
;

26 #¥agm®
omp
 
∑øŒñ
 \

27 
	`sh¨ed
(
a
,
b
,
c
,
chunk
) \

28 
	`¥iv©e
(
i
,
tid
)

30 
tid
 = 
	`omp_gë_thªad_num
();

31 #¥agm®
omp
 
	`scheduÀ
(, 
chunk
)

32 
i
=0; i < 
N
; i++)

34 
c
[
i
] = 
a
[i] + 
b
[i];

35 
	`¥ötf
("tid%d i%d c[i]%f\n", 
tid
, 
i
, 
c
[i]);

39 
	}
}

	@exercises/bug1fix.c

11 
	~<omp.h
>

12 
	~<°dio.h
>

13 
	~<°dlib.h
>

14 
	#N
 50

	)

15 
	#CHUNKSIZE
 5

	)

17 
	$maö
 (
¨gc
, *
¨gv
[])

19 
i
, 
chunk
, 
tid
;

20 
a
[
N
], 
b
[N], 
c
[N];

21 
fú°_time
;

24 
i
=0; i < 
N
; i++)

25 
a
[
i
] = 
b
[i] = i * 1.0;

26 
chunk
 = 
CHUNKSIZE
;

27 
fú°_time
 = 'y';

29 #¥agm®
omp
 
∑øŒñ
 \

30 
	`sh¨ed
(
a
,
b
,
c
,
chunk
) \

31 
	`¥iv©e
(
i
,
tid
) \

32 
	`scheduÀ
(,
chunk
) \

33 
	`fú°¥iv©e
(
fú°_time
)

35 
i
=0; i < 
N
; i++)

37 i‡(
fú°_time
 == 'y')

39 
tid
 = 
	`omp_gë_thªad_num
();

40 
fú°_time
 = 'n';

42 
c
[
i
] = 
a
[i] + 
b
[i];

43 
	`¥ötf
("tid%d i%d c[i]%f\n", 
tid
, 
i
, 
c
[i]);

46 
	}
}

	@exercises/bug2.c

8 
	~<omp.h
>

9 
	~<°dio.h
>

10 
	~<°dlib.h
>

12 
	$maö
 (
¨gc
, *
¨gv
[])

14 
¡hªads
, 
i
, 
tid
;

15 
tŸÆ
;

18 #¥agm®
omp
 
∑øŒñ
 
	`¥iv©e
(
tid
, 
tŸÆ
)

21 
tid
 = 
	`omp_gë_thªad_num
();

23 i‡(
tid
 == 0) {

24 
¡hªads
 = 
	`omp_gë_num_thªads
();

25 
	`¥ötf
("Numbî o‡thªad†%d\n", 
¡hªads
);

27 
	`¥ötf
("Thªad %d i†°¨tög...\n",
tid
);

29 #¥agm®
omp
 
b¨rõr


32 
tŸÆ
 = 0.0;

33 #¥agm®
omp
 
	`scheduÀ
(
dy«mic
,10)

34 
i
=0; i<1000000; i++)

35 
tŸÆ
 =ÅŸÆ + 
i
*1.0;

37 
	`¥ötf
 ("Thªad %d i†d⁄e! TŸÆ%e\n",
tid
,
tŸÆ
);

40 
	}
}

	@exercises/bug3.c

8 
	~<omp.h
>

9 
	~<°dio.h
>

10 
	~<°dlib.h
>

11 
	#N
 50

	)

13 
	$maö
 (
¨gc
, *
¨gv
[])

15 
i
, 
¡hªads
, 
tid
, 
£˘i⁄
;

16 
a
[
N
], 
b
[N], 
c
[N];

17 
	`¥öt_ªsu…s
(
¨øy
[
N
], 
tid
, 
£˘i⁄
);

20 
i
=0; i<
N
; i++)

21 
a
[
i
] = 
b
[i] = i * 1.0;

23 #¥agm®
omp
 
∑øŒñ
 
	`¥iv©e
(
c
,
i
,
tid
,
£˘i⁄
)

25 
tid
 = 
	`omp_gë_thªad_num
();

26 i‡(
tid
 == 0)

28 
¡hªads
 = 
	`omp_gë_num_thªads
();

29 
	`¥ötf
("Numbî o‡thªad†%d\n", 
¡hªads
);

33 #¥agm®
omp
 
b¨rõr


34 
	`¥ötf
("Thªad %d sèπög...\n",
tid
);

35 #¥agm®
omp
 
b¨rõr


37 #¥agm®
omp
 
£˘i⁄s
 
nowaô


39 #¥agm®
omp
 
£˘i⁄


41 
£˘i⁄
 = 1;

42 
i
=0; i<
N
; i++)

43 
c
[
i
] = 
a
[i] * 
b
[i];

44 
	`¥öt_ªsu…s
(
c
, 
tid
, 
£˘i⁄
);

47 #¥agm®
omp
 
£˘i⁄


49 
£˘i⁄
 = 2;

50 
i
=0; i<
N
; i++)

51 
c
[
i
] = 
a
[i] + 
b
[i];

52 
	`¥öt_ªsu…s
(
c
, 
tid
, 
£˘i⁄
);

58 #¥agm®
omp
 
b¨rõr


59 
	`¥ötf
("Thªad %dÉxôög...\n",
tid
);

62 
	}
}

66 
	$¥öt_ªsu…s
(
¨øy
[
N
], 
tid
, 
£˘i⁄
)

68 
i
,
j
;

70 
j
 = 1;

72 #¥agm®
omp
 
¸ôiˇl


74 
	`¥ötf
("\nThªad %d did se˘i⁄ %d. Thêªsu…†¨e:\n", 
tid
, 
£˘i⁄
);

75 
i
=0; i<
N
; i++) {

76 
	`¥ötf
("%ê ",
¨øy
[
i
]);

77 
j
++;

78 i‡(
j
 == 6) {

79 
	`¥ötf
("\n");

80 
j
 = 1;

83 
	`¥ötf
("\n");

86 
	`¥ötf
("Thªad %d d⁄ê™d synchr⁄ized.\n", 
tid
);

88 
	}
}

	@exercises/bug4.c

8 
	~<omp.h
>

9 
	~<°dio.h
>

10 
	~<°dlib.h
>

11 
	#N
 1048

	)

13 
	$maö
 (
¨gc
, *
¨gv
[])

15 
¡hªads
, 
tid
, 
i
, 
j
;

16 
a
[
N
][N];

19 #¥agm®
omp
 
∑øŒñ
 
	`sh¨ed
(
¡hªads
Ë
	`¥iv©e
(
i
,
j
,
tid
,
a
)

23 
tid
 = 
	`omp_gë_thªad_num
();

24 i‡(
tid
 == 0)

26 
¡hªads
 = 
	`omp_gë_num_thªads
();

27 
	`¥ötf
("Numbî o‡thªad†%d\n", 
¡hªads
);

29 
	`¥ötf
("Thªad %d sèπög...\n", 
tid
);

32 
i
=0; i<
N
; i++)

33 
j
=0; j<
N
; j++)

34 
a
[
i
][
j
] = 
tid
 + i + j;

37 
	`¥ötf
("Thªad %d d⁄e. La°ÉÀmít%f\n",
tid
,
a
[
N
-1][N-1]);

41 
	}
}

	@exercises/bug5.c

9 
	~<omp.h
>

10 
	~<°dio.h
>

11 
	~<°dlib.h
>

12 
	#N
 1000000

	)

13 
	#PI
 3.1415926535

	)

14 
	#DELTA
 .01415926535

	)

16 
	$maö
 (
¨gc
, *
¨gv
[])

18 
¡hªads
, 
tid
, 
i
;

19 
a
[
N
], 
b
[N];

20 
omp_lock_t
 
locka
, 
lockb
;

23 
	`omp_öô_lock
(&
locka
);

24 
	`omp_öô_lock
(&
lockb
);

27 #¥agm®
omp
 
∑øŒñ
 
	`sh¨ed
(
a
, 
b
, 
¡hªads
, 
locka
, 
lockb
Ë
	`¥iv©e
(
tid
)

31 
tid
 = 
	`omp_gë_thªad_num
();

32 #¥agm®
omp
 
ma°î


34 
¡hªads
 = 
	`omp_gë_num_thªads
();

35 
	`¥ötf
("Numbî o‡thªad†%d\n", 
¡hªads
);

37 
	`¥ötf
("Thªad %d sèπög...\n", 
tid
);

38 #¥agm®
omp
 
b¨rõr


40 #¥agm®
omp
 
£˘i⁄s
 
nowaô


42 #¥agm®
omp
 
£˘i⁄


44 
	`¥ötf
("Thªad %d inôülizögá[]\n",
tid
);

45 
	`omp_£t_lock
(&
locka
);

46 
i
=0; i<
N
; i++)

47 
a
[
i
] = i * 
DELTA
;

50 
	`omp_£t_lock
(&
lockb
);

51 
	`¥ötf
("Thªad %dáddögá[]Åÿb[]\n",
tid
);

52 
i
=0; i<
N
; i++)

53 
b
[
i
] +
a
[i];

54 
	`omp_un£t_lock
(&
lockb
);

55 
	`omp_un£t_lock
(&
locka
);

58 #¥agm®
omp
 
£˘i⁄


60 
	`¥ötf
("Thªad %d inôülizög b[]\n",
tid
);

61 
	`omp_£t_lock
(&
lockb
);

62 
i
=0; i<
N
; i++)

63 
b
[
i
] = i * 
PI
;

64 
	`omp_£t_lock
(&
locka
);

65 
	`¥ötf
("Thªad %dáddög b[]Åÿa[]\n",
tid
);

66 
i
=0; i<
N
; i++)

67 
a
[
i
] +
b
[i];

68 
	`omp_un£t_lock
(&
locka
);

69 
	`omp_un£t_lock
(&
lockb
);

74 
	}
}

	@exercises/bug5fix.c

11 
	~<omp.h
>

12 
	~<°dio.h
>

13 
	~<°dlib.h
>

14 
	#N
 1000000

	)

15 
	#PI
 3.1415926535

	)

16 
	#DELTA
 .01415926535

	)

18 
	$maö
 (
¨gc
, *
¨gv
[])

20 
¡hªads
, 
tid
, 
i
;

21 
a
[
N
], 
b
[N];

22 
omp_lock_t
 
locka
, 
lockb
;

25 
	`omp_öô_lock
(&
locka
);

26 
	`omp_öô_lock
(&
lockb
);

29 #¥agm®
omp
 
∑øŒñ
 
	`sh¨ed
(
a
, 
b
, 
¡hªads
, 
locka
, 
lockb
Ë
	`¥iv©e
(
tid
)

33 
tid
 = 
	`omp_gë_thªad_num
();

34 #¥agm®
omp
 
ma°î


36 
¡hªads
 = 
	`omp_gë_num_thªads
();

37 
	`¥ötf
("Numbî o‡thªad†%d\n", 
¡hªads
);

39 
	`¥ötf
("Thªad %d sèπög...\n", 
tid
);

40 #¥agm®
omp
 
b¨rõr


42 #¥agm®
omp
 
£˘i⁄s
 
nowaô


44 #¥agm®
omp
 
£˘i⁄


46 
	`¥ötf
("Thªad %d inôülizögá[]\n",
tid
);

47 
	`omp_£t_lock
(&
locka
);

48 
i
=0; i<
N
; i++)

49 
a
[
i
] = i * 
DELTA
;

50 
	`omp_un£t_lock
(&
locka
);

51 
	`omp_£t_lock
(&
lockb
);

52 
	`¥ötf
("Thªad %dáddögá[]Åÿb[]\n",
tid
);

53 
i
=0; i<
N
; i++)

54 
b
[
i
] +
a
[i];

55 
	`omp_un£t_lock
(&
lockb
);

58 #¥agm®
omp
 
£˘i⁄


60 
	`¥ötf
("Thªad %d inôülizög b[]\n",
tid
);

61 
	`omp_£t_lock
(&
lockb
);

62 
i
=0; i<
N
; i++)

63 
b
[
i
] = i * 
PI
;

64 
	`omp_un£t_lock
(&
lockb
);

65 
	`omp_£t_lock
(&
locka
);

66 
	`¥ötf
("Thªad %dáddög b[]Åÿa[]\n",
tid
);

67 
i
=0; i<
N
; i++)

68 
a
[
i
] +
b
[i];

69 
	`omp_un£t_lock
(&
locka
);

74 
	}
}

	@exercises/bug6.c

9 
	~<omp.h
>

10 
	~<°dio.h
>

11 
	~<°dlib.h
>

12 
	#VECLEN
 100

	)

14 
	ga
[
VECLEN
], 
	gb
[VECLEN];

16 
	$dŸ¥od
 ()

18 
i
,
tid
;

19 
sum
;

21 
tid
 = 
	`omp_gë_thªad_num
();

22 #¥agm®
omp
 
	`ªdu˘i⁄
(+:
sum
)

23 
i
=0; i < 
VECLEN
; i++)

25 
sum
 = sum + (
a
[
i
]*
b
[i]);

26 
	`¥ötf
("Åid%d i=%d\n",
tid
,
i
);

28 
	}
}

31 
	$maö
 (
¨gc
, *
¨gv
[]) {

32 
i
;

33 
sum
;

35 
i
=0; i < 
VECLEN
; i++)

36 
a
[
i
] = 
b
[i] = 1.0 * i;

37 
sum
 = 0.0;

39 #¥agm®
omp
 
∑øŒñ
 
	`sh¨ed
(
sum
)

40 
	`dŸ¥od
();

42 
	`¥ötf
("Sum = %f\n",
sum
);

44 
	}
}

	@exercises/hello.c

13 
	~<omp.h
>

14 
	~<°dio.h
>

15 
	~<°dlib.h
>

17 
	$maö
 (
¨gc
, *
¨gv
[])

19 
¡hªads
, 
tid
;

22 #¥agm®
omp
 
∑øŒñ
 
	`¥iv©e
(
¡hªads
, 
tid
)

26 
tid
 = 
	`omp_gë_thªad_num
();

27 
	`¥ötf
("HñlÿW‹ld fromÅhªad = %d\n", 
tid
);

30 i‡(
tid
 == 0)

32 
¡hªads
 = 
	`omp_gë_num_thªads
();

33 
	`¥ötf
("Numbî o‡thªad†%d\n", 
¡hªads
);

38 
	}
}

	@exercises/mm.c

10 
	~<omp.h
>

11 
	~<°dio.h
>

12 
	~<°dlib.h
>

14 
	#NRA
 62

	)

15 
	#NCA
 15

	)

16 
	#NCB
 7

	)

18 
	$maö
 (
¨gc
, *
¨gv
[])

20 
tid
, 
¡hªads
, 
i
, 
j
, 
k
, 
chunk
;

21 
a
[
NRA
][
NCA
],

22 
b
[
NCA
][
NCB
],

23 
c
[
NRA
][
NCB
];

25 
chunk
 = 10;

28 #¥agm®
omp
 
∑øŒñ
 
	`sh¨ed
(
a
,
b
,
c
,
¡hªads
,
chunk
Ë
	`¥iv©e
(
tid
,
i
,
j
,
k
)

30 
tid
 = 
	`omp_gë_thªad_num
();

31 i‡(
tid
 == 0)

33 
¡hªads
 = 
	`omp_gë_num_thªads
();

34 
	`¥ötf
("Sèπög m©rix mu…ùÀÉxam∂êwôh %dÅhªads\n",
¡hªads
);

35 
	`¥ötf
("Initializing matrices...\n");

38 #¥agm®
omp
 
	`scheduÀ
 (, 
chunk
)

39 
i
=0; i<
NRA
; i++)

40 
j
=0; j<
NCA
; j++)

41 
a
[
i
][
j
]= i+j;

42 #¥agm®
omp
 
	`scheduÀ
 (, 
chunk
)

43 
i
=0; i<
NCA
; i++)

44 
j
=0; j<
NCB
; j++)

45 
b
[
i
][
j
]= i*j;

46 #¥agm®
omp
 
	`scheduÀ
 (, 
chunk
)

47 
i
=0; i<
NRA
; i++)

48 
j
=0; j<
NCB
; j++)

49 
c
[
i
][
j
]= 0;

53 
	`¥ötf
("Thªad %d sèπög m©rix mu…ùly...\n",
tid
);

54 #¥agm®
omp
 
	`scheduÀ
 (, 
chunk
)

55 
i
=0; i<
NRA
; i++)

57 
	`¥ötf
("Thªad=%d didÑow=%d\n",
tid
,
i
);

58 
j
=0; j<
NCB
; j++)

59 
k
=0; k<
NCA
; k++)

60 
c
[
i
][
j
] +
a
[i][
k
] * 
b
[k][j];

65 
	`¥ötf
("******************************************************\n");

66 
	`¥ötf
("Result Matrix:\n");

67 
i
=0; i<
NRA
; i++)

69 
j
=0; j<
NCB
; j++)

70 
	`¥ötf
("%6.2‡ ", 
c
[
i
][
j
]);

71 
	`¥ötf
("\n");

73 
	`¥ötf
("******************************************************\n");

74 
	`¥ötf
 ("Done.\n");

76 
	}
}

	@exercises/omp_getEnvInfo.c

10 
	~<omp.h
>

11 
	~<°dio.h
>

12 
	~<°dlib.h
>

14 
	$maö
 (
¨gc
, *
¨gv
[])

16 
¡hªads
, 
tid
, 
¥ocs
, 
maxt
, 
ö∑r
, 
dy«mic
, 
√°ed
;

19 #¥agm®
omp
 
∑øŒñ
 
	`¥iv©e
(
¡hªads
, 
tid
)

23 
tid
 = 
	`omp_gë_thªad_num
();

26 i‡(
tid
 == 0)

28 
	`¥ötf
("Thªad %d gëtögÉnvú⁄míàöfo...\n", 
tid
);

31 
¥ocs
 = 
	`omp_gë_num_¥ocs
();

32 
¡hªads
 = 
	`omp_gë_num_thªads
();

33 
maxt
 = 
	`omp_gë_max_thªads
();

34 
ö∑r
 = 
	`omp_ö_∑øŒñ
();

35 
dy«mic
 = 
	`omp_gë_dy«mic
();

36 
√°ed
 = 
	`omp_gë_√°ed
();

39 
	`¥ötf
("Numbî o‡¥o˚ss‹†%d\n", 
¥ocs
);

40 
	`¥ötf
("Numbî o‡thªad†%d\n", 
¡hªads
);

41 
	`¥ötf
("MaxÅhªad†%d\n", 
maxt
);

42 
	`¥ötf
("I¿∑øŒñ? = %d\n", 
ö∑r
);

43 
	`¥ötf
("Dy«mi¯thªad†íabÀd? = %d\n", 
dy«mic
);

44 
	`¥ötf
("Ne°edÖ¨ÆÀlism suµ‹ãd? = %d\n", 
√°ed
);

50 
	}
}

	@exercises/omp_workshare1.c

11 
	~<omp.h
>

12 
	~<°dio.h
>

13 
	~<°dlib.h
>

14 
	#CHUNKSIZE
 10

	)

15 
	#N
 100

	)

17 
	$maö
 (
¨gc
, *
¨gv
[])

19 
¡hªads
, 
tid
, 
i
, 
chunk
;

20 
a
[
N
], 
b
[N], 
c
[N];

23 
i
=0; i < 
N
; i++)

24 
a
[
i
] = 
b
[i] = i * 1.0;

25 
chunk
 = 
CHUNKSIZE
;

27 #¥agm®
omp
 
∑øŒñ
 
	`sh¨ed
(
a
,
b
,
c
,
¡hªads
,
chunk
Ë
	`¥iv©e
(
i
,
tid
)

29 
tid
 = 
	`omp_gë_thªad_num
();

30 i‡(
tid
 == 0)

32 
¡hªads
 = 
	`omp_gë_num_thªads
();

33 
	`¥ötf
("Numbî o‡thªad†%d\n", 
¡hªads
);

35 
	`¥ötf
("Thªad %d sèπög...\n",
tid
);

37 #¥agm®
omp
 
	`scheduÀ
(,
chunk
)

38 
i
=0; i<
N
; i++)

40 
c
[
i
] = 
a
[i] + 
b
[i];

41 
	`¥ötf
("Thªad %d: c[%d]%f\n",
tid
,
i
,
c
[i]);

46 
	}
}

	@exercises/omp_workshare2.c

10 
	~<omp.h
>

11 
	~<°dio.h
>

12 
	~<°dlib.h
>

13 
	#N
 50

	)

15 
	$maö
 (
¨gc
, *
¨gv
[])

17 
i
, 
¡hªads
, 
tid
;

18 
a
[
N
], 
b
[N], 
c
[N], 
d
[N];

21 
i
=0; i<
N
; i++) {

22 
a
[
i
] = i * 1.5;

23 
b
[
i
] = i + 22.35;

24 
c
[
i
] = 
d
[i] = 0.0;

27 #¥agm®
omp
 
∑øŒñ
 
	`sh¨ed
(
a
,
b
,
c
,
d
,
¡hªads
Ë
	`¥iv©e
(
i
,
tid
)

29 
tid
 = 
	`omp_gë_thªad_num
();

30 i‡(
tid
 == 0)

32 
¡hªads
 = 
	`omp_gë_num_thªads
();

33 
	`¥ötf
("Numbî o‡thªad†%d\n", 
¡hªads
);

35 
	`¥ötf
("Thªad %d sèπög...\n",
tid
);

37 #¥agm®
omp
 
£˘i⁄s
 
nowaô


39 #¥agm®
omp
 
£˘i⁄


41 
	`¥ötf
("Thªad %d doög se˘i⁄ 1\n",
tid
);

42 
i
=0; i<
N
; i++)

44 
c
[
i
] = 
a
[i] + 
b
[i];

45 
	`¥ötf
("Thªad %d: c[%d]%f\n",
tid
,
i
,
c
[i]);

49 #¥agm®
omp
 
£˘i⁄


51 
	`¥ötf
("Thªad %d doög se˘i⁄ 2\n",
tid
);

52 
i
=0; i<
N
; i++)

54 
d
[
i
] = 
a
[i] * 
b
[i];

55 
	`¥ötf
("Thªad %d: d[%d]%f\n",
tid
,
i
,
d
[i]);

61 
	`¥ötf
("Thªad %d d⁄e.\n",
tid
);

65 
	}
}

	@exercises/orphan.c

10 
	~<omp.h
>

11 
	~<°dio.h
>

12 
	~<°dlib.h
>

13 
	#VECLEN
 100

	)

15 
	ga
[
VECLEN
], 
	gb
[VECLEN], 
	gsum
;

17 
	$dŸ¥od
 ()

19 
i
,
tid
;

21 
tid
 = 
	`omp_gë_thªad_num
();

22 #¥agm®
omp
 
	`ªdu˘i⁄
(+:
sum
)

23 
i
=0; i < 
VECLEN
; i++)

25 
sum
 = sum + (
a
[
i
]*
b
[i]);

26 
	`¥ötf
("Åid%d i=%d\n",
tid
,
i
);

28 
	}
}

31 
	$maö
 (
¨gc
, *
¨gv
[]) {

32 
i
;

34 
i
=0; i < 
VECLEN
; i++)

35 
a
[
i
] = 
b
[i] = 1.0 * i;

36 
sum
 = 0.0;

38 #¥agm®
omp
 
∑øŒñ


39 
	`dŸ¥od
();

41 
	`¥ötf
("Sum = %f\n",
sum
);

43 
	}
}

	@exercises/reduction.c

13 
	~<omp.h
>

14 
	~<°dio.h
>

15 
	~<°dlib.h
>

17 
	$maö
 (
¨gc
, *
¨gv
[])

19 
i
, 
n
;

20 
a
[100], 
b
[100], 
sum
;

23 
n
 = 100;

24 
i
=0; i < 
n
; i++)

25 
a
[
i
] = 
b
[i] = i * 1.0;

26 
sum
 = 0.0;

28 #¥agm®
omp
 
∑øŒñ
 
	`ªdu˘i⁄
(+:
sum
)

29 
i
=0; i < 
n
; i++)

30 
sum
 = sum + (
a
[
i
] * 
b
[i]);

32 
	`¥ötf
(" Sum = %f\n",
sum
);

34 
	}
}

	@for-test.c

2 
	~<°dio.h
>

3 
	~<°dlib.h
>

4 
	~<omp.h
>

5 
	~<uni°d.h
>

6 
	~<time.h
>

8 
	~"mytimî.h
"

10 
	#N
 500000

	)

12 
	$w‹k
(* 
t
, * 
a
, * 
b
)

14 
i
=0; i<
N
*1000; i++)

16 
t
[
i
%
N
]=
a
[i%N]/
b
[i%N];

17 
t
[
i
%
N
]Ò[i%N]/
b
[i%N];

18 
t
[
i
%
N
]Ò[i%N]/
b
[i%N];

20 
	}
}

21 
	$w‹k_∑øŒñ
(* 
t
, * 
a
, * 
b
)

23 #¥agm®
omp
 
∑øŒñ
 
	`sh¨ed
(
t
, 
a
, 
b
)

24 
i
=0; i<
N
*1000; i++)

26 
t
[
i
%
N
]=
a
[i%N]/
b
[i%N];

27 
t
[
i
%
N
]Ò[i%N]/
b
[i%N];

28 
t
[
i
%
N
]Ò[i%N]/
b
[i%N];

30 
	}
}

34 
	$maö
(
¨gc
, ** 
¨gv
){

35 * 
t
, * 
t2
;

37 
a
[
N
], 
b
[N];

38 
a1
[
N
], 
b1
[N];

39 
i
=0; i<
N
;i++)

41 
a
[
i
]=i*23.5+1;

42 
b
[
i
]=i*(i+0.4);

43 
a1
[
i
]=i*23.5+1;

44 
b1
[
i
]=i*(i+0.4);

46 
t
 = 
	`mÆloc
(
N
*());

47 
t2
 = 
	`mÆloc
(
N
*());

48 i‡(
t
==
NULL
 || 
t2
==NULLË
	`exô
(
EXIT_FAILURE
);

50 
time•ec
 
°¨t
, 
föish
;

52 
	`gëtime
–(*Ë&
°¨t
);

53 
	`w‹k
(
t
, 
a
, 
b
);

54 
	`gëtime
–(*Ë&
föish
);

55 
	`¥ötf
("Serial : \n");

56 
	`¥öâime
((*Ë&
°¨t
, (*Ë&
föish
);

57 
	`gëtime
–(*Ë&
°¨t
);

58 
	`w‹k_∑øŒñ
(
t2
, 
a1
, 
b1
);

59 
	`gëtime
–(*Ë&
föish
);

60 
	`¥ötf
("Parallel : \n");

61 
	`¥öâime
((*Ë&
°¨t
, (*Ë&
föish
);

62 
	`‰ì
(
t
);

63 
	`‰ì
(
t2
);

65 
	}
}

	@helloMP.c

2 
	~<°dio.h
>

3 
	~<°dlib.h
>

4 
	~<omp.h
>

8 
	$maö
() {

9 
tid
;

10 
sh¨ed
=10;

11 
Âriv
 = 14;

13 #¥agm®
omp
 
∑øŒñ
 
	`fú°¥iv©e
(
Âriv
) \

14 
	`sh¨ed
(
sh¨ed
Ë
	`¥iv©e
(
tid
)

16 
tid
 = 
	`omp_gë_thªad_num
();

17 
	`¥ötf
("hñlÿ‰omÅhªad %d\n", 
tid
);

19 
sh¨ed
++;

20 
Âriv
++;

21 i‡(
tid
 == 0)

22 
	`¥ötf
("Hello World \n");

28 
	}
}

	@mytimer.c

1 
	~"mytimî.h
"

4 
	$gëtime
(* 
ti
)

6 #ifde‡
CLOCK


7 
	`˛ock_gëtime
(
CLOCK_MONOTONIC
, (
time•ec
 *)
ti
);

9 
	}
}

11 
	$¥öâime
(* 
°¨t
, * 
íd
)

13 #ifde‡
CLOCK


14 
time•ec
 *
s°¨t
, *
£nd
;

15 
s°¨t
 = (
time•ec
 *Ë
°¨t
;

16 
£nd
 = (
time•ec
 *Ë
íd
;

17 
ñ≠£d
 = (
£nd
->
tv_£c
 - 
s°¨t
->tv_£c)*1000.0+ (£nd->
tv_n£c
- sstart->tv_nsec)/1000000.0;

19 
	`¥ötf
("Eœp£dÅimê: %êms\n",
ñ≠£d
);

20 
	}
}

	@mytimer.h

1 
	~<°dio.h
>

2 
	~<°dlib.h
>

3 
	~<time.h
>

6 
	#CLOCK


	)

8 
gëtime
(* 
ti
);

9 
¥öâime
(* 
°¨t
, * 
íd
);

	@omp-for.c

1 
	~<°dio.h
>

2 
	~<°dlib.h
>

3 
	~<omp.h
>

4 
	~<uni°d.h
>

6 
	$maö
(
¨gc
, ** 
¨gv
){

7 #¥agm®
omp
 
∑øŒñ
 
‹dîed


8 
i
 =0; i<12; i++){

9 
j
 =0; j<12; j++){

10 
	`¥ötf
("n⁄ ordîed, i=%d, j=%d\n", 
i
, 
j
);

11 
	`¶ìp
(1/((
i
*
j
)+1));

12 #¥agm®
omp
 
‹dîed


13 
	`¥ötf
("‹dîed, i=%d, j=%d\n", 
i
, 
j
);

17 
	}
}

	@reg.c

1 
	~<omp.h
>

2 
	~<uni°d.h
>

3 
	~<°dio.h
>

4 
	~<as£π.h
>

5 
	~<°dboﬁ.h
>

6 
	~<immöåö.h
>

7 
	~<°döt.h
>

11 
	~<sys/time.h
>

13 #ifde‡
__MACH__


14 
	~<mach/˛ock.h
>

15 
	~<mach/mach.h
>

16 
	~<time.h
>

17 
	~<sys/time.h
>

19 
	#CLOCK_REALTIME
 0

	)

20 
	#CLOCK_MONOTONIC
 0

	)

21 
	$˛ock_gëtime
(
˛k_id
, 
time•ec
 *
ts
)

23 
˛ock_£rv_t
 
c˛ock
;

24 
mach_time•ec_t
 
mts
;

25 
	`ho°_gë_˛ock_£rvi˚
(
	`mach_ho°_£lf
(), 
CALENDAR_CLOCK
, &
c˛ock
);

26 
	`˛ock_gë_time
(
c˛ock
, &
mts
);

27 
	`mach_p‹t_dóŒoˇã
(
	`mach_èsk_£lf
(), 
c˛ock
);

28 
ts
->
tv_£c
 = 
mts
.tv_sec;

29 
ts
->
tv_n£c
 = 
mts
.tv_nsec;

31 
	}
}

33 
	~<time.h
>

37 
ölöe
 
	$gë_cy˛es
()

39 
uöt32_t
 
óx
 = 0, 
edx
;

41 
__asm__
 
	`__vﬁ©ûe__
("cpuid;"

43 : "+a" (
óx
), "=d" (
edx
)

47 
__asm__
 
	`__vﬁ©ûe__
("xorl %%eax, %%eax;"

53  (((
uöt64_t
)
edx
 << 32Ë| 
óx
);

54 
	}
}

57 
	#NUM_THREADS
 4

	)

58 
	#MAX_RATIO
 0L

	)

59 
	#HASWELL


	)

60 #ifde‡
PAPI


61 
	~"∑pi_by_£t.h
"

63 
	#pbs_∑pi_öô
(
a
Ë{ 
	`¥ötf
("nŸ usögÖ≠òcou¡îs\n");}

	)

64 
	#pbs_∑pi_˛o£
(Ë{}

	)

65 
	#pbs_∑pi_°¨t_cou¡î
(
a
Ë{}

	)

66 
	#pbs_∑pi_°›_cou¡î
(
a
Ë{}

	)

67 
	#pbs_num_cou¡î_£ts
(Ë1

	)

70 
	#cmö
 1024

	)

71 
	#cmax
 1024*1024*256

	)

72 
	#N
 1024*1024*128

	)

73 
	#thr
 (0.5)

	)

76 
	gA
[
N
],
	gB
[N],
	gC
[N];

78 #ifde‡
HASWELL


79 
	#VLOAD
 
_mm256_lﬂd_pd


	)

80 
	#VSTORE
 
_mm256_°‹e_pd


	)

81 
	#VSETZERO
 
_mm256_£tzîo_pd


	)

82 
	#VSETHALPH
 
	`_mm256_£t_pd
(0.5,0.5,0.5,0.5)

	)

83 
	#VADD
 
_mm256_add_pd


	)

84 
	#VFMADD
 
_mm256_fmadd_pd


	)

85 
	#VTYPE
 
__m256d


	)

86 
	#BYTES_PERWORD
 8

	)

87 
	#BYTES_PERDOUBLE
 
BYTES_PERWORD


	)

88 
	#WORDS_PERVECTOR
 4

	)

89 
	#BYTES_PERVECTOR
 
WORDS_PERVECTOR
*
BYTES_PERWORD


	)

90 
	#VECTORS_PERLINE
 2

	)

91 
	#BYTES_PERLINE
 
VECTORS_PERLINE
*
BYTES_PERVECTOR


	)

92 
	#WORDS_PERLINE
 
WORDS_PERVECTOR
*
VECTORS_PERLINE


	)

94 
Ÿhî
 
¨chôe˘uªs
 
nŸ
 
	gh™dÀd


96 
	#DUMP_VALUES
(Ë{
	`¥ötf
("BYTES_PERWORD:%d, BYTES_PERDOUBLE:%d, WORDS_PERVECTOR:%d, BYTES_PERVECTOR:%d, VECTORS_PERLINE:%d, BYTES_PERLINE:%d", 
BYTES_PERWORD
, 
BYTES_PERDOUBLE
, 
WORDS_PERVECTOR
, 
BYTES_PERVECTOR
, 
VECTORS_PERLINE
, 
BYTES_PERLINE
);}

	)

98 
	gnbvlﬂds
;

99 
	gnbv°‹es
;

100 
	gnbŒﬂds
;

101 
	gnbl°‹es
;

102 
	gnbŒﬂds4°‹es
;

103 
	gnbvö°s
;

104 
	gcb
;

105 
VTYPE
 
	gåash
;

107 
	$öô
(*
a
, 
size
)

109 
i
;

110 
i
=0;i<
size
;i++) {

111 
a
[
i
]=0.5;

113 
	}
}

115 #ifde‡
COPY


116 
	$c›y
(*
ª°ri˘
 
a
, *ª°ri˘ 
b
, 
size
)

118 
i
;

119 
VTYPE
 
tmp
;

121 
size
 /= 2;

122 
	`as£π
(
size
%
WORDS_PERVECTOR
==0);

123 
i
=0;i<
size
; i+=
WORDS_PERVECTOR
) {

124 
tmp
 = 
	`VLOAD
(&
a
[
i
]);

125 
nbvlﬂds
++;

126 
	`VSTORE
(&
b
[
i
],
tmp
);

127 
nbv°‹es
++;

129 
cb
 = 2*()*
size
;

130 
nbŒﬂds
 = 
nbvlﬂds
/
VECTORS_PERLINE
;

131 
nbl°‹es
 = 
nbv°‹es
/
VECTORS_PERLINE
;

132 
nbŒﬂds4°‹es
 = 
nbl°‹es
;

133 
	}
}

136 #ifde‡
TILEDCOPY


137 
	$c›y
(*
ª°ri˘
 
a
, *ª°ri˘ 
b
, 
size
)

139 
i
,
ii
;

140 
VTYPE
 
tmp
;

141 
n
=512;

142 
B
=32;

144 
size
 /= 2;

145 
	`as£π
(
size
%
WORDS_PERVECTOR
==0);

146 
ii
=0;ii<
size
;ii+=
n
*
WORDS_PERVECTOR
)

147 
i
=
ii
;i<ii+
B
*
WORDS_PERVECTOR
;i+=WORDS_PERVECTOR) {

148 
tmp
 = 
	`VLOAD
(&
a
[
i
]);

149 
nbvlﬂds
++;

150 
	`VSTORE
(&
b
[
i
],
tmp
);

151 
nbv°‹es
++;

153 
cb
 = 2*()*
size
;

154 
nbŒﬂds
 = 
nbvlﬂds
/
VECTORS_PERLINE
;

155 
nbl°‹es
 = 
nbv°‹es
/
VECTORS_PERLINE
;

156 
nbŒﬂds4°‹es
 = 
nbl°‹es
;

157 
	}
}

160 #ifde‡
SUM


161 
	$sum
(*
ª°ri˘
 
a
, *ª°ri˘ 
b
, *ª°ri˘ 
c
, 
size
)

163 
i
;

164 
VTYPE
 
tmp1
, 
tmp2
, 
tmp
;

166 
size
 /= 2;

167 
size
 = sizê/ (
WORDS_PERVECTOR
*2);

168 
size
 = sizê* (
WORDS_PERVECTOR
*2);

169 
i
=0;i<
size
; i+=
WORDS_PERVECTOR
) {

170 
tmp1
 = 
	`VLOAD
(&
a
[
i
]);

171 
tmp2
 = 
	`VLOAD
(&
b
[
i
]);

172 
nbvlﬂds
+=2;

173 
tmp
 = 
	`VADD
(
tmp1
, 
tmp2
);

174 
nbvö°s
++;

175 
	`VSTORE
(&
c
[
i
],
tmp
);

176 
nbv°‹es
++;

178 
cb
 = 3*()*
size
;

179 
nbŒﬂds
 = 
nbvlﬂds
/
VECTORS_PERLINE
;

180 
nbl°‹es
 = 
nbv°‹es
/
VECTORS_PERLINE
;

181 
nbŒﬂds4°‹es
 = 
nbl°‹es
;

182 
	}
}

185 #ifde‡
SUMINPLACE


186 
	$sumö∂a˚
(*
a
, 
size
)

188 
i
;

189 
VTYPE
 
tmp1
, 
tmp2
, 
tmp
;

191 
size
 = sizê/ (
WORDS_PERVECTOR
*4);

192 
size
 = sizê* (
WORDS_PERVECTOR
*4);

193 
i
=0;i<
size
; i+=
WORDS_PERVECTOR
*2) {

194 
tmp1
 = 
	`VLOAD
(&
a
[
i
]);

195 
tmp2
 = 
	`VLOAD
(&
a
[
i
+
WORDS_PERVECTOR
]);

196 
nbvlﬂds
+=2;

197 
tmp
 = 
	`VADD
(
tmp1
, 
tmp2
);

198 
nbvö°s
++;

199 
	`VSTORE
(&
a
[
i
],
tmp
);

200 
nbv°‹es
++;

202 
cb
 = ()*
size
;

203 
nbŒﬂds
 = 
nbvlﬂds
/
VECTORS_PERLINE
;

204 
nbl°‹es
 = 
nbv°‹es
;

205 
	}
}

208 #ifde‡
LOAD


209 
	$lﬂd
(*
ª°ri˘
 
a
, 
size
)

211 
i
;

212 
VTYPE
 
ªduc1
, 
ªduc2
, 
ªduc3
, 
ªduc4
, 
ªduc5
, 
ªduc6
, 
ªduc7
, 
ªduc8
, 
ªduc9
, 
ªducA
, 
ªducB
, 
ªducC
, 
ªducD
, 
ªducE
, 
ªducF
, 
ªducG
;

213 
VTYPE
 
c€f
 = 
VSETHALPH
;

215 
ªduc1
 = 
	`VSETZERO
();

216 
ªduc2
 = 
	`VSETZERO
();

217 
ªduc3
 = 
	`VSETZERO
();

218 
ªduc4
 = 
	`VSETZERO
();

219 
ªduc5
 = 
	`VSETZERO
();

220 
ªduc6
 = 
	`VSETZERO
();

221 
ªduc7
 = 
	`VSETZERO
();

222 
ªduc8
 = 
	`VSETZERO
();

223 
ªduc9
 = 
	`VSETZERO
();

224 
ªducA
 = 
	`VSETZERO
();

225 
ªducB
 = 
	`VSETZERO
();

226 
ªducC
 = 
	`VSETZERO
();

227 
ªducD
 = 
	`VSETZERO
();

228 
ªducE
 = 
	`VSETZERO
();

229 
ªducF
 = 
	`VSETZERO
();

230 
ªducG
 = 
	`VSETZERO
();

231 
åash
 = 
	`VSETZERO
();

232 
i
=0;i<
size
; i+=
WORDS_PERVECTOR
*12) {

233 
ªduc1
 = 
	`VFMADD
(
c€f
, 
	`VLOAD
(&
a
[
i
]),Ñeduc1);

234 
ªduc2
 = 
	`VADD
(
	`VLOAD
(&
a
[
i
+
WORDS_PERVECTOR
]),Ñeduc2);

235 
ªduc3
 = 
	`VFMADD
(
c€f
, 
	`VLOAD
(&
a
[
i
+2*
WORDS_PERVECTOR
]),Ñeduc3);

236 
ªduc4
 = 
	`VADD
(
	`VLOAD
(&
a
[
i
+3*
WORDS_PERVECTOR
]),Ñeduc4);

237 
ªduc5
 = 
	`VFMADD
(
c€f
, 
	`VLOAD
(&
a
[
i
+4*
WORDS_PERVECTOR
]),Ñeduc5);

238 
ªduc6
 = 
	`VADD
(
	`VLOAD
(&
a
[
i
+5*
WORDS_PERVECTOR
]),Ñeduc6);

239 
ªduc7
 = 
	`VFMADD
(
c€f
, 
	`VLOAD
(&
a
[
i
+6*
WORDS_PERVECTOR
]),Ñeduc7);

240 
ªduc8
 = 
	`VADD
(
	`VLOAD
(&
a
[
i
+7*
WORDS_PERVECTOR
]),Ñeduc8);

241 
ªduc9
 = 
	`VFMADD
(
c€f
, 
	`VLOAD
(&
a
[
i
+8*
WORDS_PERVECTOR
]),Ñeduc9);

242 
ªducA
 = 
	`VADD
(
	`VLOAD
(&
a
[
i
+9*
WORDS_PERVECTOR
]),ÑeducA);

243 
ªducB
 = 
	`VFMADD
(
c€f
, 
	`VLOAD
(&
a
[
i
+10*
WORDS_PERVECTOR
]),ÑeducB);

244 
ªducC
 = 
	`VADD
(
	`VLOAD
(&
a
[
i
+11*
WORDS_PERVECTOR
]),ÑeducC);

249 
nbvlﬂds
+=12;

250 
nbvö°s
+=12;

252 
åash
=
	`VADD
(VADD—øsh, VADD(
ªduc1
, 
ªduc2
)), VADD(
ªduc3
, 
ªduc4
));

253 
åash
=
	`VADD
(VADD—øsh, VADD(
ªduc5
, 
ªduc6
)), VADD(
ªduc7
, 
ªduc8
));

254 
åash
=
	`VADD
(VADD—øsh, VADD(
ªduc9
, 
ªducA
)), VADD(
ªducB
, 
ªducC
));

255 
åash
=
	`VADD
(VADD—øsh, VADD(
ªducD
, 
ªducE
)), VADD(
ªducF
, 
ªducG
));

256 
cb
 = ()*
size
;

257 
nbŒﬂds
 = 
nbvlﬂds
/
VECTORS_PERLINE
;

258 
	}
}

261 #ifde‡
STORE


262 
	$°‹e
(*
a
, 
size
)

264 
i
;

265 
VTYPE
 
zîo
 = 
	`VSETZERO
();;

267 
	`as£π
(
size
%(
WORDS_PERVECTOR
*2)==0);

268 
i
=0;i<
size
; i+=
WORDS_PERVECTOR
) {

269 
	`VSTORE
(&
a
[
i
], 
zîo
);

270 
nbv°‹es
+=1;

276 
cb
 = ()*
size
;

277 
nbl°‹es
 = 
nbv°‹es
/
VECTORS_PERLINE
;

278 
nbŒﬂds4°‹es
 = 
nbl°‹es
;

279 
	}
}

283 
	$siz
(
n
)

284 { 
‰ac
;

285 
‰ac
 = 
n
/1024;

286 i‡(
‰ac
 =0Ë(
n
);

287 
n
 =Ç/1024;

288 
‰ac
 = 
n
/1024;

289 i‡(
‰ac
 =0Ë(
n
);

290 
n
 =Ç/1024;

291 
‰ac
 = 
n
/1024;

292 i‡(
‰ac
 =0Ë(
n
);

293 
n
 =Ç/1024;

294 
‰ac
 = 
n
/1024;

295 i‡(
‰ac
 =0Ë(
n
);

296 
	`¥ötf
("Error:Ç isÅooÜarge!\n");

297 
	}
}

299 
	$unôs
(
n
)

300 { 
‰ac
;

301 
‰ac
 = 
n
/1024;

302 i‡(
‰ac
 == 0) (' ');

303 
n
 =Ç/1024;

304 
‰ac
 = 
n
/1024;

305 i‡(
‰ac
 == 0) ('K');

306 
n
 =Ç/1024;

307 
‰ac
 = 
n
/1024;

308 i‡(
‰ac
 == 0) ('M');

309 
n
 =Ç/1024;

310 
‰ac
 = 
n
/1024;

311 i‡(
‰ac
 == 0) ('G');

312 
	`¥ötf
("Error:Ç isÅooÜarge!\n");

313 
	}
}

315 
	$¥o˚ss
(){

316 
	`π˛ock
();

318 
˛kbegö
, 
˛kíd
, 
s
;

319 
ticbegö
, 
ti˚nd
;

320 
t
;

322 
i
, 
j
, 
c
, 
nôî
, 
¡hªads
;

328 #ifde‡
COPY


329 #ñi‡
deföed
 
TILEDCOPY


330 #ñi‡
deföed
 
SUM


331 
	`öô
(
B
,
N
);

332 
	`öô
(
C
,
N
);

333 #ñi‡
deföed
 
SUMINPLACE


334 
	`öô
(
A
,
N
);

335 #ñi‡
deföed
 
LOAD


336 
	`öô
(
A
,
N
);

337 
	`öô
(
B
,
N
);

338 #ñi‡
deföed
 
STORE


340 
hum
 
√ed
 
to
 
deföe
 
somëhög


343 
	`omp_£t_num_thªads
(
NUM_THREADS
);

344 
c
=
cmö
; c<
cmax
; c*=2){

345 #¥agm®
omp
 
∑øŒñ
 
	`¥iv©e
(
i
)

347 
åül
, 
myid
, 
¡hrds
;

348 
chunksz
, 
°¨tidx
;

349 
myid
 = 
	`omp_gë_thªad_num
();

350 
¡hrds
 = 
	`omp_gë_num_thªads
();

351 
chunksz
 = 
c
/
¡hrds
;

352 
°¨tidx
 = 
c
*
myid
;

353 i‡(
myid
 == 0) {

354 
nôî
 = 1; 
s
= 0.0;

359 
s
<
thr
) {

361 
nôî
 *=2;

362 
˛kbegö
 = 
	`π˛ock
();

363 
i
=0; i<
nôî
; i++)

365 #ifde‡
COPY


366 
	`c›y
(
B
,
A
,
c
);

367 #ñi‡
deföed
 
TILEDCOPY


368 
	`c›y
(
B
,
A
,
c
);

369 #ñi‡
deföed
 
SUM


370 
	`sum
(
A
,
B
,
C
, 
c
);

371 #ñi‡
deföed
 
SUMINPLACE


372 
	`sumö∂a˚
(
A
, 
c
);

373 #ñi‡
deföed
 
LOAD


374 
	`lﬂd
(
A
, 
c
);

375 #ñi‡
deföed
 
STORE


376 
	`°‹e
(
A
, 
c
);

378 
hum
 
√ed
 
to
 
deföe
 
somëhög


381 
˛kíd
 = 
	`π˛ock
();

382 
s
 = 
˛kíd
-
˛kbegö
;

387 
åül
=0;trial<5;trial++)

389 #¥agm®
omp
 
b¨rõr


392 
˛kbegö
 = 
	`π˛ock
();

393 
ticbegö
 = 
	`gë_cy˛es
();

394 
nbvlﬂds
 = 0;

395 
nbv°‹es
 = 0;

396 
nbvö°s
 = 0;

397 
nbŒﬂds
 = 0;

398 
nbl°‹es
 = 0;

399 
nbŒﬂds4°‹es
 = 0;

401 
i
=0; i<
nôî
; i++)

403 #ifde‡
COPY


404 
	`c›y
(&(
B
[
°¨tidx
]), &(
A
[°¨tidx]), 
chunksz
);

405 #ñi‡
deföed
 
TILEDCOPY


406 
	`c›y
(&(
B
[
°¨tidx
]), &(
A
[°¨tidx]), 
chunksz
);

407 #ñi‡
deföed
 
SUM


408 
	`sum
(&(
B
[
°¨tidx
]), &(
C
[°¨tidx]), &(
A
[°¨tidx]), 
chunksz
);

409 #ñi‡
deföed
 
SUMINPLACE


410 
	`sumö∂a˚
(&(
A
[
°¨tidx
]), 
chunksz
);

411 #ñi‡
deföed
 
LOAD


412 
	`lﬂd
(&(
A
[
°¨tidx
]), 
chunksz
);

413 #ñi‡
deföed
 
STORE


414 
	`°‹e
(&(
A
[
°¨tidx
]), 
chunksz
);

416 
hum
 
√ed
 
to
 
deföe
 
somëhög


419 
ti˚nd
 = 
	`gë_cy˛es
();

420 
˛kíd
 = 
	`π˛ock
();

421 
t
 = 
ti˚nd
-
ticbegö
;

422 
s
 = 
˛kíd
-
˛kbegö
;

424 i‡(
A
[
N
/2]*A[N/2] < -100.0Ë
	`¥ötf
("%f\n",A[N/2]);

427 
	`¥ötf
("Thread[%d] \tTrial %d: Size = %d%c \tGFreq=%.3g \t%.2f GVinsts/s \t%.2f GVloads/s \t%.2f GVstores/s \t%.2f (S)GBytes/s \t%.2f (L+sL)GBytes/s \t%.2f (L)GBytes/s \t%.2f (L+sL+S)GBytes/s\t%.2f (L+S)GBytes/s\n",

428 
myid
, 
åül
, 
	`siz
(
cb
*
¡hrds
), 
	`unôs
(cb*¡hrds), ((Ë
t
)/1e9/
s
, 
nbvö°s
*1e-9/s, 
nbvlﬂds
*1e-9/s, 
nbv°‹es
*1e-9/s, (
nbl°‹es
)*
BYTES_PERLINE
*1e-9/s, (
nbŒﬂds
+
nbŒﬂds4°‹es
)*BYTES_PERLINE*1e-9/s, (nblloads)*BYTES_PERLINE*1e-9/s, (nblloads+nblstores+nblloads4stores)*BYTES_PERLINE*1e-9/s, (nblloads+nblstores)*BYTES_PERLINE*1e-9/s);

432 
	}
}

434 
	$π˛ock
()

436 
timez⁄e
 
Tzp
;

437 
timevÆ
 
Tp
;

438 
°©
;

439 
°©
 = 
	`gëtimeofday
 (&
Tp
, &
Tzp
);

440 i‡(
°©
 !0Ë
	`¥ötf
("ErrorÑeturn from gettimeofday: %d",stat);

441 (
Tp
.
tv_£c
 + Tp.
tv_u£c
*1.0e-6);

442 
	}
}

444 
	$∑pi_¥ofûe
()

446 
cou¡îSëId
, 
numCou¡îSës
 = 
	`pbs_num_cou¡î_£ts
();

448 
i
=0;i<
N
;i++)

450 
A
[
i
] = (i+2.0)/(2.0*
N
);

453 
øtio
 = 0;Ñ©iÿ<
MAX_RATIO
;Ñatio++) {

454 
ôî
;

456 
cou¡îSëId
 = 0; cou¡îSëId < 
numCou¡îSës
; counterSetId++) {

457 
	`pbs_∑pi_°¨t_cou¡î
(
cou¡îSëId
);

459 
ôî
= 0; iter < 1; iter++) {

460 
	`¥o˚ss
();

463 
	`pbs_∑pi_°›_cou¡î
(
cou¡îSëId
);

467 
	}
}

471 
	$maö
()

473 *
«me
="benchmark";

474 
	`pbs_∑pi_öô
(
«me
);

475 
	`∑pi_¥ofûe
();

476 
	`pbs_∑pi_˛o£
();

477 
	}
}

	@serial-test.c

3 
	#_GNU_SOURCE


	)

6 
	~<°dio.h
>

7 
	~<°dlib.h
>

8 
	~<omp.h
>

9 
	~<time.h
>

10 
	~<uni°d.h
>

11 
	~<sys/waô.h
>

13 
	~"mytimî.h
"

15 
	#N
 500

	)

16 
	#K
 10000000

	)

19 
	$maö
–
¨gc
, ** 
¨gv
) {

20 
t1
[
N
];

21 
t2
[
N
];

22 
t3
[
N
];

23 
t4
[
N
];

24 
t5
[
N
];

25 
t6
[
N
];

26 
t7
[
N
];

27 
t8
[
N
];

29 
i
 = 0; i<
N
; i++)

30 
t1
[
i
]= 3*i + 2.0;

32 
i
=0; i <
N
; i++)

33 
t2
[
i
]= i*i + 7.0;

35 
i
 = 0; i<
N
; i++)

36 
t4
[
i
]= 3*i + 2.0;

37 
i
 = 0; i<
N
; i++)

38 
t3
[
i
]= 3*i + 2.0;

39 
i
 = 0; i<
N
; i++)

40 
t5
[
i
]= 3*i + 2.0;

41 
i
 = 0; i<
N
; i++)

42 
t6
[
i
]= -3*i + 2.0;

43 
i
 = 0; i<
N
; i++)

44 
t7
[
i
]= 3*i - 2.0;

45 
i
 = 0; i<
N
; i++)

46 
t8
[
i
]= 3.5*i + 2.0;

47 
t
=0;

48 
q
=0;

49 
time•ec
 
°¨t
, 
föish
;

50 
	`gëtime
((*Ë&
°¨t
);

51 
£˘ime
;

52 
°¨tw
;

53 
°¨tw

	`omp_gë_wtime
();

55 
tid
 = 
	`omp_gë_thªad_num
();

59 
r
 = 
t
;

60 
i
=0;i<
K
;i++)

62 
t1
[
i
%
N
]+= 3.0;

70 
i
=0;i<
K
;i++)

72 
t2
[
i
%
N
]-= 4.0;

78 
i
=0;i<
K
;i++)

80 
t3
[
i
%
N
]-= 4.0;

86 
i
=0;i<
K
;i++)

88 
t4
[
i
%
N
]-= 4.0;

95 
i
=0;i<
K
;i++)

97 
t5
[
i
%
N
]-= 4.0;

103 
i
=0;i<
K
;i++)

105 
t6
[
i
%
N
]-= 4.0;

111 
i
=0;i<
K
;i++)

113 
t7
[
i
%
N
]-= 4.0;

119 
i
=0;i<
K
;i++)

121 
t8
[
i
%
N
]-= 4.0;

127 
£˘ime
 = 
	`omp_gë_wtime
(Ë- 
°¨tw
;

128 
	`gëtime
((*Ë&
föish
);

129 
	`¥öâime
((*Ë&
°¨t
,(*Ë&
föish
);

130 
	`¥ötf
("Eœp£dÅimêglobÆ wôh wtime%ê¬µs\n", 
£˘ime
*1000000.0);

132 
	}
}

	@task-test.c

2 
	#_GNU_SOURCE


	)

5 
	~<°dio.h
>

6 
	~<°dlib.h
>

7 
	~<omp.h
>

8 
	~<time.h
>

9 
	~<uni°d.h
>

10 
	~<sys/waô.h
>

13 
	#N
 500

	)

14 
	#K
 10000000

	)

17 
	$maö
–
¨gc
, ** 
¨gv
) {

18 
t1
[
N
];

19 
t2
[
N
];

20 
t3
[
N
];

21 
t4
[
N
];

22 
t5
[
N
];

23 
t6
[
N
];

24 
t7
[
N
];

25 
t8
[
N
];

27 
i
 = 0; i<
N
; i++)

28 
t1
[
i
]= 3*i + 2.0;

30 
i
=0; i <
N
; i++)

31 
t2
[
i
]= i*i + 7.0;

33 
i
 = 0; i<
N
; i++)

34 
t4
[
i
]= 3*i + 2.0;

35 
i
 = 0; i<
N
; i++)

36 
t3
[
i
]= 3*i + 2.0;

37 
i
 = 0; i<
N
; i++)

38 
t5
[
i
]= 3*i + 2.0;

39 
i
 = 0; i<
N
; i++)

40 
t6
[
i
]= -3*i + 2.0;

41 
i
 = 0; i<
N
; i++)

42 
t7
[
i
]= 3*i - 2.0;

43 
i
 = 0; i<
N
; i++)

44 
t8
[
i
]= 3.5*i + 2.0;

45 
t
=0;

46 
q
=0;

47 
time•ec
 
°¨t
, 
föish
;

48 
	`˛ock_gëtime
(
CLOCK_REALTIME
, &
°¨t
);

49 
£˘ime
;

50 
°¨tw
;

51 
°¨tw

	`omp_gë_wtime
();

52 #¥agm®
omp
 
∑øŒñ
 
	`fú°¥iv©e
(
t1
, 
t2
, 
t3
, 
t4
)

53 #¥agm®
omp
 
sögÀ
 
nowaô


55 
tid
 = 
	`omp_gë_thªad_num
();

57 #¥agm®
omp
 
èsk


60 
r
 = 
t
;

61 
i
=0;i<
K
;i++)

63 
t1
[
i
%
N
]+= 3.0;

69 #¥agm®
omp
 
èsk


72 
i
=0;i<
K
;i++)

74 
t2
[
i
%
N
]-= 4.0;

78 #¥agm®
omp
 
èsk


81 
i
=0;i<
K
;i++)

83 
t3
[
i
%
N
]-= 4.0;

87 #¥agm®
omp
 
èsk


90 
i
=0;i<
K
;i++)

92 
t4
[
i
%
N
]-= 4.0;

97 #¥agm®
omp
 
èsk


100 
i
=0;i<
K
;i++)

102 
t5
[
i
%
N
]-= 4.0;

106 #¥agm®
omp
 
èsk


109 
i
=0;i<
K
;i++)

111 
t6
[
i
%
N
]-= 4.0;

115 #¥agm®
omp
 
èsk


118 
i
=0;i<
K
;i++)

120 
t7
[
i
%
N
]-= 4.0;

124 #¥agm®
omp
 
èsk


127 
i
=0;i<
K
;i++)

129 
t8
[
i
%
N
]-= 4.0;

134 #¥agm®
omp
 
èskwaô


136 
£˘ime
 = 
	`omp_gë_wtime
(Ë- 
°¨tw
;

137 
	`˛ock_gëtime
(
CLOCK_REALTIME
, &
föish
);

138 
ñ≠£d
 = (
föish
.
tv_£c
 - 
°¨t
.tv_£c)*1000.0+(föish.
tv_n£c
 - start.tv_nsec)/1000000.0 ;

139 
	`¥ötf
("Eœp£dÅimêglobÆ%f\n", 
ñ≠£d
);

140 
	`¥ötf
("Eœp£dÅimêglobÆ wôh wtime%ê¬µs\n", 
£˘ime
*1000000.0);

142 
	}
}

	@tasks.c

1 
	#_GNU_SOURCE


	)

4 
	~<°dio.h
>

5 
	~<°dlib.h
>

6 
	~<omp.h
>

7 
	~<time.h
>

8 
	~<sched.h
>

9 
	~<uni°d.h
>

10 
	~<sys/waô.h
>

13 
	#N
 500

	)

15 
	#M
 500

	)

17 
	#OMP_PROC_BIND
 
åue


	)

19 
	$maö
–
¨gc
, ** 
¨gv
) {

20 
t1
[
N
];

21 
t2
[
M
];

23 
i
 = 0; i<
N
; i++)

24 
t1
[
i
]= 3*i + 2.0;

26 
i
=0; i <
M
; i++)

27 
t2
[
i
]= i*i + 7.0;

29 
t
=0;

30 
q
=0;

31 #¥agm®
omp
 
∑øŒñ
 
	`fú°¥iv©e
(
t1
, 
t2
)

32 #¥agm®
omp
 
sögÀ
 
nowaô


34 #¥agm®
omp
 
èsk
 
	`dïíd
(
ö
:
t
)

36 
	`¥ötf
("t=%d, sèπögÅÿ¶ìp\n", 
t
);

37 
	`¶ìp
(4);

38 
	`¥ötf
("done\n");

40 #¥agm®
omp
 
èsk
 
	`dïíd
(
ö
:
t
)

42 
	`¥ötf
("t=%d i¿èsk 2\n", 
t
);

44 #¥agm®
omp
 
èsk
 
	`dïíd
(
out
:
t
)

46 
	`¥ötf
("Thªad %d ha†èkíÅask 1\n", 
	`omp_gë_thªad_num
());

47 
˛ock_t
 
°¨t
=
	`˛ock
(), 
diff
;

49 
t
++;

50 
r
 = 
t
;

51 if(
t1
[2]*t1[2]<0Ë
	`¥ötf
("%d", 
r
);

52 
i
=0;;i++)

54 
t1
[
i
%
N
]+= 3.0;

55 
diff

	`˛ock
(Ë- 
°¨t
;

56 
m£c
 = 
diff
 * 1000 / 
CLOCKS_PER_SEC
;

58 i‡(
m£c
 > 2000)

60 
°¨t
 = 
	`˛ock
();

61 
	`¥ötf
("‰om Thªad %d,Å1[0]%f\n", 
	`omp_gë_thªad_num
(),
t1
[0]);

67 #¥agm®
omp
 
èsk
 
	`dïíd
(
ö
:
t
)

68 
	`¥ötf
("t=%d\n", 
t
);

69 #¥agm®
omp
 
èsk


71 
	`¥ötf
("Thªad %d ha†èkíÅask 2\n", 
	`omp_gë_thªad_num
());

73 
˛ock_t
 
°¨t
=
	`˛ock
(), 
diff
;

74 
i
=0;;i++)

76 
t2
[
i
%
N
]-= 4.0;

77 
diff

	`˛ock
(Ë- 
°¨t
;

78 
m£c
 = 
diff
 * 1000 / 
CLOCKS_PER_SEC
;

79 i‡(
m£c
 > 2000)

81 
°¨t
 = 
	`˛ock
();

82 
	`¥ötf
("‰om Thªad %d,Å2[0]%f\n", 
	`omp_gë_thªad_num
(),
t2
[0]);

90 
	}
}

	@threads.c

3 
	#_GNU_SOURCE


	)

6 
	~<°dio.h
>

7 
	~<°dlib.h
>

8 
	~<omp.h
>

9 
	~<time.h
>

10 
	~<sched.h
>

11 
	~<uni°d.h
>

12 
	~<sys/waô.h
>

13 
	~<±hªad.h
>

16 
	#N
 500

	)

18 
	#M
 500

	)

20 
	#OMP_PROC_BIND
 
åue


	)

21 
	$myH™dÀr
(
sig
)

23 i‡(
sig
 =
SIGUSR1
)

24 
	`¥ötf
("signalÑeceived, continuing\n");

25 
	}
}

27 * 
	$routöe
–* 
t
)

30 * 
t1
 = (*Ë
t
;

31 
˛ock_t
 
°¨t
=
	`˛ock
(), 
diff
;

32 
i
=0;i< 100000000;i++)

34 
t1
[
i
%
N
]+= 3.0;

35 
diff

	`˛ock
(Ë- 
°¨t
;

36 
m£c
 = 
diff
 * 1000 / 
CLOCKS_PER_SEC
;

38 i‡(
m£c
 > 2000)

40 
°¨t
 = 
	`˛ock
();

41 
	`¥ötf
("‰om chûd,Å1[0]%f\n", 
t1
[0]);

44 
	}
}

46 
	$maö
–
¨gc
, ** 
¨gv
)

48 
t1
[
N
];

49 
t2
[
M
];

53 
ªt
;

54 
±hªad_t
 
th1
;

56 i‡–(
ªt
=
	`±hªad_¸óã
(&
th1
, 
NULL
, 
routöe
,(*)
t1
))==-1)

57 
	`≥º‹
("couldÇot createÅhread \n");

60 
˝u_£t_t
 
£t
, 
£ç
, 
gë
;

61 
r
, 
r1
;

62 
	`CPU_ZERO
(&
£t
);

63 
	`CPU_SET
(3, &
£t
);

64 i‡((
r
=
	`±hªad_£èfföôy_≈
(
th1
, (
˝u_£t_t
), &
£t
))==-1)

65 
	`≥º‹
("couldÇot setáffinity");

67 
	`±hªad_joö
(
th1
, 
NULL
);

69 
	}
}

	@/usr/include/assert.h

22 #ifdef 
_ASSERT_H


24 #unde‡
_ASSERT_H


25 #unde‡
as£π


26 #unde‡
__ASSERT_VOID_CAST


28 #ifdef 
__USE_GNU


29 #unde‡
as£π_≥º‹


34 
	#_ASSERT_H
 1

	)

35 
	~<„©uªs.h
>

37 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (2,95)

38 
	#__ASSERT_VOID_CAST
 
°©ic_ˇ°
<>

	)

40 
	#__ASSERT_VOID_CAST
 ()

	)

48 #ifdef 
NDEBUG


50 
	#as£π
(
ex¥
Ë(
	`__ASSERT_VOID_CAST
 (0))

	)

58 #ifdef 
__USE_GNU


59 
	#as£π_≥º‹
(
î∫um
Ë(
	`__ASSERT_VOID_CAST
 (0))

	)

64 #i‚de‡
_ASSERT_H_DECLS


65 
	#_ASSERT_H_DECLS


	)

66 
__BEGIN_DECLS


69 
	$__as£π_Áû
 (c⁄° *
__as£πi⁄
, c⁄° *
__fûe
,

70 
__löe
, c⁄° *
__fun˘i⁄
)

71 
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

74 
	$__as£π_≥º‹_Áû
 (
__î∫um
, c⁄° *
__fûe
,

75 
__löe
, c⁄° *
__fun˘i⁄
)

76 
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

81 
	$__as£π
 (c⁄° *
__as£πi⁄
, c⁄° *
__fûe
, 
__löe
)

82 
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

85 
__END_DECLS


88 
	#as£π
(
ex¥
) \

89 ((
ex¥
) \

90 ? 
	`__ASSERT_VOID_CAST
 (0) \

91 : 
	`__as£π_Áû
 (
	`__STRING
(
ex¥
), 
__FILE__
, 
__LINE__
, 
__ASSERT_FUNCTION
))

	)

93 #ifdef 
__USE_GNU


94 
	#as£π_≥º‹
(
î∫um
) \

95 (!(
î∫um
) \

96 ? 
	`__ASSERT_VOID_CAST
 (0) \

97 : 
	`__as£π_≥º‹_Áû
 ((
î∫um
), 
__FILE__
, 
__LINE__
, 
__ASSERT_FUNCTION
))

	)

105 #i‡
deföed
 
__˝lu•lus
 ? 
	`__GNUC_PREREQ
 (2, 6) : __GNUC_PREREQ (2, 4)

106 
	#__ASSERT_FUNCTION
 
__PRETTY_FUNCTION__


	)

108 #i‡
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L

109 
	#__ASSERT_FUNCTION
 
__func__


	)

111 
	#__ASSERT_FUNCTION
 ((c⁄° *Ë0)

	)

118 #i‡
deföed
 
__USE_ISOC11
 && !deföed 
__˝lu•lus


120 #unde‡
°©ic_as£π


121 
	#°©ic_as£π
 
_Sètic_as£π


	)

	@/usr/include/byteswap.h

18 #i‚de‡
_BYTESWAP_H


19 
	#_BYTESWAP_H
 1

	)

21 
	~<„©uªs.h
>

24 
	~<bôs/byãsw≠.h
>

31 
	#bsw≠_16
(
x
Ë
	`__bsw≠_16
 (x)

	)

34 
	#bsw≠_32
(
x
Ë
	`__bsw≠_32
 (x)

	)

37 
	#bsw≠_64
(
x
Ë
	`__bsw≠_64
 (x)

	)

	@/usr/include/ctype.h

22 #i‚def 
_CTYPE_H


23 
	#_CTYPE_H
 1

	)

25 
	~<„©uªs.h
>

26 
	~<bôs/ty≥s.h
>

28 
	g__BEGIN_DECLS


30 #i‚de‡
_ISbô


39 
	~<ídün.h
>

40 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


41 
	#_ISbô
(
bô
Ë(1 << (bô))

	)

43 
	#_ISbô
(
bô
Ë((bôË< 8 ? ((1 << (bô)Ë<< 8Ë: ((1 << (bô)Ë>> 8))

	)

48 
	m_ISuµî
 = 
_ISbô
 (0),

49 
	m_ISlowî
 = 
_ISbô
 (1),

50 
	m_ISÆpha
 = 
_ISbô
 (2),

51 
	m_ISdigô
 = 
_ISbô
 (3),

52 
	m_ISxdigô
 = 
_ISbô
 (4),

53 
	m_IS•a˚
 = 
_ISbô
 (5),

54 
	m_IS¥öt
 = 
_ISbô
 (6),

55 
	m_ISgøph
 = 
_ISbô
 (7),

56 
	m_ISbœnk
 = 
_ISbô
 (8),

57 
	m_IS˙ål
 = 
_ISbô
 (9),

58 
	m_ISpun˘
 = 
_ISbô
 (10),

59 
	m_ISÆnum
 = 
_ISbô
 (11)

79 c⁄° **
	$__˘y≥_b_loc
 ()

80 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

81 c⁄° 
__öt32_t
 **
	$__˘y≥_tﬁowî_loc
 ()

82 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

83 c⁄° 
__öt32_t
 **
	$__˘y≥_touµî_loc
 ()

84 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

87 #i‚de‡
__˝lu•lus


88 
	#__is˘y≥
(
c
, 
ty≥
) \

89 ((*
	`__˘y≥_b_loc
 ())[(Ë(
c
)] & (Ë
ty≥
)

	)

90 #ñi‡
deföed
 
__USE_EXTERN_INLINES


91 
	#__is˘y≥_f
(
ty≥
) \

92 
__exã∫_ölöe
 \

93 
is
##
	`ty≥
 (
__c
Ë
__THROW
 \

95  (*
	`__˘y≥_b_loc
 ())[(Ë(
__c
)] & (Ë
_IS
##
ty≥
; \

96 
	}

	)
}

99 
	#__ißscii
(
c
Ë(((cË& ~0x7fË=0Ë

	)

100 
	#__tﬂscii
(
c
Ë((cË& 0x7fË

	)

102 
	#__ex˘y≥
(
«me
Ë
	`«me
 (Ë
__THROW


	)

104 
__BEGIN_NAMESPACE_STD


110 
__ex˘y≥
 (
iß um
);

111 
__ex˘y≥
 (
ißÕha
);

112 
__ex˘y≥
 (
is˙ål
);

113 
__ex˘y≥
 (
isdigô
);

114 
__ex˘y≥
 (
i¶owî
);

115 
__ex˘y≥
 (
isgøph
);

116 
__ex˘y≥
 (
i•röt
);

117 
__ex˘y≥
 (
i•un˘
);

118 
__ex˘y≥
 (
is•a˚
);

119 
__ex˘y≥
 (
isuµî
);

120 
__ex˘y≥
 (
isxdigô
);

124 
	$tﬁowî
 (
__c
Ë
__THROW
;

127 
	$touµî
 (
__c
Ë
__THROW
;

129 
__END_NAMESPACE_STD


133 #ifdef 
__USE_ISOC99


134 
__BEGIN_NAMESPACE_C99


136 
	`__ex˘y≥
 (
isbœnk
);

138 
__END_NAMESPACE_C99


141 #ifde‡
__USE_GNU


143 
	$is˘y≥
 (
__c
, 
__mask
Ë
__THROW
;

146 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


150 
	$ißscii
 (
__c
Ë
__THROW
;

154 
	$tﬂscii
 (
__c
Ë
__THROW
;

158 
	`__ex˘y≥
 (
_touµî
);

159 
	`__ex˘y≥
 (
_tﬁowî
);

163 
	#__tobody
(
c
, 
f
, 
a
, 
¨gs
) \

164 (
__exãnsi⁄__
 \

165 ({ 
__ªs
; \

166 i‡( (
c
) > 1) \

168 i‡(
	`__buûtö_c⁄°™t_p
 (
c
)) \

170 
__c
 = (
c
); \

171 
__ªs
 = 
__c
 < -128 || __¯> 255 ? __¯: (
a
)[__c]; \

174 
__ªs
 = 
f
 
¨gs
; \

177 
__ªs
 = (
a
)[(Ë(
c
)]; \

178 
__ªs
; 
	}
}))

	)

180 #i‡!
deföed
 
__NO_CTYPE


181 #ifde‡
__is˘y≥_f


182 
	$__is˘y≥_f
 (
Ænum
)

183 
	$__is˘y≥_f
 (
Æpha
)

184 
	$__is˘y≥_f
 (
˙ål
)

185 
	$__is˘y≥_f
 (
digô
)

186 
	$__is˘y≥_f
 (
lowî
)

187 
	$__is˘y≥_f
 (
gøph
)

188 
	$__is˘y≥_f
 (
¥öt
)

189 
	$__is˘y≥_f
 (
pun˘
)

190 
	$__is˘y≥_f
 (
•a˚
)

191 
	$__is˘y≥_f
 (
uµî
)

192 
	$__is˘y≥_f
 (
xdigô
)

193 #ifde‡
__USE_ISOC99


194 
	$__is˘y≥_f
 (
bœnk
)

196 #ñi‡
deföed
 
__is˘y≥


197 
	#iß um
(
c
Ë
	`__is˘y≥
((c), 
_ISÆnum
)

	)

198 
	#ißÕha
(
c
Ë
	`__is˘y≥
((c), 
_ISÆpha
)

	)

199 
	#is˙ål
(
c
Ë
	`__is˘y≥
((c), 
_IS˙ål
)

	)

200 
	#isdigô
(
c
Ë
	`__is˘y≥
((c), 
_ISdigô
)

	)

201 
	#i¶owî
(
c
Ë
	`__is˘y≥
((c), 
_ISlowî
)

	)

202 
	#isgøph
(
c
Ë
	`__is˘y≥
((c), 
_ISgøph
)

	)

203 
	#i•röt
(
c
Ë
	`__is˘y≥
((c), 
_IS¥öt
)

	)

204 
	#i•un˘
(
c
Ë
	`__is˘y≥
((c), 
_ISpun˘
)

	)

205 
	#is•a˚
(
c
Ë
	`__is˘y≥
((c), 
_IS•a˚
)

	)

206 
	#isuµî
(
c
Ë
	`__is˘y≥
((c), 
_ISuµî
)

	)

207 
	#isxdigô
(
c
Ë
	`__is˘y≥
((c), 
_ISxdigô
)

	)

208 #ifde‡
__USE_ISOC99


209 
	#isbœnk
(
c
Ë
	`__is˘y≥
((c), 
_ISbœnk
)

	)

213 #ifde‡
__USE_EXTERN_INLINES


214 
__exã∫_ölöe
 

215 
	`__NTH
 (
	$tﬁowî
 (
__c
))

217  
__c
 >-128 && __¯< 256 ? (*
	`__˘y≥_tﬁowî_loc
 ())[__c] : __c;

218 
	}
}

220 
__exã∫_ölöe
 

221 
__NTH
 (
	$touµî
 (
__c
))

223  
__c
 >-128 && __¯< 256 ? (*
	`__˘y≥_touµî_loc
 ())[__c] : __c;

224 
	}
}

227 #i‡
__GNUC__
 >2 && 
deföed
 
__OPTIMIZE__
 && !deföed 
__˝lu•lus


228 
	#tﬁowî
(
c
Ë
	`__tobody
 (c, 
tﬁowî
, *
	`__˘y≥_tﬁowî_loc
 (), (c))

	)

229 
	#touµî
(
c
Ë
	`__tobody
 (c, 
touµî
, *
	`__˘y≥_touµî_loc
 (), (c))

	)

232 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


233 
	#ißscii
(
c
Ë
	`__ißscii
 (c)

	)

234 
	#tﬂscii
(
c
Ë
	`__tﬂscii
 (c)

	)

236 
	#_tﬁowî
(
c
Ë((Ë(*
	`__˘y≥_tﬁowî_loc
 ())[(Ë(c)])

	)

237 
	#_touµî
(
c
Ë((Ë(*
	`__˘y≥_touµî_loc
 ())[(Ë(c)])

	)

243 #ifde‡
__USE_XOPEN2K8


257 
	~<xloˇÀ.h
>

261 
	#__is˘y≥_l
(
c
, 
ty≥
, 
loˇÀ
) \

262 ((
loˇÀ
)->
__˘y≥_b
[(Ë(
c
)] & (Ë
ty≥
)

	)

264 
	#__ex˘y≥_l
(
«me
) \

265 
	`«me
 (, 
__loˇÀ_t
Ë
__THROW


	)

271 
__ex˘y≥_l
 (
iß um_l
);

272 
__ex˘y≥_l
 (
ißÕha_l
);

273 
__ex˘y≥_l
 (
is˙ål_l
);

274 
__ex˘y≥_l
 (
isdigô_l
);

275 
__ex˘y≥_l
 (
i¶owî_l
);

276 
__ex˘y≥_l
 (
isgøph_l
);

277 
__ex˘y≥_l
 (
i•röt_l
);

278 
__ex˘y≥_l
 (
i•un˘_l
);

279 
__ex˘y≥_l
 (
is•a˚_l
);

280 
__ex˘y≥_l
 (
isuµî_l
);

281 
__ex˘y≥_l
 (
isxdigô_l
);

283 
__ex˘y≥_l
 (
isbœnk_l
);

287 
	$__tﬁowî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

288 
	$tﬁowî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

291 
	$__touµî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

292 
	$touµî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

294 #i‡
__GNUC__
 >2 && 
deföed
 
__OPTIMIZE__
 && !deföed 
__˝lu•lus


295 
	#__tﬁowî_l
(
c
, 
loˇÀ
) \

296 
	`__tobody
 (
c
, 
__tﬁowî_l
, (
loˇÀ
)->
__˘y≥_tﬁowî
, (c,ÜoˇÀ))

	)

297 
	#__touµî_l
(
c
, 
loˇÀ
) \

298 
	`__tobody
 (
c
, 
__touµî_l
, (
loˇÀ
)->
__˘y≥_touµî
, (c,ÜoˇÀ))

	)

299 
	#tﬁowî_l
(
c
, 
loˇÀ
Ë
	`__tﬁowî_l
 ((c), (loˇÀ))

	)

300 
	#touµî_l
(
c
, 
loˇÀ
Ë
	`__touµî_l
 ((c), (loˇÀ))

	)

304 #i‚de‡
__NO_CTYPE


305 
	#__iß um_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISÆnum
, (l))

	)

306 
	#__ißÕha_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISÆpha
, (l))

	)

307 
	#__is˙ål_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS˙ål
, (l))

	)

308 
	#__isdigô_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISdigô
, (l))

	)

309 
	#__i¶owî_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISlowî
, (l))

	)

310 
	#__isgøph_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISgøph
, (l))

	)

311 
	#__i•röt_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS¥öt
, (l))

	)

312 
	#__i•un˘_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISpun˘
, (l))

	)

313 
	#__is•a˚_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS•a˚
, (l))

	)

314 
	#__isuµî_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISuµî
, (l))

	)

315 
	#__isxdigô_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISxdigô
, (l))

	)

317 
	#__isbœnk_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISbœnk
, (l))

	)

319 #ifde‡
__USE_MISC


320 
	#__ißscii_l
(
c
,
l
Ë(÷), 
	`__ißscii
 (c))

	)

321 
	#__tﬂscii_l
(
c
,
l
Ë(÷), 
	`__tﬂscii
 (c))

	)

324 
	#iß um_l
(
c
,
l
Ë
	`__iß um_l
 ((c), (l))

	)

325 
	#ißÕha_l
(
c
,
l
Ë
	`__ißÕha_l
 ((c), (l))

	)

326 
	#is˙ål_l
(
c
,
l
Ë
	`__is˙ål_l
 ((c), (l))

	)

327 
	#isdigô_l
(
c
,
l
Ë
	`__isdigô_l
 ((c), (l))

	)

328 
	#i¶owî_l
(
c
,
l
Ë
	`__i¶owî_l
 ((c), (l))

	)

329 
	#isgøph_l
(
c
,
l
Ë
	`__isgøph_l
 ((c), (l))

	)

330 
	#i•röt_l
(
c
,
l
Ë
	`__i•röt_l
 ((c), (l))

	)

331 
	#i•un˘_l
(
c
,
l
Ë
	`__i•un˘_l
 ((c), (l))

	)

332 
	#is•a˚_l
(
c
,
l
Ë
	`__is•a˚_l
 ((c), (l))

	)

333 
	#isuµî_l
(
c
,
l
Ë
	`__isuµî_l
 ((c), (l))

	)

334 
	#isxdigô_l
(
c
,
l
Ë
	`__isxdigô_l
 ((c), (l))

	)

336 
	#isbœnk_l
(
c
,
l
Ë
	`__isbœnk_l
 ((c), (l))

	)

338 #ifde‡
__USE_MISC


339 
	#ißscii_l
(
c
,
l
Ë
	`__ißscii_l
 ((c), (l))

	)

340 
	#tﬂscii_l
(
c
,
l
Ë
	`__tﬂscii_l
 ((c), (l))

	)

347 
__END_DECLS


	@/usr/include/endian.h

18 #i‚def 
_ENDIAN_H


19 
	#_ENDIAN_H
 1

	)

21 
	~<„©uªs.h
>

31 
	#__LITTLE_ENDIAN
 1234

	)

32 
	#__BIG_ENDIAN
 4321

	)

33 
	#__PDP_ENDIAN
 3412

	)

36 
	~<bôs/ídün.h
>

40 #i‚de‡
__FLOAT_WORD_ORDER


41 
	#__FLOAT_WORD_ORDER
 
__BYTE_ORDER


	)

44 #ifdef 
__USE_MISC


45 
	#LITTLE_ENDIAN
 
__LITTLE_ENDIAN


	)

46 
	#BIG_ENDIAN
 
__BIG_ENDIAN


	)

47 
	#PDP_ENDIAN
 
__PDP_ENDIAN


	)

48 
	#BYTE_ORDER
 
__BYTE_ORDER


	)

51 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


52 
	#__LONG_LONG_PAIR
(
HI
, 
LO
ËLO, 
	)
HI

53 #ñi‡
__BYTE_ORDER
 =
__BIG_ENDIAN


54 
	#__LONG_LONG_PAIR
(
HI
, 
LO
ËHI, 
	)
LO

58 #i‡
deföed
 
__USE_MISC
 && !deföed 
__ASSEMBLER__


60 
	~<bôs/byãsw≠.h
>

62 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


63 
	#htobe16
(
x
Ë
	`__bsw≠_16
 (x)

	)

64 
	#htﬁe16
(
x
Ë(x)

	)

65 
	#be16toh
(
x
Ë
	`__bsw≠_16
 (x)

	)

66 
	#À16toh
(
x
Ë(x)

	)

68 
	#htobe32
(
x
Ë
	`__bsw≠_32
 (x)

	)

69 
	#htﬁe32
(
x
Ë(x)

	)

70 
	#be32toh
(
x
Ë
	`__bsw≠_32
 (x)

	)

71 
	#À32toh
(
x
Ë(x)

	)

73 
	#htobe64
(
x
Ë
	`__bsw≠_64
 (x)

	)

74 
	#htﬁe64
(
x
Ë(x)

	)

75 
	#be64toh
(
x
Ë
	`__bsw≠_64
 (x)

	)

76 
	#À64toh
(
x
Ë(x)

	)

79 
	#htobe16
(
x
Ë(x)

	)

80 
	#htﬁe16
(
x
Ë
	`__bsw≠_16
 (x)

	)

81 
	#be16toh
(
x
Ë(x)

	)

82 
	#À16toh
(
x
Ë
	`__bsw≠_16
 (x)

	)

84 
	#htobe32
(
x
Ë(x)

	)

85 
	#htﬁe32
(
x
Ë
	`__bsw≠_32
 (x)

	)

86 
	#be32toh
(
x
Ë(x)

	)

87 
	#À32toh
(
x
Ë
	`__bsw≠_32
 (x)

	)

89 
	#htobe64
(
x
Ë(x)

	)

90 
	#htﬁe64
(
x
Ë
	`__bsw≠_64
 (x)

	)

91 
	#be64toh
(
x
Ë(x)

	)

92 
	#À64toh
(
x
Ë
	`__bsw≠_64
 (x)

	)

	@/usr/include/limits.h

22 #i‚de‡
_LIBC_LIMITS_H_


23 
	#_LIBC_LIMITS_H_
 1

	)

25 
	~<„©uªs.h
>

31 
	#MB_LEN_MAX
 16

	)

36 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2

41 #i‚de‡
_LIMITS_H


42 
	#_LIMITS_H
 1

	)

44 
	~<bôs/w‹dsize.h
>

53 
	#CHAR_BIT
 8

	)

56 
	#SCHAR_MIN
 (-128)

	)

57 
	#SCHAR_MAX
 127

	)

60 
	#UCHAR_MAX
 255

	)

63 #ifde‡
__CHAR_UNSIGNED__


64 
	#CHAR_MIN
 0

	)

65 
	#CHAR_MAX
 
UCHAR_MAX


	)

67 
	#CHAR_MIN
 
SCHAR_MIN


	)

68 
	#CHAR_MAX
 
SCHAR_MAX


	)

72 
	#SHRT_MIN
 (-32768)

	)

73 
	#SHRT_MAX
 32767

	)

76 
	#USHRT_MAX
 65535

	)

79 
	#INT_MIN
 (-
INT_MAX
 - 1)

	)

80 
	#INT_MAX
 2147483647

	)

83 
	#UINT_MAX
 4294967295U

	)

86 #i‡
__WORDSIZE
 == 64

87 
	#LONG_MAX
 9223372036854775807L

	)

89 
	#LONG_MAX
 2147483647L

	)

91 
	#LONG_MIN
 (-
LONG_MAX
 - 1L)

	)

94 #i‡
__WORDSIZE
 == 64

95 
	#ULONG_MAX
 18446744073709551615UL

	)

97 
	#ULONG_MAX
 4294967295UL

	)

100 #ifde‡
__USE_ISOC99


103 
	#LLONG_MAX
 9223372036854775807LL

	)

104 
	#LLONG_MIN
 (-
LLONG_MAX
 - 1LL)

	)

107 
	#ULLONG_MAX
 18446744073709551615ULL

	)

121 #i‡
deföed
 
__GNUC__
 && !deföed 
_GCC_LIMITS_H_


123 #ö˛ude_√xà<
limôs
.
h
>

129 #i‡
deföed
 
__USE_ISOC99
 && deföed 
__GNUC__


130 #i‚de‡
LLONG_MIN


131 
	#LLONG_MIN
 (-
LLONG_MAX
-1)

	)

133 #i‚de‡
LLONG_MAX


134 
	#LLONG_MAX
 
__LONG_LONG_MAX__


	)

136 #i‚de‡
ULLONG_MAX


137 
	#ULLONG_MAX
 (
LLONG_MAX
 * 2ULL + 1)

	)

141 #ifdef 
__USE_POSIX


143 
	~<bôs/posix1_lim.h
>

146 #ifdef 
__USE_POSIX2


147 
	~<bôs/posix2_lim.h
>

150 #ifdef 
__USE_XOPEN


151 
	~<bôs/x›í_lim.h
>

	@/usr/include/locale.h

22 #i‚def 
_LOCALE_H


23 
	#_LOCALE_H
 1

	)

25 
	~<„©uªs.h
>

27 
	#__√ed_NULL


	)

28 
	~<°ddef.h
>

29 
	~<bôs/loˇÀ.h
>

31 
	g__BEGIN_DECLS


35 
	#LC_CTYPE
 
__LC_CTYPE


	)

36 
	#LC_NUMERIC
 
__LC_NUMERIC


	)

37 
	#LC_TIME
 
__LC_TIME


	)

38 
	#LC_COLLATE
 
__LC_COLLATE


	)

39 
	#LC_MONETARY
 
__LC_MONETARY


	)

40 
	#LC_MESSAGES
 
__LC_MESSAGES


	)

41 
	#LC_ALL
 
__LC_ALL


	)

42 
	#LC_PAPER
 
__LC_PAPER


	)

43 
	#LC_NAME
 
__LC_NAME


	)

44 
	#LC_ADDRESS
 
__LC_ADDRESS


	)

45 
	#LC_TELEPHONE
 
__LC_TELEPHONE


	)

46 
	#LC_MEASUREMENT
 
__LC_MEASUREMENT


	)

47 
	#LC_IDENTIFICATION
 
__LC_IDENTIFICATION


	)

50 
__BEGIN_NAMESPACE_STD


53 
	slc⁄v


57 *
	mdecimÆ_poöt
;

58 *
	mthoußnds_£p
;

64 *
	mgroupög
;

70 *
	möt_cuº_symbﬁ
;

71 *
	mcuºícy_symbﬁ
;

72 *
	mm⁄_decimÆ_poöt
;

73 *
	mm⁄_thoußnds_£p
;

74 *
	mm⁄_groupög
;

75 *
	mposôive_sign
;

76 *
	m√g©ive_sign
;

77 
	möt_‰ac_digôs
;

78 
	m‰ac_digôs
;

80 
	mp_cs_¥e˚des
;

82 
	mp_£p_by_•a˚
;

84 
	mn_cs_¥e˚des
;

86 
	mn_£p_by_•a˚
;

93 
	mp_sign_po¢
;

94 
	mn_sign_po¢
;

95 #ifde‡
__USE_ISOC99


97 
	möt_p_cs_¥e˚des
;

99 
	möt_p_£p_by_•a˚
;

101 
	möt_n_cs_¥e˚des
;

103 
	möt_n_£p_by_•a˚
;

110 
	möt_p_sign_po¢
;

111 
	möt_n_sign_po¢
;

113 
	m__öt_p_cs_¥e˚des
;

114 
	m__öt_p_£p_by_•a˚
;

115 
	m__öt_n_cs_¥e˚des
;

116 
	m__öt_n_£p_by_•a˚
;

117 
	m__öt_p_sign_po¢
;

118 
	m__öt_n_sign_po¢
;

124 *
	$£éoˇÀ
 (
__ˇãg‹y
, c⁄° *
__loˇÀ
Ë
__THROW
;

127 
lc⁄v
 *
	$loˇÀc⁄v
 (Ë
__THROW
;

129 
__END_NAMESPACE_STD


132 #ifdef 
__USE_XOPEN2K8


145 
	~<xloˇÀ.h
>

151 
__loˇÀ_t
 
	$√wloˇÀ
 (
__ˇãg‹y_mask
, c⁄° *
__loˇÀ
,

152 
__loˇÀ_t
 
__ba£
Ë
__THROW
;

158 
	#LC_CTYPE_MASK
 (1 << 
__LC_CTYPE
)

	)

159 
	#LC_NUMERIC_MASK
 (1 << 
__LC_NUMERIC
)

	)

160 
	#LC_TIME_MASK
 (1 << 
__LC_TIME
)

	)

161 
	#LC_COLLATE_MASK
 (1 << 
__LC_COLLATE
)

	)

162 
	#LC_MONETARY_MASK
 (1 << 
__LC_MONETARY
)

	)

163 
	#LC_MESSAGES_MASK
 (1 << 
__LC_MESSAGES
)

	)

164 
	#LC_PAPER_MASK
 (1 << 
__LC_PAPER
)

	)

165 
	#LC_NAME_MASK
 (1 << 
__LC_NAME
)

	)

166 
	#LC_ADDRESS_MASK
 (1 << 
__LC_ADDRESS
)

	)

167 
	#LC_TELEPHONE_MASK
 (1 << 
__LC_TELEPHONE
)

	)

168 
	#LC_MEASUREMENT_MASK
 (1 << 
__LC_MEASUREMENT
)

	)

169 
	#LC_IDENTIFICATION_MASK
 (1 << 
__LC_IDENTIFICATION
)

	)

170 
	#LC_ALL_MASK
 (
LC_CTYPE_MASK
 \

171 | 
LC_NUMERIC_MASK
 \

172 | 
LC_TIME_MASK
 \

173 | 
LC_COLLATE_MASK
 \

174 | 
LC_MONETARY_MASK
 \

175 | 
LC_MESSAGES_MASK
 \

176 | 
LC_PAPER_MASK
 \

177 | 
LC_NAME_MASK
 \

178 | 
LC_ADDRESS_MASK
 \

179 | 
LC_TELEPHONE_MASK
 \

180 | 
LC_MEASUREMENT_MASK
 \

181 | 
LC_IDENTIFICATION_MASK
 \

182 )

	)

186 
__loˇÀ_t
 
	$du∂oˇÀ
 (
__loˇÀ_t
 
__d©a£t
Ë
__THROW
;

190 
	$‰ìloˇÀ
 (
__loˇÀ_t
 
__d©a£t
Ë
__THROW
;

197 
__loˇÀ_t
 
	$u£loˇÀ
 (
__loˇÀ_t
 
__d©a£t
Ë
__THROW
;

201 
	#LC_GLOBAL_LOCALE
 ((
__loˇÀ_t
Ë-1L)

	)

205 
__END_DECLS


	@/usr/include/malloc.h

19 #i‚de‡
_MALLOC_H


20 
	#_MALLOC_H
 1

	)

22 
	~<„©uªs.h
>

23 
	~<°ddef.h
>

24 
	~<°dio.h
>

26 #ifde‡
_LIBC


27 
	#__MALLOC_HOOK_VOLATILE


	)

28 
	#__MALLOC_DEPRECATED


	)

30 
	#__MALLOC_HOOK_VOLATILE
 vﬁ©ûe

	)

31 
	#__MALLOC_DEPRECATED
 
__©åibuã_dïªˇãd__


	)

35 
__BEGIN_DECLS


38 *
	$mÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

41 *
	$ˇŒoc
 (
size_t
 
__nmemb
, size_à
__size
)

42 
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

49 *
	$ªÆloc
 (*
__±r
, 
size_t
 
__size
)

50 
__THROW
 
__©åibuã_w¨n_unu£d_ªsu…__
;

53 
	$‰ì
 (*
__±r
Ë
__THROW
;

56 
	$c‰ì
 (*
__±r
Ë
__THROW
;

59 *
	$memÆign
 (
size_t
 
__Æignmít
, size_à
__size
)

60 
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

63 *
	$vÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

67 *
	$pvÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

71 *(*
__m‹ec‹e
Ë(
±rdiff_t
 
__size
);

74 *
	$__deÁu…_m‹ec‹e
 (
±rdiff_t
 
__size
)

75 
__THROW
 
__©åibuã_mÆloc__
;

79 
	smÆlöfo


81 
¨ía
;

82 
‹dblks
;

83 
smblks
;

84 
hblks
;

85 
hblkhd
;

86 
usmblks
;

87 
fsmblks
;

88 
u‹dblks
;

89 
f‹dblks
;

90 
kìpco°
;

94 
mÆlöfo
 
	$mÆlöfo
 (Ë
__THROW
;

97 #i‚de‡
M_MXFAST


98 
	#M_MXFAST
 1

	)

100 #i‚de‡
M_NLBLKS


101 
	#M_NLBLKS
 2

	)

103 #i‚de‡
M_GRAIN


104 
	#M_GRAIN
 3

	)

106 #i‚de‡
M_KEEP


107 
	#M_KEEP
 4

	)

111 
	#M_TRIM_THRESHOLD
 -1

	)

112 
	#M_TOP_PAD
 -2

	)

113 
	#M_MMAP_THRESHOLD
 -3

	)

114 
	#M_MMAP_MAX
 -4

	)

115 
	#M_CHECK_ACTION
 -5

	)

116 
	#M_PERTURB
 -6

	)

117 
	#M_ARENA_TEST
 -7

	)

118 
	#M_ARENA_MAX
 -8

	)

121 
	$mÆl›t
 (
__∑øm
, 
__vÆ
Ë
__THROW
;

125 
	$mÆloc_åim
 (
size_t
 
__∑d
Ë
__THROW
;

129 
size_t
 
	$mÆloc_ußbÀ_size
 (*
__±r
Ë
__THROW
;

132 
	$mÆloc_°©s
 (Ë
__THROW
;

135 
	$mÆloc_öfo
 (
__›ti⁄s
, 
FILE
 *
__Â
Ë
__THROW
;

138 *
	$mÆloc_gë_°©e
 (Ë
__THROW
;

142 
	$mÆloc_£t_°©e
 (*
__±r
Ë
__THROW
;

147 (*
__MALLOC_HOOK_VOLATILE
 
__mÆloc_öôülize_hook
) ()

148 
__MALLOC_DEPRECATED
;

150 (*
__MALLOC_HOOK_VOLATILE
 
__‰ì_hook
Ë(*
__±r
,

152 
__MALLOC_DEPRECATED
;

153 *(*
__MALLOC_HOOK_VOLATILE
 
__mÆloc_hook
)(
size_t
 
__size
,

155 
__MALLOC_DEPRECATED
;

156 *(*
__MALLOC_HOOK_VOLATILE
 
__ªÆloc_hook
)(*
__±r
,

157 
size_t
 
__size
,

159 
__MALLOC_DEPRECATED
;

160 *(*
__MALLOC_HOOK_VOLATILE
 
__memÆign_hook
)(
size_t
 
__Æignmít
,

161 
size_t
 
__size
,

163 
__MALLOC_DEPRECATED
;

164 (*
__MALLOC_HOOK_VOLATILE
 
__a·î_m‹ec‹e_hook
) ();

167 
	$__mÆloc_check_öô
 (Ë
__THROW
 
__MALLOC_DEPRECATED
;

170 
__END_DECLS


	@/usr/include/math.h

23 #i‚def 
_MATH_H


24 
	#_MATH_H
 1

	)

26 
	~<„©uªs.h
>

28 
	g__BEGIN_DECLS


32 
	~<bôs/huge_vÆ.h
>

33 #ifde‡
__USE_ISOC99


34 
	~<bôs/huge_vÆf.h
>

35 
	~<bôs/huge_vÆl.h
>

38 
	~<bôs/öf.h
>

41 
	~<bôs/«n.h
>

45 
	~<bôs/m©hdef.h
>

52 
	#__MATHCALL
(
fun˘i⁄
,
suffix
, 
¨gs
) \

53 
	`__MATHDECL
 (
_MdoubÀ_
,
fun˘i⁄
,
suffix
, 
¨gs
)

	)

54 
	#__MATHDECL
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
) \

55 
	`__MATHDECL_1
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
); \

56 
	`__MATHDECL_1
(
ty≥
, 
	`__CONCAT
(
__
,
fun˘i⁄
),
suffix
, 
¨gs
)

	)

57 
	#__MATHCALLX
(
fun˘i⁄
,
suffix
, 
¨gs
, 
©åib
) \

58 
	`__MATHDECLX
 (
_MdoubÀ_
,
fun˘i⁄
,
suffix
, 
¨gs
, 
©åib
)

	)

59 
	#__MATHDECLX
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
, 
©åib
) \

60 
	`__MATHDECL_1
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
Ë
	`__©åibuã__
 (
©åib
); \

61 
	`__MATHDECL_1
(
ty≥
, 
	`__CONCAT
(
__
,
fun˘i⁄
),
suffix
, 
¨gs
Ë
	`__©åibuã__
 (
©åib
)

	)

62 
	#__MATHDECL_1
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
) \

63 
ty≥
 
	`__MATH_PRECNAME
(
fun˘i⁄
,
suffix
Ë
¨gs
 
__THROW


	)

65 
	#_MdoubÀ_
 

	)

66 
	#__MATH_PRECNAME
(
«me
,
r
Ë
	`__CONCAT
“ame,r)

	)

67 
	#_MdoubÀ_BEGIN_NAMESPACE
 
__BEGIN_NAMESPACE_STD


	)

68 
	#_MdoubÀ_END_NAMESPACE
 
__END_NAMESPACE_STD


	)

69 
	~<bôs/m©hˇŒs.h
>

70 #unde‡
_MdoubÀ_


71 #unde‡
_MdoubÀ_BEGIN_NAMESPACE


72 #unde‡
_MdoubÀ_END_NAMESPACE


73 #unde‡
__MATH_PRECNAME


75 #ifde‡
__USE_ISOC99


81 #i‚de‡
_MÊﬂt_


82 
	#_MÊﬂt_
 

	)

84 
	#_MdoubÀ_
 
_MÊﬂt_


	)

85 
	#__MATH_PRECNAME
(
«me
,
r
Ë«me##
f
##
	)
r

86 
	#_MdoubÀ_BEGIN_NAMESPACE
 
__BEGIN_NAMESPACE_C99


	)

87 
	#_MdoubÀ_END_NAMESPACE
 
__END_NAMESPACE_C99


	)

88 
	~<bôs/m©hˇŒs.h
>

89 #unde‡
_MdoubÀ_


90 #unde‡
_MdoubÀ_BEGIN_NAMESPACE


91 #unde‡
_MdoubÀ_END_NAMESPACE


92 #unde‡
__MATH_PRECNAME


94 #i‡!(
deföed
 
__NO_LONG_DOUBLE_MATH
 && deföed 
_LIBC
) \

95 || 
deföed
 
__LDBL_COMPAT
 \

96 || 
deföed
 
_LIBC_TEST


97 #ifde‡
__LDBL_COMPAT


99 #ifde‡
__USE_ISOC99


100 
	$__∆dbl_√xâow¨df
 (
__x
, 
__y
)

101 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

102 #ifde‡
__REDIRECT_NTH


103 
	`__REDIRECT_NTH
 (
√xâow¨df
, (
__x
, 
__y
),

104 
__∆dbl_√xâow¨df
)

105 
	`__©åibuã__
 ((
__c⁄°__
));

106 
	`__REDIRECT_NTH
 (
√xâow¨d
, (
__x
, 
__y
),

107 
√xè·î
Ë
	`__©åibuã__
 ((
__c⁄°__
));

108 
	`__REDIRECT_NTH
 (
√xâow¨dl
,

109 (
__x
, 
__y
),

110 
√xè·î
Ë
	`__©åibuã__
 ((
__c⁄°__
));

114 #unde‡
__MATHDECL_1


115 
	#__MATHDECL_2
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
, 
Æüs
) \

116 
ty≥
 
	`__REDIRECT_NTH
(
	`__MATH_PRECNAME
(
fun˘i⁄
,
suffix
), \

117 
¨gs
, 
Æüs
)

	)

118 
	#__MATHDECL_1
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
) \

119 
	`__MATHDECL_2
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
, 
	`__CONCAT
(fun˘i⁄,suffix))

	)

125 #i‚de‡
_Ml⁄g_doubÀ_


126 
	#_Ml⁄g_doubÀ_
 

	)

128 
	#_MdoubÀ_
 
_Ml⁄g_doubÀ_


	)

129 
	#__MATH_PRECNAME
(
«me
,
r
Ë«me##
l
##
	)
r

130 
	#_MdoubÀ_BEGIN_NAMESPACE
 
__BEGIN_NAMESPACE_C99


	)

131 
	#_MdoubÀ_END_NAMESPACE
 
__END_NAMESPACE_C99


	)

132 
	#__MATH_DECLARE_LDOUBLE
 1

	)

133 
	~<bôs/m©hˇŒs.h
>

134 #unde‡
_MdoubÀ_


135 #unde‡
_MdoubÀ_BEGIN_NAMESPACE


136 #unde‡
_MdoubÀ_END_NAMESPACE


137 #unde‡
__MATH_PRECNAME


142 #unde‡
__MATHDECL_1


143 #unde‡
__MATHDECL


144 #unde‡
__MATHCALL


147 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


149 
signgam
;

154 #ifde‡
__USE_ISOC99


192 
FP_NAN
 =

193 
	#FP_NAN
 0

	)

194 
FP_NAN
,

195 
FP_INFINITE
 =

196 
	#FP_INFINITE
 1

	)

197 
FP_INFINITE
,

198 
FP_ZERO
 =

199 
	#FP_ZERO
 2

	)

200 
FP_ZERO
,

201 
FP_SUBNORMAL
 =

202 
	#FP_SUBNORMAL
 3

	)

203 
FP_SUBNORMAL
,

204 
FP_NORMAL
 =

205 
	#FP_NORMAL
 4

	)

206 
FP_NORMAL


210 #ifde‡
__NO_LONG_DOUBLE_MATH


211 
	#Â˛assify
(
x
) \

212 ( (
x
Ë= (Ë? 
	`__Â˛assifyf
 (xË: 
	`__Â˛assify
 (x))

	)

214 
	#Â˛assify
(
x
) \

215 ( (
x
) ==  () \

216 ? 
	`__Â˛assifyf
 (
x
) \

217 :  (
x
) ==  () \

218 ? 
	`__Â˛assify
 (
x
Ë: 
	`__Â˛assifyl
 (x))

	)

222 #ifde‡
__NO_LONG_DOUBLE_MATH


223 
	#signbô
(
x
) \

224 ( (
x
Ë= (Ë? 
	`__signbôf
 (xË: 
	`__signbô
 (x))

	)

226 
	#signbô
(
x
) \

227 ( (
x
) ==  () \

228 ? 
	`__signbôf
 (
x
) \

229 :  (
x
) ==  () \

230 ? 
	`__signbô
 (
x
Ë: 
	`__signbôl
 (x))

	)

234 #ifde‡
__NO_LONG_DOUBLE_MATH


235 
	#isföôe
(
x
) \

236 ( (
x
Ë= (Ë? 
	`__föôef
 (xË: 
	`__föôe
 (x))

	)

238 
	#isföôe
(
x
) \

239 ( (
x
) ==  () \

240 ? 
	`__föôef
 (
x
) \

241 :  (
x
) ==  () \

242 ? 
	`__föôe
 (
x
Ë: 
	`__föôñ
 (x))

	)

246 
	#i¢‹mÆ
(
x
Ë(
	`Â˛assify
 (xË=
FP_NORMAL
)

	)

250 #ifde‡
__NO_LONG_DOUBLE_MATH


251 
	#i¢™
(
x
) \

252 ( (
x
Ë= (Ë? 
	`__i¢™f
 (xË: 
	`__i¢™
 (x))

	)

254 
	#i¢™
(
x
) \

255 ( (
x
) ==  () \

256 ? 
	`__i¢™f
 (
x
) \

257 :  (
x
) ==  () \

258 ? 
	`__i¢™
 (
x
Ë: 
	`__i¢™l
 (x))

	)

262 #ifde‡
__NO_LONG_DOUBLE_MATH


263 
	#isöf
(
x
) \

264 ( (
x
Ë= (Ë? 
	`__isöff
 (xË: 
	`__isöf
 (x))

	)

266 
	#isöf
(
x
) \

267 ( (
x
) ==  () \

268 ? 
	`__isöff
 (
x
) \

269 :  (
x
) ==  () \

270 ? 
	`__isöf
 (
x
Ë: 
	`__isöÊ
 (x))

	)

274 
	#MATH_ERRNO
 1

	)

275 
	#MATH_ERREXCEPT
 2

	)

280 #i‚de‡
__FAST_MATH__


281 
	#m©h_îrh™dlög
 (
MATH_ERRNO
 | 
MATH_ERREXCEPT
)

	)

286 #ifde‡
__USE_GNU


288 #ifde‡
__NO_LONG_DOUBLE_MATH


289 
	#issig«lög
(
x
) \

290 ( (
x
Ë= (Ë? 
	`__issig«lögf
 (xË: 
	`__issig«lög
 (x))

	)

292 
	#issig«lög
(
x
) \

293 ( (
x
) ==  () \

294 ? 
	`__issig«lögf
 (
x
) \

295 :  (
x
) ==  () \

296 ? 
	`__issig«lög
 (
x
Ë: 
	`__issig«lögl
 (x))

	)

300 #ifdef 
__USE_MISC


304 
_IEEE_
 = -1,

305 
_SVID_
,

306 
_XOPEN_
,

307 
_POSIX_
,

308 
_ISOC_


309 } 
	t_LIB_VERSION_TYPE
;

314 
_LIB_VERSION_TYPE
 
_LIB_VERSION
;

318 #ifde‡
__USE_MISC


324 #ifde‡
__˝lu•lus


325 
__ex˚±i⁄


327 
ex˚±i⁄


330 
ty≥
;

331 *
«me
;

332 
¨g1
;

333 
¨g2
;

334 
ªtvÆ
;

335 
	}
};

337 #ifde‡
__˝lu•lus


338 
	$m©hîr
 (
__ex˚±i⁄
 *
__exc
Ë
	`throw
 ();

340 
	`m©hîr
 (
ex˚±i⁄
 *
__exc
);

343 
	#X_TLOSS
 1.41484755040568800000e+16

	)

346 
	#DOMAIN
 1

	)

347 
	#SING
 2

	)

348 
	#OVERFLOW
 3

	)

349 
	#UNDERFLOW
 4

	)

350 
	#TLOSS
 5

	)

351 
	#PLOSS
 6

	)

354 
	#HUGE
 3.40282347e+38F

	)

358 #ifde‡
__USE_XOPEN


360 
	#MAXFLOAT
 3.40282347e+38F

	)

367 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


368 
	#M_E
 2.7182818284590452354

	)

369 
	#M_LOG2E
 1.4426950408889634074

	)

370 
	#M_LOG10E
 0.43429448190325182765

	)

371 
	#M_LN2
 0.69314718055994530942

	)

372 
	#M_LN10
 2.30258509299404568402

	)

373 
	#M_PI
 3.14159265358979323846

	)

374 
	#M_PI_2
 1.57079632679489661923

	)

375 
	#M_PI_4
 0.78539816339744830962

	)

376 
	#M_1_PI
 0.31830988618379067154

	)

377 
	#M_2_PI
 0.63661977236758134308

	)

378 
	#M_2_SQRTPI
 1.12837916709551257390

	)

379 
	#M_SQRT2
 1.41421356237309504880

	)

380 
	#M_SQRT1_2
 0.70710678118654752440

	)

386 #ifde‡
__USE_GNU


387 
	#M_El
 2.718281828459045235360287471352662498L

	)

388 
	#M_LOG2El
 1.442695040888963407359924681001892137L

	)

389 
	#M_LOG10El
 0.434294481903251827651128918916605082L

	)

390 
	#M_LN2l
 0.693147180559945309417232121458176568L

	)

391 
	#M_LN10l
 2.302585092994045684017991454684364208L

	)

392 
	#M_PIl
 3.141592653589793238462643383279502884L

	)

393 
	#M_PI_2l
 1.570796326794896619231321691639751442L

	)

394 
	#M_PI_4l
 0.785398163397448309615660845819875721L

	)

395 
	#M_1_PIl
 0.318309886183790671537767526745028724L

	)

396 
	#M_2_PIl
 0.636619772367581343075535053490057448L

	)

397 
	#M_2_SQRTPIl
 1.128379167095512573896158903121545172L

	)

398 
	#M_SQRT2l
 1.414213562373095048801688724209698079L

	)

399 
	#M_SQRT1_2l
 0.707106781186547524400844362104849039L

	)

406 #i‡
deföed
 
__STRICT_ANSI__
 && !deföed 
__NO_MATH_INLINES


407 
	#__NO_MATH_INLINES
 1

	)

410 #i‡
deföed
 
__USE_ISOC99
 && 
	`__GNUC_PREREQ
(2,97)

417 
	#isgª©î
(
x
, 
y
Ë
	`__buûtö_isgª©î
(x, y)

	)

418 
	#isgª©îequÆ
(
x
, 
y
Ë
	`__buûtö_isgª©îequÆ
(x, y)

	)

419 
	#i¶ess
(
x
, 
y
Ë
	`__buûtö_i¶ess
(x, y)

	)

420 
	#i¶es£quÆ
(
x
, 
y
Ë
	`__buûtö_i¶es£quÆ
(x, y)

	)

421 
	#i¶essgª©î
(
x
, 
y
Ë
	`__buûtö_i¶essgª©î
(x, y)

	)

422 
	#isun‹dîed
(
u
, 
v
Ë
	`__buûtö_isun‹dîed
(u, v)

	)

426 #ifde‡
__USE_EXTERN_INLINES


427 
	~<bôs/m©hölöe.h
>

432 #i‡
deföed
 
__FINITE_MATH_ONLY__
 && __FINITE_MATH_ONLY__ > 0

433 
	~<bôs/m©h-föôe.h
>

436 #ifde‡
__USE_ISOC99


440 #i‚de‡
isgª©î


441 
	#isgª©î
(
x
, 
y
) \

442 (
__exãnsi⁄__
 \

443 ({ 
	`__ty≥of__
(
x
Ë
__x
 = (x); __ty≥of__(
y
Ë
__y
 = (y); \

444 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& __x > __y; 
	}
}))

	)

448 #i‚de‡
isgª©îequÆ


449 
	#isgª©îequÆ
(
x
, 
y
) \

450 (
__exãnsi⁄__
 \

451 ({ 
	`__ty≥of__
(
x
Ë
__x
 = (x); __ty≥of__(
y
Ë
__y
 = (y); \

452 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& __x >__y; }))

	)

456 #i‚de‡
i¶ess


457 
	#i¶ess
(
x
, 
y
) \

458 (
__exãnsi⁄__
 \

459 ({ 
	`__ty≥of__
(
x
Ë
__x
 = (x); __ty≥of__(
y
Ë
__y
 = (y); \

460 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& __x < __y; }))

	)

464 #i‚de‡
i¶es£quÆ


465 
	#i¶es£quÆ
(
x
, 
y
) \

466 (
__exãnsi⁄__
 \

467 ({ 
	`__ty≥of__
(
x
Ë
__x
 = (x); __ty≥of__(
y
Ë
__y
 = (y); \

468 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& __x <__y; }))

	)

472 #i‚de‡
i¶essgª©î


473 
	#i¶essgª©î
(
x
, 
y
) \

474 (
__exãnsi⁄__
 \

475 ({ 
	`__ty≥of__
(
x
Ë
__x
 = (x); __ty≥of__(
y
Ë
__y
 = (y); \

476 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& (__x < __y || __y < __x); }))

	)

480 #i‚de‡
isun‹dîed


481 
	#isun‹dîed
(
u
, 
v
) \

482 (
__exãnsi⁄__
 \

483 ({ 
	`__ty≥of__
(
u
Ë
__u
 = (u); __ty≥of__(
v
Ë
__v
 = (v); \

484 
	`Â˛assify
 (
__u
Ë=
FP_NAN
 || fp˛assify (
__v
Ë=FP_NAN; }))

	)

489 
	g__END_DECLS


	@/usr/include/pthread.h

18 #i‚de‡
_PTHREAD_H


19 
	#_PTHREAD_H
 1

	)

21 
	~<„©uªs.h
>

22 
	~<ídün.h
>

23 
	~<sched.h
>

24 
	~<time.h
>

26 
	~<bôs/±hªadty≥s.h
>

27 
	~<bôs/£tjmp.h
>

28 
	~<bôs/w‹dsize.h
>

34 
	mPTHREAD_CREATE_JOINABLE
,

35 
	#PTHREAD_CREATE_JOINABLE
 
PTHREAD_CREATE_JOINABLE


	)

36 
	mPTHREAD_CREATE_DETACHED


37 
	#PTHREAD_CREATE_DETACHED
 
PTHREAD_CREATE_DETACHED


	)

44 
	mPTHREAD_MUTEX_TIMED_NP
,

45 
	mPTHREAD_MUTEX_RECURSIVE_NP
,

46 
	mPTHREAD_MUTEX_ERRORCHECK_NP
,

47 
	mPTHREAD_MUTEX_ADAPTIVE_NP


48 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8


50 
	mPTHREAD_MUTEX_NORMAL
 = 
PTHREAD_MUTEX_TIMED_NP
,

51 
	mPTHREAD_MUTEX_RECURSIVE
 = 
PTHREAD_MUTEX_RECURSIVE_NP
,

52 
	mPTHREAD_MUTEX_ERRORCHECK
 = 
PTHREAD_MUTEX_ERRORCHECK_NP
,

53 
	mPTHREAD_MUTEX_DEFAULT
 = 
PTHREAD_MUTEX_NORMAL


55 #ifde‡
__USE_GNU


57 , 
	mPTHREAD_MUTEX_FAST_NP
 = 
PTHREAD_MUTEX_TIMED_NP


62 #ifde‡
__USE_XOPEN2K


66 
	mPTHREAD_MUTEX_STALLED
,

67 
	mPTHREAD_MUTEX_STALLED_NP
 = 
PTHREAD_MUTEX_STALLED
,

68 
	mPTHREAD_MUTEX_ROBUST
,

69 
	mPTHREAD_MUTEX_ROBUST_NP
 = 
PTHREAD_MUTEX_ROBUST


74 #i‡
deföed
 
__USE_POSIX199506
 || deföed 
__USE_UNIX98


78 
	mPTHREAD_PRIO_NONE
,

79 
	mPTHREAD_PRIO_INHERIT
,

80 
	mPTHREAD_PRIO_PROTECT


85 #ifde‡
__PTHREAD_MUTEX_HAVE_PREV


86 
	#PTHREAD_MUTEX_INITIALIZER
 \

87 { { 0, 0, 0, 0, 0, 
__PTHREAD_SPINS
, { 0, 0 } } }

	)

88 #ifde‡
__USE_GNU


89 
	#PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
 \

90 { { 0, 0, 0, 0, 
PTHREAD_MUTEX_RECURSIVE_NP
, 
__PTHREAD_SPINS
, { 0, 0 } } }

	)

91 
	#PTHREAD_ERRORCHECK_MUTEX_INITIALIZER_NP
 \

92 { { 0, 0, 0, 0, 
PTHREAD_MUTEX_ERRORCHECK_NP
, 
__PTHREAD_SPINS
, { 0, 0 } } }

	)

93 
	#PTHREAD_ADAPTIVE_MUTEX_INITIALIZER_NP
 \

94 { { 0, 0, 0, 0, 
PTHREAD_MUTEX_ADAPTIVE_NP
, 
__PTHREAD_SPINS
, { 0, 0 } } }

	)

95 
	#PTHREAD_ADAPTIVE_MUTEX_INITIALIZER_NP
 \

96 { { 0, 0, 0, 0, 
PTHREAD_MUTEX_ADAPTIVE_NP
, 
__PTHREAD_SPINS
, { 0, 0 } } }

	)

100 
	#PTHREAD_MUTEX_INITIALIZER
 \

101 { { 0, 0, 0, 0, 0, { 
__PTHREAD_SPINS
 } } }

	)

102 #ifde‡
__USE_GNU


103 
	#PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
 \

104 { { 0, 0, 0, 
PTHREAD_MUTEX_RECURSIVE_NP
, 0, { 
__PTHREAD_SPINS
 } } }

	)

105 
	#PTHREAD_ERRORCHECK_MUTEX_INITIALIZER_NP
 \

106 { { 0, 0, 0, 
PTHREAD_MUTEX_ERRORCHECK_NP
, 0, { 
__PTHREAD_SPINS
 } } }

	)

107 
	#PTHREAD_ADAPTIVE_MUTEX_INITIALIZER_NP
 \

108 { { 0, 0, 0, 
PTHREAD_MUTEX_ADAPTIVE_NP
, 0, { 
__PTHREAD_SPINS
 } } }

	)

115 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


118 
	mPTHREAD_RWLOCK_PREFER_READER_NP
,

119 
	mPTHREAD_RWLOCK_PREFER_WRITER_NP
,

120 
	mPTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
,

121 
	mPTHREAD_RWLOCK_DEFAULT_NP
 = 
PTHREAD_RWLOCK_PREFER_READER_NP


127 #i‚de‡
__PTHREAD_RWLOCK_INT_FLAGS_SHARED


128 #i‡
__WORDSIZE
 == 64

129 
	#__PTHREAD_RWLOCK_INT_FLAGS_SHARED
 1

	)

134 
	#PTHREAD_RWLOCK_INITIALIZER
 \

135 { { 0, 0, 0, 0, 0, 0, 0, 0, 
__PTHREAD_RWLOCK_ELISION_EXTRA
, 0, 0 } }

	)

136 #ifde‡
__USE_GNU


137 #ifde‡
__PTHREAD_RWLOCK_INT_FLAGS_SHARED


138 
	#PTHREAD_RWLOCK_WRITER_NONRECURSIVE_INITIALIZER_NP
 \

139 { { 0, 0, 0, 0, 0, 0, 0, 0, 
__PTHREAD_RWLOCK_ELISION_EXTRA
, 0, \

140 
PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
 } }

	)

142 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


143 
	#PTHREAD_RWLOCK_WRITER_NONRECURSIVE_INITIALIZER_NP
 \

144 { { 0, 0, 0, 0, 0, 0, 
PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
, \

145 0, 
__PTHREAD_RWLOCK_ELISION_EXTRA
, 0, 0 } }

	)

147 
	#PTHREAD_RWLOCK_WRITER_NONRECURSIVE_INITIALIZER_NP
 \

148 { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 
PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
,\

149 0 } }

	)

159 
	mPTHREAD_INHERIT_SCHED
,

160 
	#PTHREAD_INHERIT_SCHED
 
PTHREAD_INHERIT_SCHED


	)

161 
	mPTHREAD_EXPLICIT_SCHED


162 
	#PTHREAD_EXPLICIT_SCHED
 
PTHREAD_EXPLICIT_SCHED


	)

169 
	mPTHREAD_SCOPE_SYSTEM
,

170 
	#PTHREAD_SCOPE_SYSTEM
 
PTHREAD_SCOPE_SYSTEM


	)

171 
	mPTHREAD_SCOPE_PROCESS


172 
	#PTHREAD_SCOPE_PROCESS
 
PTHREAD_SCOPE_PROCESS


	)

179 
	mPTHREAD_PROCESS_PRIVATE
,

180 
	#PTHREAD_PROCESS_PRIVATE
 
PTHREAD_PROCESS_PRIVATE


	)

181 
	mPTHREAD_PROCESS_SHARED


182 
	#PTHREAD_PROCESS_SHARED
 
PTHREAD_PROCESS_SHARED


	)

188 
	#PTHREAD_COND_INITIALIZER
 { { 0, 0, 0, 0, 0, (*Ë0, 0, 0 } }

	)

192 
	s_±hªad_˛ónup_buf„r


194 (*
	m__routöe
) (*);

195 *
	m__¨g
;

196 
	m__ˇn˚…y≥
;

197 
_±hªad_˛ónup_buf„r
 *
	m__¥ev
;

203 
	mPTHREAD_CANCEL_ENABLE
,

204 
	#PTHREAD_CANCEL_ENABLE
 
PTHREAD_CANCEL_ENABLE


	)

205 
	mPTHREAD_CANCEL_DISABLE


206 
	#PTHREAD_CANCEL_DISABLE
 
PTHREAD_CANCEL_DISABLE


	)

210 
	mPTHREAD_CANCEL_DEFERRED
,

211 
	#PTHREAD_CANCEL_DEFERRED
 
PTHREAD_CANCEL_DEFERRED


	)

212 
	mPTHREAD_CANCEL_ASYNCHRONOUS


213 
	#PTHREAD_CANCEL_ASYNCHRONOUS
 
PTHREAD_CANCEL_ASYNCHRONOUS


	)

215 
	#PTHREAD_CANCELED
 ((*Ë-1)

	)

219 
	#PTHREAD_ONCE_INIT
 0

	)

222 #ifde‡
__USE_XOPEN2K


226 
	#PTHREAD_BARRIER_SERIAL_THREAD
 -1

	)

230 
__BEGIN_DECLS


235 
	$±hªad_¸óã
 (
±hªad_t
 *
__ª°ri˘
 
__√wthªad
,

236 c⁄° 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

237 *(*
__°¨t_routöe
) (*),

238 *
__ª°ri˘
 
__¨g
Ë
__THROWNL
 
	`__n⁄nuŒ
 ((1, 3));

244 
	$±hªad_exô
 (*
__ªtvÆ
Ë
	`__©åibuã__
 ((
__n‹ëu∫__
));

252 
	`±hªad_joö
 (
±hªad_t
 
__th
, **
__thªad_ªtu∫
);

254 #ifde‡
__USE_GNU


257 
	$±hªad_åyjoö_≈
 (
±hªad_t
 
__th
, **
__thªad_ªtu∫
Ë
__THROW
;

265 
	`±hªad_timedjoö_≈
 (
±hªad_t
 
__th
, **
__thªad_ªtu∫
,

266 c⁄° 
time•ec
 *
__ab°ime
);

273 
	$±hªad_dëach
 (
±hªad_t
 
__th
Ë
__THROW
;

277 
±hªad_t
 
	$±hªad_£lf
 (Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

280 
	$±hªad_equÆ
 (
±hªad_t
 
__thªad1
,Öthªad_à
__thªad2
)

281 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

289 
	$±hªad_©å_öô
 (
±hªad_©å_t
 *
__©å
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

292 
	$±hªad_©å_de°roy
 (
±hªad_©å_t
 *
__©å
)

293 
__THROW
 
	`__n⁄nuŒ
 ((1));

296 
	$±hªad_©å_gëdëach°©e
 (c⁄° 
±hªad_©å_t
 *
__©å
,

297 *
__dëach°©e
)

298 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

301 
	$±hªad_©å_£tdëach°©e
 (
±hªad_©å_t
 *
__©å
,

302 
__dëach°©e
)

303 
__THROW
 
	`__n⁄nuŒ
 ((1));

307 
	$±hªad_©å_gëgu¨dsize
 (c⁄° 
±hªad_©å_t
 *
__©å
,

308 
size_t
 *
__gu¨dsize
)

309 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

312 
	$±hªad_©å_£tgu¨dsize
 (
±hªad_©å_t
 *
__©å
,

313 
size_t
 
__gu¨dsize
)

314 
__THROW
 
	`__n⁄nuŒ
 ((1));

318 
	$±hªad_©å_gësched∑øm
 (c⁄° 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

319 
sched_∑øm
 *
__ª°ri˘
 
__∑øm
)

320 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

323 
	$±hªad_©å_£tsched∑øm
 (
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

324 c⁄° 
sched_∑øm
 *
__ª°ri˘


325 
__∑øm
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

328 
	$±hªad_©å_gëschedpﬁicy
 (c⁄° 
±hªad_©å_t
 *
__ª°ri˘


329 
__©å
, *
__ª°ri˘
 
__pﬁicy
)

330 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

333 
	$±hªad_©å_£tschedpﬁicy
 (
±hªad_©å_t
 *
__©å
, 
__pﬁicy
)

334 
__THROW
 
	`__n⁄nuŒ
 ((1));

337 
	$±hªad_©å_gëöhîôsched
 (c⁄° 
±hªad_©å_t
 *
__ª°ri˘


338 
__©å
, *
__ª°ri˘
 
__öhîô
)

339 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

342 
	$±hªad_©å_£töhîôsched
 (
±hªad_©å_t
 *
__©å
,

343 
__öhîô
)

344 
__THROW
 
	`__n⁄nuŒ
 ((1));

348 
	$±hªad_©å_gësc›e
 (c⁄° 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

349 *
__ª°ri˘
 
__sc›e
)

350 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

353 
	$±hªad_©å_£tsc›e
 (
±hªad_©å_t
 *
__©å
, 
__sc›e
)

354 
__THROW
 
	`__n⁄nuŒ
 ((1));

357 
	$±hªad_©å_gë°ackaddr
 (c⁄° 
±hªad_©å_t
 *
__ª°ri˘


358 
__©å
, **
__ª°ri˘
 
__°ackaddr
)

359 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__©åibuã_dïªˇãd__
;

365 
	$±hªad_©å_£t°ackaddr
 (
±hªad_©å_t
 *
__©å
,

366 *
__°ackaddr
)

367 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__©åibuã_dïªˇãd__
;

370 
	$±hªad_©å_gë°acksize
 (c⁄° 
±hªad_©å_t
 *
__ª°ri˘


371 
__©å
, 
size_t
 *
__ª°ri˘
 
__°acksize
)

372 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

377 
	$±hªad_©å_£t°acksize
 (
±hªad_©å_t
 *
__©å
,

378 
size_t
 
__°acksize
)

379 
__THROW
 
	`__n⁄nuŒ
 ((1));

381 #ifde‡
__USE_XOPEN2K


383 
	$±hªad_©å_gë°ack
 (c⁄° 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

384 **
__ª°ri˘
 
__°ackaddr
,

385 
size_t
 *
__ª°ri˘
 
__°acksize
)

386 
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3));

391 
	$±hªad_©å_£t°ack
 (
±hªad_©å_t
 *
__©å
, *
__°ackaddr
,

392 
size_t
 
__°acksize
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

395 #ifde‡
__USE_GNU


398 
	$±hªad_©å_£èfföôy_≈
 (
±hªad_©å_t
 *
__©å
,

399 
size_t
 
__˝u£tsize
,

400 c⁄° 
˝u_£t_t
 *
__˝u£t
)

401 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

405 
	$±hªad_©å_gëafföôy_≈
 (c⁄° 
±hªad_©å_t
 *
__©å
,

406 
size_t
 
__˝u£tsize
,

407 
˝u_£t_t
 *
__˝u£t
)

408 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

411 
	$±hªad_gë©å_deÁu…_≈
 (
±hªad_©å_t
 *
__©å
)

412 
__THROW
 
	`__n⁄nuŒ
 ((1));

416 
	$±hªad_£èâr_deÁu…_≈
 (c⁄° 
±hªad_©å_t
 *
__©å
)

417 
__THROW
 
	`__n⁄nuŒ
 ((1));

422 
	$±hªad_gë©å_≈
 (
±hªad_t
 
__th
, 
±hªad_©å_t
 *
__©å
)

423 
__THROW
 
	`__n⁄nuŒ
 ((2));

431 
	$±hªad_£tsched∑øm
 (
±hªad_t
 
__èrgë_thªad
, 
__pﬁicy
,

432 c⁄° 
sched_∑øm
 *
__∑øm
)

433 
__THROW
 
	`__n⁄nuŒ
 ((3));

436 
	$±hªad_gësched∑øm
 (
±hªad_t
 
__èrgë_thªad
,

437 *
__ª°ri˘
 
__pﬁicy
,

438 
sched_∑øm
 *
__ª°ri˘
 
__∑øm
)

439 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

442 
	$±hªad_£tsched¥io
 (
±hªad_t
 
__èrgë_thªad
, 
__¥io
)

443 
__THROW
;

446 #ifde‡
__USE_GNU


448 
	$±hªad_gë«me_≈
 (
±hªad_t
 
__èrgë_thªad
, *
__buf
,

449 
size_t
 
__buÊí
)

450 
__THROW
 
	`__n⁄nuŒ
 ((2));

453 
	$±hªad_£äame_≈
 (
±hªad_t
 
__èrgë_thªad
, c⁄° *
__«me
)

454 
__THROW
 
	`__n⁄nuŒ
 ((2));

458 #ifde‡
__USE_UNIX98


460 
	$±hªad_gëc⁄cuºícy
 (Ë
__THROW
;

463 
	$±hªad_£tc⁄cuºícy
 (
__Àvñ
Ë
__THROW
;

466 #ifde‡
__USE_GNU


471 
	$±hªad_yõld
 (Ë
__THROW
;

476 
	$±hªad_£èfföôy_≈
 (
±hªad_t
 
__th
, 
size_t
 
__˝u£tsize
,

477 c⁄° 
˝u_£t_t
 *
__˝u£t
)

478 
__THROW
 
	`__n⁄nuŒ
 ((3));

481 
	$±hªad_gëafföôy_≈
 (
±hªad_t
 
__th
, 
size_t
 
__˝u£tsize
,

482 
˝u_£t_t
 *
__˝u£t
)

483 
__THROW
 
	`__n⁄nuŒ
 ((3));

496 
	$±hªad_⁄˚
 (
±hªad_⁄˚_t
 *
__⁄˚_c⁄åﬁ
,

497 (*
__öô_routöe
Ë()Ë
	`__n⁄nuŒ
 ((1, 2));

508 
	`±hªad_£tˇn˚l°©e
 (
__°©e
, *
__ﬁd°©e
);

512 
	`±hªad_£tˇn˚…y≥
 (
__ty≥
, *
__ﬁdty≥
);

515 
	`±hªad_ˇn˚l
 (
±hªad_t
 
__th
);

520 
	`±hªad_ã°ˇn˚l
 ();

529 
__jmp_buf
 
__ˇn˚l_jmp_buf
;

530 
__mask_was_ßved
;

531 } 
__ˇn˚l_jmp_buf
[1];

532 *
__∑d
[4];

533 } 
	t__±hªad_unwöd_buf_t
 
	t__©åibuã__
 ((
	t__Æig√d__
));

536 #i‚de‡
__˛ónup_f˘_©åibuã


537 
	#__˛ónup_f˘_©åibuã


	)

542 
	s__±hªad_˛ónup_‰ame


544 (*
__ˇn˚l_routöe
) (*);

545 *
__ˇn˚l_¨g
;

546 
__do_ô
;

547 
__ˇn˚l_ty≥
;

550 #i‡
deföed
 
__GNUC__
 && deföed 
__EXCEPTIONS


551 #ifde‡
__˝lu•lus


553 ˛as†
	c__±hªad_˛ónup_˛ass


555 (*
__ˇn˚l_routöe
) (*);

556 *
__ˇn˚l_¨g
;

557 
__do_ô
;

558 
__ˇn˚l_ty≥
;

560 
public
:

561 
	$__±hªad_˛ónup_˛ass
 ((*
__f˘
Ë(*), *
__¨g
)

562 : 
	`__ˇn˚l_routöe
 (
__f˘
), 
	`__ˇn˚l_¨g
 (
__¨g
), 
	$__do_ô
 (1) { }

563 ~
	$__±hªad_˛ónup_˛ass
 (Ë{ i‡(
__do_ô
Ë
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); 
	}
}

564 
	$__£tdoô
 (
__√wvÆ
Ë{ 
__do_ô
 = __√wvÆ; 
	}
}

565 
	$__de„r
 (Ë{ 
	`±hªad_£tˇn˚…y≥
 (
PTHREAD_CANCEL_DEFERRED
,

566 &
__ˇn˚l_ty≥
); 
	}
}

567 
	$__ª°‹e
 (Ëc⁄° { 
	`±hªad_£tˇn˚…y≥
 (
__ˇn˚l_ty≥
, 0); 
	}
}

577 
	#±hªad_˛ónup_push
(
routöe
, 
¨g
) \

579 
__±hªad_˛ónup_˛ass
 
	`__˛‰ame
 (
routöe
, 
¨g
)

	)

583 
	#±hªad_˛ónup_p›
(
execuã
) \

584 
__˛‰ame
.
	`__£tdoô
 (
execuã
); \

585 } 0)

	)

587 #ifde‡
__USE_GNU


591 
	#±hªad_˛ónup_push_de„r_≈
(
routöe
, 
¨g
) \

593 
__±hªad_˛ónup_˛ass
 
	`__˛‰ame
 (
routöe
, 
¨g
); \

594 
__˛‰ame
.
	`__de„r
 ()

	)

599 
	#±hªad_˛ónup_p›_ª°‹e_≈
(
execuã
) \

600 
__˛‰ame
.
	`__ª°‹e
 (); \

601 
__˛‰ame
.
	`__£tdoô
 (
execuã
); \

602 } 0)

	)

609 
__exã∫_ölöe
 

610 
	$__±hªad_˛ónup_routöe
 (
__±hªad_˛ónup_‰ame
 *
__‰ame
)

612 i‡(
__‰ame
->
__do_ô
)

613 
__‰ame
->
	`__ˇn˚l_routöe
 (__‰ame->
__ˇn˚l_¨g
);

614 
	}
}

623 
	#±hªad_˛ónup_push
(
routöe
, 
¨g
) \

625 
__±hªad_˛ónup_‰ame
 
__˛‰ame
 \

626 
	`__©åibuã__
 ((
	`__˛ónup__
 (
__±hªad_˛ónup_routöe
))) \

627 { .
__ˇn˚l_routöe
 = (
routöe
), .
__ˇn˚l_¨g
 = (
¨g
), \

628 .
__do_ô
 = 1 };

	)

632 
	#±hªad_˛ónup_p›
(
execuã
) \

633 
__˛‰ame
.
__do_ô
 = (
execuã
); \

634 } 0)

	)

636 #ifde‡
__USE_GNU


640 
	#±hªad_˛ónup_push_de„r_≈
(
routöe
, 
¨g
) \

642 
__±hªad_˛ónup_‰ame
 
__˛‰ame
 \

643 
	`__©åibuã__
 ((
	`__˛ónup__
 (
__±hªad_˛ónup_routöe
))) \

644 { .
__ˇn˚l_routöe
 = (
routöe
), .
__ˇn˚l_¨g
 = (
¨g
), \

645 .
__do_ô
 = 1 }; \

646 (Ë
	`±hªad_£tˇn˚…y≥
 (
PTHREAD_CANCEL_DEFERRED
, \

647 &
__˛‰ame
.
__ˇn˚l_ty≥
)

	)

652 
	#±hªad_˛ónup_p›_ª°‹e_≈
(
execuã
) \

653 (Ë
	`±hªad_£tˇn˚…y≥
 (
__˛‰ame
.
__ˇn˚l_ty≥
, 
NULL
); \

654 
__˛‰ame
.
__do_ô
 = (
execuã
); \

655 } 0)

	)

666 
	#±hªad_˛ónup_push
(
routöe
, 
¨g
) \

668 
__±hªad_unwöd_buf_t
 
__ˇn˚l_buf
; \

669 (*
__ˇn˚l_routöe
Ë(*Ë(
routöe
); \

670 *
__ˇn˚l_¨g
 = (
¨g
); \

671 
__nŸ_fú°_ˇŒ
 = 
	`__sig£tjmp
 ((
__jmp_buf_èg
 *) (*) \

672 
__ˇn˚l_buf
.
__ˇn˚l_jmp_buf
, 0); \

673 i‡(
	`__glibc_u∆ikñy
 (
__nŸ_fú°_ˇŒ
)) \

675 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

676 
	`__±hªad_unwöd_√xt
 (&
__ˇn˚l_buf
); \

680 
	`__±hªad_ªgi°î_ˇn˚l
 (&
__ˇn˚l_buf
); \

681 dÿ{

	)

682 
__±hªad_ªgi°î_ˇn˚l
 (
__±hªad_unwöd_buf_t
 *
__buf
)

683 
__˛ónup_f˘_©åibuã
;

687 
	#±hªad_˛ónup_p›
(
execuã
) \

690 
	`__±hªad_uƒegi°î_ˇn˚l
 (&
__ˇn˚l_buf
); \

691 i‡(
execuã
) \

692 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

693 } 0)

	)

694 
	$__±hªad_uƒegi°î_ˇn˚l
 (
__±hªad_unwöd_buf_t
 *
__buf
)

695 
__˛ónup_f˘_©åibuã
;

697 #ifde‡
__USE_GNU


701 
	#±hªad_˛ónup_push_de„r_≈
(
routöe
, 
¨g
) \

703 
__±hªad_unwöd_buf_t
 
__ˇn˚l_buf
; \

704 (*
__ˇn˚l_routöe
Ë(*Ë(
routöe
); \

705 *
__ˇn˚l_¨g
 = (
¨g
); \

706 
__nŸ_fú°_ˇŒ
 = 
	`__sig£tjmp
 ((
__jmp_buf_èg
 *) (*) \

707 
__ˇn˚l_buf
.
__ˇn˚l_jmp_buf
, 0); \

708 i‡(
	`__glibc_u∆ikñy
 (
__nŸ_fú°_ˇŒ
)) \

710 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

711 
	`__±hªad_unwöd_√xt
 (&
__ˇn˚l_buf
); \

715 
	`__±hªad_ªgi°î_ˇn˚l_de„r
 (&
__ˇn˚l_buf
); \

716 dÿ{

	)

717 
	`__±hªad_ªgi°î_ˇn˚l_de„r
 (
__±hªad_unwöd_buf_t
 *
__buf
)

718 
__˛ónup_f˘_©åibuã
;

723 
	#±hªad_˛ónup_p›_ª°‹e_≈
(
execuã
) \

726 
	`__±hªad_uƒegi°î_ˇn˚l_ª°‹e
 (&
__ˇn˚l_buf
); \

727 i‡(
execuã
) \

728 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

729 
	}
} 0)

	)

730 
	$__±hªad_uƒegi°î_ˇn˚l_ª°‹e
 (
__±hªad_unwöd_buf_t
 *
__buf
)

731 
__˛ónup_f˘_©åibuã
;

735 
	$__±hªad_unwöd_√xt
 (
__±hªad_unwöd_buf_t
 *
__buf
)

736 
__˛ónup_f˘_©åibuã
 
	`__©åibuã__
 ((
__n‹ëu∫__
))

737 #i‚de‡
SHARED


738 
	`__©åibuã__
 ((
__wók__
))

744 
__jmp_buf_èg
;

745 
	$__sig£tjmp
 (
__jmp_buf_èg
 *
__ív
, 
__ßvemask
Ë
__THROWNL
;

751 
	$±hªad_muãx_öô
 (
±hªad_muãx_t
 *
__muãx
,

752 c⁄° 
±hªad_muãx©å_t
 *
__muãx©å
)

753 
__THROW
 
	`__n⁄nuŒ
 ((1));

756 
	$±hªad_muãx_de°roy
 (
±hªad_muãx_t
 *
__muãx
)

757 
__THROW
 
	`__n⁄nuŒ
 ((1));

760 
	$±hªad_muãx_åylock
 (
±hªad_muãx_t
 *
__muãx
)

761 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

764 
	$±hªad_muãx_lock
 (
±hªad_muãx_t
 *
__muãx
)

765 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

767 #ifde‡
__USE_XOPEN2K


769 
	$±hªad_muãx_timedlock
 (
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
,

770 c⁄° 
time•ec
 *
__ª°ri˘


771 
__ab°ime
Ë
__THROWNL
 
	`__n⁄nuŒ
 ((1, 2));

775 
	$±hªad_muãx_u∆ock
 (
±hªad_muãx_t
 *
__muãx
)

776 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

780 
	$±hªad_muãx_gë¥io˚ûög
 (c⁄° 
±hªad_muãx_t
 *

781 
__ª°ri˘
 
__muãx
,

782 *
__ª°ri˘
 
__¥io˚ûög
)

783 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

787 
	$±hªad_muãx_£çrio˚ûög
 (
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
,

788 
__¥io˚ûög
,

789 *
__ª°ri˘
 
__ﬁd_˚ûög
)

790 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

793 #ifde‡
__USE_XOPEN2K8


795 
	$±hªad_muãx_c⁄si°ít
 (
±hªad_muãx_t
 *
__muãx
)

796 
__THROW
 
	`__n⁄nuŒ
 ((1));

797 #ifde‡
__USE_GNU


798 
	$±hªad_muãx_c⁄si°ít_≈
 (
±hªad_muãx_t
 *
__muãx
)

799 
__THROW
 
	`__n⁄nuŒ
 ((1));

808 
	$±hªad_muãx©å_öô
 (
±hªad_muãx©å_t
 *
__©å
)

809 
__THROW
 
	`__n⁄nuŒ
 ((1));

812 
	$±hªad_muãx©å_de°roy
 (
±hªad_muãx©å_t
 *
__©å
)

813 
__THROW
 
	`__n⁄nuŒ
 ((1));

816 
	$±hªad_muãx©å_gëpsh¨ed
 (c⁄° 
±hªad_muãx©å_t
 *

817 
__ª°ri˘
 
__©å
,

818 *
__ª°ri˘
 
__psh¨ed
)

819 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

822 
	$±hªad_muãx©å_£çsh¨ed
 (
±hªad_muãx©å_t
 *
__©å
,

823 
__psh¨ed
)

824 
__THROW
 
	`__n⁄nuŒ
 ((1));

826 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8


828 
	$±hªad_muãx©å_gëty≥
 (c⁄° 
±hªad_muãx©å_t
 *
__ª°ri˘


829 
__©å
, *
__ª°ri˘
 
__köd
)

830 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

835 
	$±hªad_muãx©å_£ây≥
 (
±hªad_muãx©å_t
 *
__©å
, 
__köd
)

836 
__THROW
 
	`__n⁄nuŒ
 ((1));

840 
	$±hªad_muãx©å_gë¥Ÿocﬁ
 (c⁄° 
±hªad_muãx©å_t
 *

841 
__ª°ri˘
 
__©å
,

842 *
__ª°ri˘
 
__¥Ÿocﬁ
)

843 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

847 
	$±hªad_muãx©å_£çrŸocﬁ
 (
±hªad_muãx©å_t
 *
__©å
,

848 
__¥Ÿocﬁ
)

849 
__THROW
 
	`__n⁄nuŒ
 ((1));

852 
	$±hªad_muãx©å_gë¥io˚ûög
 (c⁄° 
±hªad_muãx©å_t
 *

853 
__ª°ri˘
 
__©å
,

854 *
__ª°ri˘
 
__¥io˚ûög
)

855 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

858 
	$±hªad_muãx©å_£çrio˚ûög
 (
±hªad_muãx©å_t
 *
__©å
,

859 
__¥io˚ûög
)

860 
__THROW
 
	`__n⁄nuŒ
 ((1));

862 #ifde‡
__USE_XOPEN2K


864 
	$±hªad_muãx©å_gërobu°
 (c⁄° 
±hªad_muãx©å_t
 *
__©å
,

865 *
__robu°√ss
)

866 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

867 #ifde‡
__USE_GNU


868 
	$±hªad_muãx©å_gërobu°_≈
 (c⁄° 
±hªad_muãx©å_t
 *
__©å
,

869 *
__robu°√ss
)

870 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

874 
	$±hªad_muãx©å_£åobu°
 (
±hªad_muãx©å_t
 *
__©å
,

875 
__robu°√ss
)

876 
__THROW
 
	`__n⁄nuŒ
 ((1));

877 #ifde‡
__USE_GNU


878 
	$±hªad_muãx©å_£åobu°_≈
 (
±hªad_muãx©å_t
 *
__©å
,

879 
__robu°√ss
)

880 
__THROW
 
	`__n⁄nuŒ
 ((1));

885 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


890 
	$±hªad_rwlock_öô
 (
±hªad_rwlock_t
 *
__ª°ri˘
 
__rwlock
,

891 c⁄° 
±hªad_rwlock©å_t
 *
__ª°ri˘


892 
__©å
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

895 
	$±hªad_rwlock_de°roy
 (
±hªad_rwlock_t
 *
__rwlock
)

896 
__THROW
 
	`__n⁄nuŒ
 ((1));

899 
	$±hªad_rwlock_rdlock
 (
±hªad_rwlock_t
 *
__rwlock
)

900 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

903 
	$±hªad_rwlock_åyrdlock
 (
±hªad_rwlock_t
 *
__rwlock
)

904 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

906 #ifde‡
__USE_XOPEN2K


908 
	$±hªad_rwlock_timedrdlock
 (
±hªad_rwlock_t
 *
__ª°ri˘
 
__rwlock
,

909 c⁄° 
time•ec
 *
__ª°ri˘


910 
__ab°ime
Ë
__THROWNL
 
	`__n⁄nuŒ
 ((1, 2));

914 
	$±hªad_rwlock_wæock
 (
±hªad_rwlock_t
 *
__rwlock
)

915 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

918 
	$±hªad_rwlock_åywæock
 (
±hªad_rwlock_t
 *
__rwlock
)

919 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

921 #ifde‡
__USE_XOPEN2K


923 
	$±hªad_rwlock_timedwæock
 (
±hªad_rwlock_t
 *
__ª°ri˘
 
__rwlock
,

924 c⁄° 
time•ec
 *
__ª°ri˘


925 
__ab°ime
Ë
__THROWNL
 
	`__n⁄nuŒ
 ((1, 2));

929 
	$±hªad_rwlock_u∆ock
 (
±hªad_rwlock_t
 *
__rwlock
)

930 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

936 
	$±hªad_rwlock©å_öô
 (
±hªad_rwlock©å_t
 *
__©å
)

937 
__THROW
 
	`__n⁄nuŒ
 ((1));

940 
	$±hªad_rwlock©å_de°roy
 (
±hªad_rwlock©å_t
 *
__©å
)

941 
__THROW
 
	`__n⁄nuŒ
 ((1));

944 
	$±hªad_rwlock©å_gëpsh¨ed
 (c⁄° 
±hªad_rwlock©å_t
 *

945 
__ª°ri˘
 
__©å
,

946 *
__ª°ri˘
 
__psh¨ed
)

947 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

950 
	$±hªad_rwlock©å_£çsh¨ed
 (
±hªad_rwlock©å_t
 *
__©å
,

951 
__psh¨ed
)

952 
__THROW
 
	`__n⁄nuŒ
 ((1));

955 
	$±hªad_rwlock©å_gëköd_≈
 (c⁄° 
±hªad_rwlock©å_t
 *

956 
__ª°ri˘
 
__©å
,

957 *
__ª°ri˘
 
__¥ef
)

958 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

961 
	$±hªad_rwlock©å_£tköd_≈
 (
±hªad_rwlock©å_t
 *
__©å
,

962 
__¥ef
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

970 
	$±hªad_c⁄d_öô
 (
±hªad_c⁄d_t
 *
__ª°ri˘
 
__c⁄d
,

971 c⁄° 
±hªad_c⁄d©å_t
 *
__ª°ri˘
 
__c⁄d_©å
)

972 
__THROW
 
	`__n⁄nuŒ
 ((1));

975 
	$±hªad_c⁄d_de°roy
 (
±hªad_c⁄d_t
 *
__c⁄d
)

976 
__THROW
 
	`__n⁄nuŒ
 ((1));

979 
	$±hªad_c⁄d_sig«l
 (
±hªad_c⁄d_t
 *
__c⁄d
)

980 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

983 
	$±hªad_c⁄d_brﬂdˇ°
 (
±hªad_c⁄d_t
 *
__c⁄d
)

984 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

991 
	$±hªad_c⁄d_waô
 (
±hªad_c⁄d_t
 *
__ª°ri˘
 
__c⁄d
,

992 
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
)

993 
	`__n⁄nuŒ
 ((1, 2));

1002 
	$±hªad_c⁄d_timedwaô
 (
±hªad_c⁄d_t
 *
__ª°ri˘
 
__c⁄d
,

1003 
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
,

1004 c⁄° 
time•ec
 *
__ª°ri˘
 
__ab°ime
)

1005 
	`__n⁄nuŒ
 ((1, 2, 3));

1010 
	$±hªad_c⁄d©å_öô
 (
±hªad_c⁄d©å_t
 *
__©å
)

1011 
__THROW
 
	`__n⁄nuŒ
 ((1));

1014 
	$±hªad_c⁄d©å_de°roy
 (
±hªad_c⁄d©å_t
 *
__©å
)

1015 
__THROW
 
	`__n⁄nuŒ
 ((1));

1018 
	$±hªad_c⁄d©å_gëpsh¨ed
 (c⁄° 
±hªad_c⁄d©å_t
 *

1019 
__ª°ri˘
 
__©å
,

1020 *
__ª°ri˘
 
__psh¨ed
)

1021 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1024 
	$±hªad_c⁄d©å_£çsh¨ed
 (
±hªad_c⁄d©å_t
 *
__©å
,

1025 
__psh¨ed
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

1027 #ifde‡
__USE_XOPEN2K


1029 
	$±hªad_c⁄d©å_gë˛ock
 (c⁄° 
±hªad_c⁄d©å_t
 *

1030 
__ª°ri˘
 
__©å
,

1031 
__˛ockid_t
 *
__ª°ri˘
 
__˛ock_id
)

1032 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1035 
	$±hªad_c⁄d©å_£t˛ock
 (
±hªad_c⁄d©å_t
 *
__©å
,

1036 
__˛ockid_t
 
__˛ock_id
)

1037 
__THROW
 
	`__n⁄nuŒ
 ((1));

1041 #ifde‡
__USE_XOPEN2K


1046 
	$±hªad_•ö_öô
 (
±hªad_•ölock_t
 *
__lock
, 
__psh¨ed
)

1047 
__THROW
 
	`__n⁄nuŒ
 ((1));

1050 
	$±hªad_•ö_de°roy
 (
±hªad_•ölock_t
 *
__lock
)

1051 
__THROW
 
	`__n⁄nuŒ
 ((1));

1054 
	$±hªad_•ö_lock
 (
±hªad_•ölock_t
 *
__lock
)

1055 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

1058 
	$±hªad_•ö_åylock
 (
±hªad_•ölock_t
 *
__lock
)

1059 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

1062 
	$±hªad_•ö_u∆ock
 (
±hªad_•ölock_t
 *
__lock
)

1063 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

1070 
	$±hªad_b¨rõr_öô
 (
±hªad_b¨rõr_t
 *
__ª°ri˘
 
__b¨rõr
,

1071 c⁄° 
±hªad_b¨rõøâr_t
 *
__ª°ri˘


1072 
__©å
, 
__cou¡
)

1073 
__THROW
 
	`__n⁄nuŒ
 ((1));

1076 
	$±hªad_b¨rõr_de°roy
 (
±hªad_b¨rõr_t
 *
__b¨rõr
)

1077 
__THROW
 
	`__n⁄nuŒ
 ((1));

1080 
	$±hªad_b¨rõr_waô
 (
±hªad_b¨rõr_t
 *
__b¨rõr
)

1081 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

1085 
	$±hªad_b¨rõøâr_öô
 (
±hªad_b¨rõøâr_t
 *
__©å
)

1086 
__THROW
 
	`__n⁄nuŒ
 ((1));

1089 
	$±hªad_b¨rõøâr_de°roy
 (
±hªad_b¨rõøâr_t
 *
__©å
)

1090 
__THROW
 
	`__n⁄nuŒ
 ((1));

1093 
	$±hªad_b¨rõøâr_gëpsh¨ed
 (c⁄° 
±hªad_b¨rõøâr_t
 *

1094 
__ª°ri˘
 
__©å
,

1095 *
__ª°ri˘
 
__psh¨ed
)

1096 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1099 
	$±hªad_b¨rõøâr_£çsh¨ed
 (
±hªad_b¨rõøâr_t
 *
__©å
,

1100 
__psh¨ed
)

1101 
__THROW
 
	`__n⁄nuŒ
 ((1));

1113 
	$±hªad_key_¸óã
 (
±hªad_key_t
 *
__key
,

1114 (*
__de°r_fun˘i⁄
) (*))

1115 
__THROW
 
	`__n⁄nuŒ
 ((1));

1118 
	$±hªad_key_dñëe
 (
±hªad_key_t
 
__key
Ë
__THROW
;

1121 *
	$±hªad_gë•ecific
 (
±hªad_key_t
 
__key
Ë
__THROW
;

1124 
	$±hªad_£t•ecific
 (
±hªad_key_t
 
__key
,

1125 c⁄° *
__poöãr
Ë
__THROW
 ;

1128 #ifde‡
__USE_XOPEN2K


1130 
	$±hªad_gë˝u˛ockid
 (
±hªad_t
 
__thªad_id
,

1131 
__˛ockid_t
 *
__˛ock_id
)

1132 
__THROW
 
	`__n⁄nuŒ
 ((2));

1147 
	$±hªad_©f‹k
 ((*
__¥ï¨e
) (),

1148 (*
__∑ª¡
) (),

1149 (*
__chûd
Ë()Ë
__THROW
;

1152 #ifde‡
__USE_EXTERN_INLINES


1154 
__exã∫_ölöe
 

1155 
	`__NTH
 (
	$±hªad_equÆ
 (
±hªad_t
 
__thªad1
,Öthªad_à
__thªad2
))

1157  
__thªad1
 =
__thªad2
;

1158 
	}
}

1161 
	g__END_DECLS


	@/usr/include/sched.h

19 #i‚def 
_SCHED_H


20 
	#_SCHED_H
 1

	)

22 
	~<„©uªs.h
>

25 
	~<bôs/ty≥s.h
>

27 
	#__√ed_size_t


	)

28 
	~<°ddef.h
>

30 #ifde‡
__USE_XOPEN2K


31 
	#__√ed_time_t


	)

32 
	#__√ed_time•ec


	)

34 
	~<time.h
>

36 #i‚de‡
__pid_t_deföed


37 
__pid_t
 
	tpid_t
;

38 
	#__pid_t_deföed


	)

43 
	~<bôs/sched.h
>

45 
	#sched_¥i‹ôy
 
__sched_¥i‹ôy


	)

48 
__BEGIN_DECLS


51 
	$sched_£ç¨am
 (
__pid_t
 
__pid
, c⁄° 
sched_∑øm
 *
__∑øm
)

52 
__THROW
;

55 
	$sched_gë∑øm
 (
__pid_t
 
__pid
, 
sched_∑øm
 *
__∑øm
Ë
__THROW
;

58 
	$sched_£tscheduÀr
 (
__pid_t
 
__pid
, 
__pﬁicy
,

59 c⁄° 
sched_∑øm
 *
__∑øm
Ë
__THROW
;

62 
	$sched_gëscheduÀr
 (
__pid_t
 
__pid
Ë
__THROW
;

65 
	$sched_yõld
 (Ë
__THROW
;

68 
	$sched_gë_¥i‹ôy_max
 (
__Æg‹ôhm
Ë
__THROW
;

71 
	$sched_gë_¥i‹ôy_mö
 (
__Æg‹ôhm
Ë
__THROW
;

74 
	$sched_º_gë_öãrvÆ
 (
__pid_t
 
__pid
, 
time•ec
 *
__t
Ë
__THROW
;

77 #ifde‡
__USE_GNU


79 
	#CPU_SETSIZE
 
__CPU_SETSIZE


	)

80 
	#CPU_SET
(
˝u
, 
˝u£ç
Ë
	`__CPU_SET_S
 (˝u,  (
˝u_£t_t
), cpu£ç)

	)

81 
	#CPU_CLR
(
˝u
, 
˝u£ç
Ë
	`__CPU_CLR_S
 (˝u,  (
˝u_£t_t
), cpu£ç)

	)

82 
	#CPU_ISSET
(
˝u
, 
˝u£ç
Ë
	`__CPU_ISSET_S
 (˝u,  (
˝u_£t_t
), \

83 
˝u£ç
)

	)

84 
	#CPU_ZERO
(
˝u£ç
Ë
	`__CPU_ZERO_S
 ( (
˝u_£t_t
), cpu£ç)

	)

85 
	#CPU_COUNT
(
˝u£ç
Ë
	`__CPU_COUNT_S
 ( (
˝u_£t_t
), cpu£ç)

	)

87 
	#CPU_SET_S
(
˝u
, 
£tsize
, 
˝u£ç
Ë
	`__CPU_SET_S
 (˝u, sësize, cpu£ç)

	)

88 
	#CPU_CLR_S
(
˝u
, 
£tsize
, 
˝u£ç
Ë
	`__CPU_CLR_S
 (˝u, sësize, cpu£ç)

	)

89 
	#CPU_ISSET_S
(
˝u
, 
£tsize
, 
˝u£ç
Ë
	`__CPU_ISSET_S
 (cpu, setsize, \

90 
˝u£ç
)

	)

91 
	#CPU_ZERO_S
(
£tsize
, 
˝u£ç
Ë
	`__CPU_ZERO_S
 (£tsize, cpu£ç)

	)

92 
	#CPU_COUNT_S
(
£tsize
, 
˝u£ç
Ë
	`__CPU_COUNT_S
 (£tsize, cpu£ç)

	)

94 
	#CPU_EQUAL
(
˝u£ç1
, 
˝u£ç2
) \

95 
	`__CPU_EQUAL_S
 ( (
˝u_£t_t
), 
˝u£ç1
, 
˝u£ç2
)

	)

96 
	#CPU_EQUAL_S
(
£tsize
, 
˝u£ç1
, 
˝u£ç2
) \

97 
	`__CPU_EQUAL_S
 (
£tsize
, 
˝u£ç1
, 
˝u£ç2
)

	)

99 
	#CPU_AND
(
de°£t
, 
§c£t1
, 
§c£t2
) \

100 
	`__CPU_OP_S
 ( (
˝u_£t_t
), 
de°£t
, 
§c£t1
, 
§c£t2
, &)

	)

101 
	#CPU_OR
(
de°£t
, 
§c£t1
, 
§c£t2
) \

102 
	`__CPU_OP_S
 ( (
˝u_£t_t
), 
de°£t
, 
§c£t1
, 
§c£t2
, |)

	)

103 
	#CPU_XOR
(
de°£t
, 
§c£t1
, 
§c£t2
) \

104 
	`__CPU_OP_S
 ( (
˝u_£t_t
), 
de°£t
, 
§c£t1
, 
§c£t2
, ^)

	)

105 
	#CPU_AND_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
) \

106 
	`__CPU_OP_S
 (
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, &)

	)

107 
	#CPU_OR_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
) \

108 
	`__CPU_OP_S
 (
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, |)

	)

109 
	#CPU_XOR_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
) \

110 
	`__CPU_OP_S
 (
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, ^)

	)

112 
	#CPU_ALLOC_SIZE
(
cou¡
Ë
	`__CPU_ALLOC_SIZE
 (cou¡)

	)

113 
	#CPU_ALLOC
(
cou¡
Ë
	`__CPU_ALLOC
 (cou¡)

	)

114 
	#CPU_FREE
(
˝u£t
Ë
	`__CPU_FREE
 (˝u£t)

	)

118 
	$sched_£èfföôy
 (
__pid_t
 
__pid
, 
size_t
 
__˝u£tsize
,

119 c⁄° 
˝u_£t_t
 *
__˝u£t
Ë
__THROW
;

122 
	$sched_gëafföôy
 (
__pid_t
 
__pid
, 
size_t
 
__˝u£tsize
,

123 
˝u_£t_t
 *
__˝u£t
Ë
__THROW
;

126 
__END_DECLS


	@/usr/include/stdint.h

22 #i‚de‡
_STDINT_H


23 
	#_STDINT_H
 1

	)

25 
	~<„©uªs.h
>

26 
	~<bôs/wch¨.h
>

27 
	~<bôs/w‹dsize.h
>

34 #i‚de‡
__öt8_t_deföed


35 
	#__öt8_t_deföed


	)

36 sig√d 
	töt8_t
;

37 
	töt16_t
;

38 
	töt32_t
;

39 #i‡
__WORDSIZE
 == 64

40 
	töt64_t
;

42 
__exãnsi⁄__


43 
	töt64_t
;

48 
	tuöt8_t
;

49 
	tuöt16_t
;

50 #i‚de‡
__uöt32_t_deföed


51 
	tuöt32_t
;

52 
	#__uöt32_t_deföed


	)

54 #i‡
__WORDSIZE
 == 64

55 
	tuöt64_t
;

57 
__exãnsi⁄__


58 
	tuöt64_t
;

65 sig√d 
	töt_Àa°8_t
;

66 
	töt_Àa°16_t
;

67 
	töt_Àa°32_t
;

68 #i‡
__WORDSIZE
 == 64

69 
	töt_Àa°64_t
;

71 
__exãnsi⁄__


72 
	töt_Àa°64_t
;

76 
	tuöt_Àa°8_t
;

77 
	tuöt_Àa°16_t
;

78 
	tuöt_Àa°32_t
;

79 #i‡
__WORDSIZE
 == 64

80 
	tuöt_Àa°64_t
;

82 
__exãnsi⁄__


83 
	tuöt_Àa°64_t
;

90 sig√d 
	töt_Á°8_t
;

91 #i‡
__WORDSIZE
 == 64

92 
	töt_Á°16_t
;

93 
	töt_Á°32_t
;

94 
	töt_Á°64_t
;

96 
	töt_Á°16_t
;

97 
	töt_Á°32_t
;

98 
__exãnsi⁄__


99 
	töt_Á°64_t
;

103 
	tuöt_Á°8_t
;

104 #i‡
__WORDSIZE
 == 64

105 
	tuöt_Á°16_t
;

106 
	tuöt_Á°32_t
;

107 
	tuöt_Á°64_t
;

109 
	tuöt_Á°16_t
;

110 
	tuöt_Á°32_t
;

111 
__exãnsi⁄__


112 
	tuöt_Á°64_t
;

117 #i‡
__WORDSIZE
 == 64

118 #i‚de‡
__öçå_t_deföed


119 
	töçå_t
;

120 
	#__öçå_t_deföed


	)

122 
	tuöçå_t
;

124 #i‚de‡
__öçå_t_deföed


125 
	töçå_t
;

126 
	#__öçå_t_deföed


	)

128 
	tuöçå_t
;

133 #i‡
__WORDSIZE
 == 64

134 
	tötmax_t
;

135 
	tuötmax_t
;

137 
__exãnsi⁄__


138 
	tötmax_t
;

139 
__exãnsi⁄__


140 
	tuötmax_t
;

144 #i‡
__WORDSIZE
 == 64

145 
	#__INT64_C
(
c
Ë¯## 
L


	)

146 
	#__UINT64_C
(
c
Ë¯## 
UL


	)

148 
	#__INT64_C
(
c
Ë¯## 
LL


	)

149 
	#__UINT64_C
(
c
Ë¯## 
ULL


	)

155 
	#INT8_MIN
 (-128)

	)

156 
	#INT16_MIN
 (-32767-1)

	)

157 
	#INT32_MIN
 (-2147483647-1)

	)

158 
	#INT64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

160 
	#INT8_MAX
 (127)

	)

161 
	#INT16_MAX
 (32767)

	)

162 
	#INT32_MAX
 (2147483647)

	)

163 
	#INT64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

166 
	#UINT8_MAX
 (255)

	)

167 
	#UINT16_MAX
 (65535)

	)

168 
	#UINT32_MAX
 (4294967295U)

	)

169 
	#UINT64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

173 
	#INT_LEAST8_MIN
 (-128)

	)

174 
	#INT_LEAST16_MIN
 (-32767-1)

	)

175 
	#INT_LEAST32_MIN
 (-2147483647-1)

	)

176 
	#INT_LEAST64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

178 
	#INT_LEAST8_MAX
 (127)

	)

179 
	#INT_LEAST16_MAX
 (32767)

	)

180 
	#INT_LEAST32_MAX
 (2147483647)

	)

181 
	#INT_LEAST64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

184 
	#UINT_LEAST8_MAX
 (255)

	)

185 
	#UINT_LEAST16_MAX
 (65535)

	)

186 
	#UINT_LEAST32_MAX
 (4294967295U)

	)

187 
	#UINT_LEAST64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

191 
	#INT_FAST8_MIN
 (-128)

	)

192 #i‡
__WORDSIZE
 == 64

193 
	#INT_FAST16_MIN
 (-9223372036854775807L-1)

	)

194 
	#INT_FAST32_MIN
 (-9223372036854775807L-1)

	)

196 
	#INT_FAST16_MIN
 (-2147483647-1)

	)

197 
	#INT_FAST32_MIN
 (-2147483647-1)

	)

199 
	#INT_FAST64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

201 
	#INT_FAST8_MAX
 (127)

	)

202 #i‡
__WORDSIZE
 == 64

203 
	#INT_FAST16_MAX
 (9223372036854775807L)

	)

204 
	#INT_FAST32_MAX
 (9223372036854775807L)

	)

206 
	#INT_FAST16_MAX
 (2147483647)

	)

207 
	#INT_FAST32_MAX
 (2147483647)

	)

209 
	#INT_FAST64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

212 
	#UINT_FAST8_MAX
 (255)

	)

213 #i‡
__WORDSIZE
 == 64

214 
	#UINT_FAST16_MAX
 (18446744073709551615UL)

	)

215 
	#UINT_FAST32_MAX
 (18446744073709551615UL)

	)

217 
	#UINT_FAST16_MAX
 (4294967295U)

	)

218 
	#UINT_FAST32_MAX
 (4294967295U)

	)

220 
	#UINT_FAST64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

224 #i‡
__WORDSIZE
 == 64

225 
	#INTPTR_MIN
 (-9223372036854775807L-1)

	)

226 
	#INTPTR_MAX
 (9223372036854775807L)

	)

227 
	#UINTPTR_MAX
 (18446744073709551615UL)

	)

229 
	#INTPTR_MIN
 (-2147483647-1)

	)

230 
	#INTPTR_MAX
 (2147483647)

	)

231 
	#UINTPTR_MAX
 (4294967295U)

	)

236 
	#INTMAX_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

238 
	#INTMAX_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

241 
	#UINTMAX_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

247 #i‡
__WORDSIZE
 == 64

248 
	#PTRDIFF_MIN
 (-9223372036854775807L-1)

	)

249 
	#PTRDIFF_MAX
 (9223372036854775807L)

	)

251 
	#PTRDIFF_MIN
 (-2147483647-1)

	)

252 
	#PTRDIFF_MAX
 (2147483647)

	)

256 
	#SIG_ATOMIC_MIN
 (-2147483647-1)

	)

257 
	#SIG_ATOMIC_MAX
 (2147483647)

	)

260 #i‡
__WORDSIZE
 == 64

261 
	#SIZE_MAX
 (18446744073709551615UL)

	)

263 #ifde‡
__WORDSIZE32_SIZE_ULONG


264 
	#SIZE_MAX
 (4294967295UL)

	)

266 
	#SIZE_MAX
 (4294967295U)

	)

271 #i‚de‡
WCHAR_MIN


273 
	#WCHAR_MIN
 
__WCHAR_MIN


	)

274 
	#WCHAR_MAX
 
__WCHAR_MAX


	)

278 
	#WINT_MIN
 (0u)

	)

279 
	#WINT_MAX
 (4294967295u)

	)

282 
	#INT8_C
(
c
Ë
	)
c

283 
	#INT16_C
(
c
Ë
	)
c

284 
	#INT32_C
(
c
Ë
	)
c

285 #i‡
__WORDSIZE
 == 64

286 
	#INT64_C
(
c
Ë¯## 
L


	)

288 
	#INT64_C
(
c
Ë¯## 
LL


	)

292 
	#UINT8_C
(
c
Ë
	)
c

293 
	#UINT16_C
(
c
Ë
	)
c

294 
	#UINT32_C
(
c
Ë¯## 
U


	)

295 #i‡
__WORDSIZE
 == 64

296 
	#UINT64_C
(
c
Ë¯## 
UL


	)

298 
	#UINT64_C
(
c
Ë¯## 
ULL


	)

302 #i‡
__WORDSIZE
 == 64

303 
	#INTMAX_C
(
c
Ë¯## 
L


	)

304 
	#UINTMAX_C
(
c
Ë¯## 
UL


	)

306 
	#INTMAX_C
(
c
Ë¯## 
LL


	)

307 
	#UINTMAX_C
(
c
Ë¯## 
ULL


	)

	@/usr/include/stdio.h

23 #i‚de‡
_STDIO_H


25 #i‡!
deföed
 
__√ed_FILE
 && !deföed 
__√ed___FILE


26 
	#_STDIO_H
 1

	)

27 
	~<„©uªs.h
>

29 
	g__BEGIN_DECLS


31 
	#__√ed_size_t


	)

32 
	#__√ed_NULL


	)

33 
	~<°ddef.h
>

35 
	~<bôs/ty≥s.h
>

36 
	#__√ed_FILE


	)

37 
	#__√ed___FILE


	)

41 #i‡!
deföed
 
__FILE_deföed
 && deföed 
__√ed_FILE


44 
	g_IO_FILE
;

46 
__BEGIN_NAMESPACE_STD


48 
_IO_FILE
 
	tFILE
;

49 
	g__END_NAMESPACE_STD


50 #i‡
deföed
 
__USE_LARGEFILE64
 || deföed 
__USE_POSIX
 \

51 || 
deföed
 
	g__USE_ISOC99
 || deföed 
	g__USE_XOPEN
 \

52 || 
deföed
 
__USE_POSIX2


53 
	$__USING_NAMESPACE_STD
(
FILE
)

56 
	#__FILE_deföed
 1

	)

58 #unde‡
__√ed_FILE


61 #i‡!
deföed
 
____FILE_deföed
 && deföed 
__√ed___FILE


64 
_IO_FILE
 
	t__FILE
;

66 
	#____FILE_deföed
 1

	)

68 #unde‡
__√ed___FILE


71 #ifdef 
_STDIO_H


72 
	#_STDIO_USES_IOSTREAM


	)

74 
	~<libio.h
>

76 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


77 #ifde‡
__GNUC__


78 #i‚de‡
_VA_LIST_DEFINED


79 
_G_va_li°
 
	tva_li°
;

80 
	#_VA_LIST_DEFINED


	)

83 
	~<°d¨g.h
>

87 #ifde‡
__USE_XOPEN2K8


88 #i‚de‡
__off_t_deföed


89 #i‚de‡
__USE_FILE_OFFSET64


90 
__off_t
 
	toff_t
;

92 
__off64_t
 
	toff_t
;

94 
	#__off_t_deföed


	)

96 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


97 
__off64_t
 
	toff64_t
;

98 
	#__off64_t_deföed


	)

101 #i‚de‡
__ssize_t_deföed


102 
__ssize_t
 
	tssize_t
;

103 
	#__ssize_t_deföed


	)

108 
__BEGIN_NAMESPACE_STD


109 #i‚de‡
__USE_FILE_OFFSET64


110 
_G_Âos_t
 
	tÂos_t
;

112 
_G_Âos64_t
 
	tÂos_t
;

114 
__END_NAMESPACE_STD


115 #ifde‡
__USE_LARGEFILE64


116 
_G_Âos64_t
 
	tÂos64_t
;

120 
	#_IOFBF
 0

	)

121 
	#_IOLBF
 1

	)

122 
	#_IONBF
 2

	)

126 #i‚de‡
BUFSIZ


127 
	#BUFSIZ
 
_IO_BUFSIZ


	)

133 #i‚de‡
EOF


134 
	#EOF
 (-1)

	)

140 
	#SEEK_SET
 0

	)

141 
	#SEEK_CUR
 1

	)

142 
	#SEEK_END
 2

	)

143 #ifde‡
__USE_GNU


144 
	#SEEK_DATA
 3

	)

145 
	#SEEK_HOLE
 4

	)

149 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


151 
	#P_tmpdú
 "/tmp"

	)

164 
	~<bôs/°dio_lim.h
>

168 
_IO_FILE
 *
°dö
;

169 
_IO_FILE
 *
°dout
;

170 
_IO_FILE
 *
°dîr
;

172 
	#°dö
 
°dö


	)

173 
	#°dout
 
°dout


	)

174 
	#°dîr
 
°dîr


	)

176 
__BEGIN_NAMESPACE_STD


178 
	$ªmove
 (c⁄° *
__fûíame
Ë
__THROW
;

180 
	$ª«me
 (c⁄° *
__ﬁd
, c⁄° *
__√w
Ë
__THROW
;

181 
__END_NAMESPACE_STD


183 #ifde‡
__USE_ATFILE


185 
	$ª«mót
 (
__ﬁdfd
, c⁄° *
__ﬁd
, 
__√wfd
,

186 c⁄° *
__√w
Ë
__THROW
;

189 
__BEGIN_NAMESPACE_STD


194 #i‚de‡
__USE_FILE_OFFSET64


195 
FILE
 *
	$tmpfûe
 (Ë
__wur
;

197 #ifde‡
__REDIRECT


198 
FILE
 *
	`__REDIRECT
 (
tmpfûe
, (), 
tmpfûe64
Ë
__wur
;

200 
	#tmpfûe
 
tmpfûe64


	)

204 #ifde‡
__USE_LARGEFILE64


205 
FILE
 *
	$tmpfûe64
 (Ë
__wur
;

209 *
	$tm≤am
 (*
__s
Ë
__THROW
 
__wur
;

210 
__END_NAMESPACE_STD


212 #ifde‡
__USE_MISC


215 *
	$tm≤am_r
 (*
__s
Ë
__THROW
 
__wur
;

219 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


227 *
	$ãm≤am
 (c⁄° *
__dú
, c⁄° *
__pfx
)

228 
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

232 
__BEGIN_NAMESPACE_STD


237 
	`f˛o£
 (
FILE
 *
__°ªam
);

242 
	`fÊush
 (
FILE
 *
__°ªam
);

243 
__END_NAMESPACE_STD


245 #ifde‡
__USE_MISC


252 
	`fÊush_u∆ocked
 (
FILE
 *
__°ªam
);

255 #ifde‡
__USE_GNU


262 
	`f˛o£Æl
 ();

266 
__BEGIN_NAMESPACE_STD


267 #i‚de‡
__USE_FILE_OFFSET64


272 
FILE
 *
	$f›í
 (c⁄° *
__ª°ri˘
 
__fûíame
,

273 c⁄° *
__ª°ri˘
 
__modes
Ë
__wur
;

278 
FILE
 *
	$‰e›í
 (c⁄° *
__ª°ri˘
 
__fûíame
,

279 c⁄° *
__ª°ri˘
 
__modes
,

280 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

282 #ifde‡
__REDIRECT


283 
FILE
 *
	`__REDIRECT
 (
f›í
, (c⁄° *
__ª°ri˘
 
__fûíame
,

284 c⁄° *
__ª°ri˘
 
__modes
), 
f›í64
)

285 
__wur
;

286 
FILE
 *
	`__REDIRECT
 (
‰e›í
, (c⁄° *
__ª°ri˘
 
__fûíame
,

287 c⁄° *
__ª°ri˘
 
__modes
,

288 
FILE
 *
__ª°ri˘
 
__°ªam
), 
‰e›í64
)

289 
__wur
;

291 
	#f›í
 
f›í64


	)

292 
	#‰e›í
 
‰e›í64


	)

295 
__END_NAMESPACE_STD


296 #ifde‡
__USE_LARGEFILE64


297 
FILE
 *
	$f›í64
 (c⁄° *
__ª°ri˘
 
__fûíame
,

298 c⁄° *
__ª°ri˘
 
__modes
Ë
__wur
;

299 
FILE
 *
	$‰e›í64
 (c⁄° *
__ª°ri˘
 
__fûíame
,

300 c⁄° *
__ª°ri˘
 
__modes
,

301 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

304 #ifdef 
__USE_POSIX


306 
FILE
 *
	$fd›í
 (
__fd
, c⁄° *
__modes
Ë
__THROW
 
__wur
;

309 #ifdef 
__USE_GNU


312 
FILE
 *
	$f›ícookõ
 (*
__ª°ri˘
 
__magic_cookõ
,

313 c⁄° *
__ª°ri˘
 
__modes
,

314 
_IO_cookõ_io_fun˘i⁄s_t
 
__io_funcs
Ë
__THROW
 
__wur
;

317 #ifde‡
__USE_XOPEN2K8


319 
FILE
 *
	$fmem›í
 (*
__s
, 
size_t
 
__Àn
, c⁄° *
__modes
)

320 
__THROW
 
__wur
;

325 
FILE
 *
	$›í_mem°ªam
 (**
__buÊoc
, 
size_t
 *
__sizñoc
Ë
__THROW
 
__wur
;

329 
__BEGIN_NAMESPACE_STD


332 
	$£tbuf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
Ë
__THROW
;

336 
	$£tvbuf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
,

337 
__modes
, 
size_t
 
__n
Ë
__THROW
;

338 
__END_NAMESPACE_STD


340 #ifdef 
__USE_MISC


343 
	$£tbuf„r
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
,

344 
size_t
 
__size
Ë
__THROW
;

347 
	$£éöebuf
 (
FILE
 *
__°ªam
Ë
__THROW
;

351 
__BEGIN_NAMESPACE_STD


356 
	`Ârötf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

357 c⁄° *
__ª°ri˘
 
__f‹m©
, ...);

362 
	`¥ötf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, ...);

364 
	$•rötf
 (*
__ª°ri˘
 
__s
,

365 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROWNL
;

371 
	`vÂrötf
 (
FILE
 *
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__f‹m©
,

372 
_G_va_li°
 
__¨g
);

377 
	`v¥ötf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
);

379 
	$v•rötf
 (*
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__f‹m©
,

380 
_G_va_li°
 
__¨g
Ë
__THROWNL
;

381 
__END_NAMESPACE_STD


383 #i‡
deföed
 
__USE_ISOC99
 || deföed 
__USE_UNIX98


384 
__BEGIN_NAMESPACE_C99


386 
	$¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxÀn
,

387 c⁄° *
__ª°ri˘
 
__f‹m©
, ...)

388 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 4)));

390 
	$v¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxÀn
,

391 c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

392 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 0)));

393 
__END_NAMESPACE_C99


396 #ifde‡
__USE_GNU


399 
	$va•rötf
 (**
__ª°ri˘
 
__±r
, c⁄° *__ª°ri˘ 
__f
,

400 
_G_va_li°
 
__¨g
)

401 
__THROWNL
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 0))Ë
__wur
;

402 
	$__a•rötf
 (**
__ª°ri˘
 
__±r
,

403 c⁄° *
__ª°ri˘
 
__fmt
, ...)

404 
__THROWNL
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 3))Ë
__wur
;

405 
	$a•rötf
 (**
__ª°ri˘
 
__±r
,

406 c⁄° *
__ª°ri˘
 
__fmt
, ...)

407 
__THROWNL
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 3))Ë
__wur
;

410 #ifde‡
__USE_XOPEN2K8


412 
	$vd¥ötf
 (
__fd
, c⁄° *
__ª°ri˘
 
__fmt
,

413 
_G_va_li°
 
__¨g
)

414 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 0)));

415 
	$d¥ötf
 (
__fd
, c⁄° *
__ª°ri˘
 
__fmt
, ...)

416 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

420 
__BEGIN_NAMESPACE_STD


425 
	$fsˇnf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

426 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

431 
	$sˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

433 
	$ssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

434 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

436 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

437 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

438 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

439 #ifde‡
__REDIRECT


443 
	`__REDIRECT
 (
fsˇnf
, (
FILE
 *
__ª°ri˘
 
__°ªam
,

444 c⁄° *
__ª°ri˘
 
__f‹m©
, ...),

445 
__isoc99_fsˇnf
Ë
__wur
;

446 
	`__REDIRECT
 (
sˇnf
, (c⁄° *
__ª°ri˘
 
__f‹m©
, ...),

447 
__isoc99_sˇnf
Ë
__wur
;

448 
	`__REDIRECT_NTH
 (
ssˇnf
, (c⁄° *
__ª°ri˘
 
__s
,

449 c⁄° *
__ª°ri˘
 
__f‹m©
, ...),

450 
__isoc99_ssˇnf
);

452 
	$__isoc99_fsˇnf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

453 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

454 
	$__isoc99_sˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

455 
	$__isoc99_ssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

456 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

457 
	#fsˇnf
 
__isoc99_fsˇnf


	)

458 
	#sˇnf
 
__isoc99_sˇnf


	)

459 
	#ssˇnf
 
__isoc99_ssˇnf


	)

463 
__END_NAMESPACE_STD


465 #ifdef 
__USE_ISOC99


466 
__BEGIN_NAMESPACE_C99


471 
	$vfsˇnf
 (
FILE
 *
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__f‹m©
,

472 
_G_va_li°
 
__¨g
)

473 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 2, 0))Ë
__wur
;

479 
	$vsˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

480 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 1, 0))Ë
__wur
;

483 
	$vssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

484 c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

485 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__sˇnf__
, 2, 0)));

487 #i‡!
deföed
 
__USE_GNU
 \

488 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

489 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

490 #ifde‡
__REDIRECT


494 
	`__REDIRECT
 (
vfsˇnf
,

495 (
FILE
 *
__ª°ri˘
 
__s
,

496 c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
),

497 
__isoc99_vfsˇnf
)

498 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 2, 0))Ë
__wur
;

499 
	`__REDIRECT
 (
vsˇnf
, (c⁄° *
__ª°ri˘
 
__f‹m©
,

500 
_G_va_li°
 
__¨g
), 
__isoc99_vsˇnf
)

501 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 1, 0))Ë
__wur
;

502 
	`__REDIRECT_NTH
 (
vssˇnf
,

503 (c⁄° *
__ª°ri˘
 
__s
,

504 c⁄° *
__ª°ri˘
 
__f‹m©
,

505 
_G_va_li°
 
__¨g
), 
__isoc99_vssˇnf
)

506 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__sˇnf__
, 2, 0)));

508 
	$__isoc99_vfsˇnf
 (
FILE
 *
__ª°ri˘
 
__s
,

509 c⁄° *
__ª°ri˘
 
__f‹m©
,

510 
_G_va_li°
 
__¨g
Ë
__wur
;

511 
	$__isoc99_vsˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
,

512 
_G_va_li°
 
__¨g
Ë
__wur
;

513 
	$__isoc99_vssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

514 c⁄° *
__ª°ri˘
 
__f‹m©
,

515 
_G_va_li°
 
__¨g
Ë
__THROW
;

516 
	#vfsˇnf
 
__isoc99_vfsˇnf


	)

517 
	#vsˇnf
 
__isoc99_vsˇnf


	)

518 
	#vssˇnf
 
__isoc99_vssˇnf


	)

522 
__END_NAMESPACE_C99


526 
__BEGIN_NAMESPACE_STD


531 
	`fgëc
 (
FILE
 *
__°ªam
);

532 
	`gëc
 (
FILE
 *
__°ªam
);

538 
	`gëch¨
 ();

539 
__END_NAMESPACE_STD


543 
	#gëc
(
_Â
Ë
	`_IO_gëc
 (_Â)

	)

545 #ifde‡
__USE_POSIX


550 
	`gëc_u∆ocked
 (
FILE
 *
__°ªam
);

551 
	`gëch¨_u∆ocked
 ();

554 #ifde‡
__USE_MISC


561 
	`fgëc_u∆ocked
 (
FILE
 *
__°ªam
);

565 
__BEGIN_NAMESPACE_STD


573 
	`Âutc
 (
__c
, 
FILE
 *
__°ªam
);

574 
	`putc
 (
__c
, 
FILE
 *
__°ªam
);

580 
	`putch¨
 (
__c
);

581 
__END_NAMESPACE_STD


585 
	#putc
(
_ch
, 
_Â
Ë
	`_IO_putc
 (_ch, _Â)

	)

587 #ifde‡
__USE_MISC


594 
	`Âutc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
);

597 #ifde‡
__USE_POSIX


602 
	`putc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
);

603 
	`putch¨_u∆ocked
 (
__c
);

607 #i‡
deföed
 
__USE_MISC
 \

608 || (
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
)

610 
	`gëw
 (
FILE
 *
__°ªam
);

613 
	`putw
 (
__w
, 
FILE
 *
__°ªam
);

617 
__BEGIN_NAMESPACE_STD


622 *
	$fgës
 (*
__ª°ri˘
 
__s
, 
__n
, 
FILE
 *__ª°ri˘ 
__°ªam
)

623 
__wur
;

625 #i‡!
deföed
 
__USE_ISOC11
 \

626 || (
deföed
 
__˝lu•lus
 && __cplusplus <= 201103L)

638 *
	$gës
 (*
__s
Ë
__wur
 
__©åibuã_dïªˇãd__
;

640 
__END_NAMESPACE_STD


642 #ifde‡
__USE_GNU


649 *
	$fgës_u∆ocked
 (*
__ª°ri˘
 
__s
, 
__n
,

650 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

654 #ifdef 
__USE_XOPEN2K8


665 
_IO_ssize_t
 
	$__gëdñim
 (**
__ª°ri˘
 
__löïå
,

666 
size_t
 *
__ª°ri˘
 
__n
, 
__dñimôî
,

667 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

668 
_IO_ssize_t
 
	$gëdñim
 (**
__ª°ri˘
 
__löïå
,

669 
size_t
 *
__ª°ri˘
 
__n
, 
__dñimôî
,

670 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

678 
_IO_ssize_t
 
	$gëlöe
 (**
__ª°ri˘
 
__löïå
,

679 
size_t
 *
__ª°ri˘
 
__n
,

680 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

684 
__BEGIN_NAMESPACE_STD


689 
	`Âuts
 (c⁄° *
__ª°ri˘
 
__s
, 
FILE
 *__ª°ri˘ 
__°ªam
);

695 
	`puts
 (c⁄° *
__s
);

702 
	`ungëc
 (
__c
, 
FILE
 *
__°ªam
);

709 
size_t
 
	$‰ód
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

710 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

715 
size_t
 
	`fwrôe
 (c⁄° *
__ª°ri˘
 
__±r
, size_à
__size
,

716 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__s
);

717 
__END_NAMESPACE_STD


719 #ifde‡
__USE_GNU


726 
	`Âuts_u∆ocked
 (c⁄° *
__ª°ri˘
 
__s
,

727 
FILE
 *
__ª°ri˘
 
__°ªam
);

730 #ifde‡
__USE_MISC


737 
size_t
 
	$‰ód_u∆ocked
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

738 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

739 
size_t
 
	`fwrôe_u∆ocked
 (c⁄° *
__ª°ri˘
 
__±r
, size_à
__size
,

740 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
);

744 
__BEGIN_NAMESPACE_STD


749 
	`f£ek
 (
FILE
 *
__°ªam
, 
__off
, 
__whí˚
);

754 
	$·ñl
 (
FILE
 *
__°ªam
Ë
__wur
;

759 
	`ªwöd
 (
FILE
 *
__°ªam
);

760 
__END_NAMESPACE_STD


767 #i‡
deföed
 
__USE_LARGEFILE
 || deföed 
__USE_XOPEN2K


768 #i‚de‡
__USE_FILE_OFFSET64


773 
	`f£eko
 (
FILE
 *
__°ªam
, 
__off_t
 
__off
, 
__whí˚
);

778 
__off_t
 
	$·ñlo
 (
FILE
 *
__°ªam
Ë
__wur
;

780 #ifde‡
__REDIRECT


781 
	`__REDIRECT
 (
f£eko
,

782 (
FILE
 *
__°ªam
, 
__off64_t
 
__off
, 
__whí˚
),

783 
f£eko64
);

784 
__off64_t
 
	`__REDIRECT
 (
·ñlo
, (
FILE
 *
__°ªam
), 
·ñlo64
);

786 
	#f£eko
 
f£eko64


	)

787 
	#·ñlo
 
·ñlo64


	)

792 
__BEGIN_NAMESPACE_STD


793 #i‚de‡
__USE_FILE_OFFSET64


798 
	`fgëpos
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
Âos_t
 *__ª°ri˘ 
__pos
);

803 
	`f£ços
 (
FILE
 *
__°ªam
, c⁄° 
Âos_t
 *
__pos
);

805 #ifde‡
__REDIRECT


806 
	`__REDIRECT
 (
fgëpos
, (
FILE
 *
__ª°ri˘
 
__°ªam
,

807 
Âos_t
 *
__ª°ri˘
 
__pos
), 
fgëpos64
);

808 
	`__REDIRECT
 (
f£ços
,

809 (
FILE
 *
__°ªam
, c⁄° 
Âos_t
 *
__pos
), 
f£ços64
);

811 
	#fgëpos
 
fgëpos64


	)

812 
	#f£ços
 
f£ços64


	)

815 
__END_NAMESPACE_STD


817 #ifde‡
__USE_LARGEFILE64


818 
	`f£eko64
 (
FILE
 *
__°ªam
, 
__off64_t
 
__off
, 
__whí˚
);

819 
__off64_t
 
	$·ñlo64
 (
FILE
 *
__°ªam
Ë
__wur
;

820 
	`fgëpos64
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
Âos64_t
 *__ª°ri˘ 
__pos
);

821 
	`f£ços64
 (
FILE
 *
__°ªam
, c⁄° 
Âos64_t
 *
__pos
);

824 
__BEGIN_NAMESPACE_STD


826 
	$˛óªº
 (
FILE
 *
__°ªam
Ë
__THROW
;

828 
	$„of
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

830 
	$„º‹
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

831 
__END_NAMESPACE_STD


833 #ifde‡
__USE_MISC


835 
	$˛óªº_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
;

836 
	$„of_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

837 
	$„º‹_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

841 
__BEGIN_NAMESPACE_STD


846 
	`≥º‹
 (c⁄° *
__s
);

847 
__END_NAMESPACE_STD


853 
	~<bôs/sys_îæi°.h
>

856 #ifdef 
__USE_POSIX


858 
	$fûío
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

861 #ifde‡
__USE_MISC


863 
	$fûío_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

867 #ifde‡
__USE_POSIX2


872 
FILE
 *
	$p›í
 (c⁄° *
__comm™d
, c⁄° *
__modes
Ë
__wur
;

878 
	`p˛o£
 (
FILE
 *
__°ªam
);

882 #ifdef 
__USE_POSIX


884 *
	$˘îmid
 (*
__s
Ë
__THROW
;

888 #ifde‡
__USE_XOPEN


890 *
	`cu£rid
 (*
__s
);

894 #ifdef 
__USE_GNU


895 
ob°ack
;

898 
	$ob°ack_¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

899 c⁄° *
__ª°ri˘
 
__f‹m©
, ...)

900 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

901 
	$ob°ack_v¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

902 c⁄° *
__ª°ri˘
 
__f‹m©
,

903 
_G_va_li°
 
__¨gs
)

904 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 0)));

908 #ifde‡
__USE_POSIX


912 
	$Êockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
;

916 
	$·rylockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

919 
	$fu∆ockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
;

922 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
 && !deföed 
__USE_GNU


926 
	#__√ed_gë›t


	)

927 
	~<gë›t.h
>

932 #ifde‡
__USE_EXTERN_INLINES


933 
	~<bôs/°dio.h
>

935 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


936 
	~<bôs/°dio2.h
>

938 #ifde‡
__LDBL_COMPAT


939 
	~<bôs/°dio-ldbl.h
>

942 
__END_DECLS


	@/usr/include/stdlib.h

22 #i‚def 
_STDLIB_H


24 
	~<„©uªs.h
>

27 
	#__√ed_size_t


	)

28 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


29 
	#__√ed_wch¨_t


	)

30 
	#__√ed_NULL


	)

32 
	~<°ddef.h
>

34 
	g__BEGIN_DECLS


36 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


37 
	#_STDLIB_H
 1

	)

39 #i‡(
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8
Ë&& !deföed 
_SYS_WAIT_H


41 
	~<bôs/waôÊags.h
>

42 
	~<bôs/waô°©us.h
>

44 #ifde‡
__USE_MISC


49 #i‡
deföed
 
__GNUC__
 && !deföed 
__˝lu•lus


50 
	#__WAIT_INT
(
°©us
) \

51 (
	`__exãnsi⁄__
 (((uni⁄ { 
	`__ty≥of
(
°©us
Ë
__ö
; 
__i
; }) \

52 { .
__ö
 = (
°©us
Ë}).
__i
))

	)

54 
	#__WAIT_INT
(
°©us
Ë(*(*Ë&(°©us))

	)

62 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2 || deföed 
__˝lu•lus


63 
	#__WAIT_STATUS
 *

	)

64 
	#__WAIT_STATUS_DEFN
 *

	)

69 
waô
 *
	m__u±r
;

70 *
	m__ùå
;

71 } 
	t__WAIT_STATUS
 
	t__©åibuã__
 ((
	t__å™•¨ít_uni⁄__
));

72 
	#__WAIT_STATUS_DEFN
 *

	)

77 
	#__WAIT_INT
(
°©us
Ë(°©us)

	)

78 
	#__WAIT_STATUS
 *

	)

79 
	#__WAIT_STATUS_DEFN
 *

	)

84 
	#WEXITSTATUS
(
°©us
Ë
	`__WEXITSTATUS
 (
	`__WAIT_INT
 (°©us))

	)

85 
	#WTERMSIG
(
°©us
Ë
	`__WTERMSIG
 (
	`__WAIT_INT
 (°©us))

	)

86 
	#WSTOPSIG
(
°©us
Ë
	`__WSTOPSIG
 (
	`__WAIT_INT
 (°©us))

	)

87 
	#WIFEXITED
(
°©us
Ë
	`__WIFEXITED
 (
	`__WAIT_INT
 (°©us))

	)

88 
	#WIFSIGNALED
(
°©us
Ë
	`__WIFSIGNALED
 (
	`__WAIT_INT
 (°©us))

	)

89 
	#WIFSTOPPED
(
°©us
Ë
	`__WIFSTOPPED
 (
	`__WAIT_INT
 (°©us))

	)

90 #ifde‡
__WIFCONTINUED


91 
	#WIFCONTINUED
(
°©us
Ë
	`__WIFCONTINUED
 (
	`__WAIT_INT
 (°©us))

	)

95 
__BEGIN_NAMESPACE_STD


99 
	mquŸ
;

100 
	mªm
;

101 } 
	tdiv_t
;

104 #i‚de‡
__ldiv_t_deföed


107 
	mquŸ
;

108 
	mªm
;

109 } 
	tldiv_t
;

110 
	#__ldiv_t_deföed
 1

	)

112 
	g__END_NAMESPACE_STD


114 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__Œdiv_t_deföed


115 
__BEGIN_NAMESPACE_C99


117 
__exãnsi⁄__
 struct

119 
	mquŸ
;

120 
	mªm
;

121 } 
	tŒdiv_t
;

122 
	#__Œdiv_t_deföed
 1

	)

123 
	g__END_NAMESPACE_C99


128 
	#RAND_MAX
 2147483647

	)

133 
	#EXIT_FAILURE
 1

	)

134 
	#EXIT_SUCCESS
 0

	)

138 
	#MB_CUR_MAX
 (
	`__˘y≥_gë_mb_cur_max
 ())

	)

139 
size_t
 
	$__˘y≥_gë_mb_cur_max
 (Ë
__THROW
 
__wur
;

142 
__BEGIN_NAMESPACE_STD


144 
	$©of
 (c⁄° *
__≈å
)

145 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

147 
	$©oi
 (c⁄° *
__≈å
)

148 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

150 
	$©ﬁ
 (c⁄° *
__≈å
)

151 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

152 
__END_NAMESPACE_STD


154 #ifde‡
__USE_ISOC99


155 
__BEGIN_NAMESPACE_C99


157 
__exãnsi⁄__
 
	$©ﬁl
 (c⁄° *
__≈å
)

158 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

159 
__END_NAMESPACE_C99


162 
__BEGIN_NAMESPACE_STD


164 
	$°πod
 (c⁄° *
__ª°ri˘
 
__≈å
,

165 **
__ª°ri˘
 
__íd±r
)

166 
__THROW
 
	`__n⁄nuŒ
 ((1));

167 
__END_NAMESPACE_STD


169 #ifdef 
__USE_ISOC99


170 
__BEGIN_NAMESPACE_C99


172 
	$°πof
 (c⁄° *
__ª°ri˘
 
__≈å
,

173 **
__ª°ri˘
 
__íd±r
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

175 
	$°πﬁd
 (c⁄° *
__ª°ri˘
 
__≈å
,

176 **
__ª°ri˘
 
__íd±r
)

177 
__THROW
 
	`__n⁄nuŒ
 ((1));

178 
__END_NAMESPACE_C99


181 
__BEGIN_NAMESPACE_STD


183 
	$°πﬁ
 (c⁄° *
__ª°ri˘
 
__≈å
,

184 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

185 
__THROW
 
	`__n⁄nuŒ
 ((1));

187 
	$°πoul
 (c⁄° *
__ª°ri˘
 
__≈å
,

188 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

189 
__THROW
 
	`__n⁄nuŒ
 ((1));

190 
__END_NAMESPACE_STD


192 #ifde‡
__USE_MISC


194 
__exãnsi⁄__


195 
	$°πoq
 (c⁄° *
__ª°ri˘
 
__≈å
,

196 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

197 
__THROW
 
	`__n⁄nuŒ
 ((1));

199 
__exãnsi⁄__


200 
	$°πouq
 (c⁄° *
__ª°ri˘
 
__≈å
,

201 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

202 
__THROW
 
	`__n⁄nuŒ
 ((1));

205 #ifde‡
__USE_ISOC99


206 
__BEGIN_NAMESPACE_C99


208 
__exãnsi⁄__


209 
	$°πﬁl
 (c⁄° *
__ª°ri˘
 
__≈å
,

210 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

211 
__THROW
 
	`__n⁄nuŒ
 ((1));

213 
__exãnsi⁄__


214 
	$°πouŒ
 (c⁄° *
__ª°ri˘
 
__≈å
,

215 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

216 
__THROW
 
	`__n⁄nuŒ
 ((1));

217 
__END_NAMESPACE_C99


221 #ifde‡
__USE_GNU


235 
	~<xloˇÀ.h
>

239 
	$°πﬁ_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

240 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

241 
__loˇÀ_t
 
__loc
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

243 
	$°πoul_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

244 **
__ª°ri˘
 
__íd±r
,

245 
__ba£
, 
__loˇÀ_t
 
__loc
)

246 
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

248 
__exãnsi⁄__


249 
	$°πﬁl_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

250 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

251 
__loˇÀ_t
 
__loc
)

252 
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

254 
__exãnsi⁄__


255 
	$°πouŒ_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

256 **
__ª°ri˘
 
__íd±r
,

257 
__ba£
, 
__loˇÀ_t
 
__loc
)

258 
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

260 
	$°πod_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

261 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

262 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

264 
	$°πof_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

265 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

266 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

268 
	$°πﬁd_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

269 **
__ª°ri˘
 
__íd±r
,

270 
__loˇÀ_t
 
__loc
)

271 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

275 #ifde‡
__USE_EXTERN_INLINES


276 
__BEGIN_NAMESPACE_STD


277 
__exã∫_ölöe
 

278 
	`__NTH
 (
	$©oi
 (c⁄° *
__≈å
))

280  (Ë
	`°πﬁ
 (
__≈å
, (**Ë
NULL
, 10);

281 
	}
}

282 
__exã∫_ölöe
 

283 
__NTH
 (
	$©ﬁ
 (c⁄° *
__≈å
))

285  
	`°πﬁ
 (
__≈å
, (**Ë
NULL
, 10);

286 
	}
}

287 
	g__END_NAMESPACE_STD


289 #ifde‡
__USE_ISOC99


290 
__BEGIN_NAMESPACE_C99


291 
__exãnsi⁄__
 
__exã∫_ölöe
 

292 
__NTH
 (
	$©ﬁl
 (c⁄° *
__≈å
))

294  
	`°πﬁl
 (
__≈å
, (**Ë
NULL
, 10);

295 
	}
}

296 
	g__END_NAMESPACE_C99


301 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


305 *
	$l64a
 (
__n
Ë
__THROW
 
__wur
;

308 
	$a64l
 (c⁄° *
__s
)

309 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

313 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


314 
	~<sys/ty≥s.h
>

321 
	$øndom
 (Ë
__THROW
;

324 
	$§™dom
 (
__£ed
Ë
__THROW
;

330 *
	$öô°©e
 (
__£ed
, *
__°©ebuf
,

331 
size_t
 
__°©ñí
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

335 *
	$£t°©e
 (*
__°©ebuf
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

338 #ifde‡
__USE_MISC


343 
	søndom_d©a


345 
öt32_t
 *
Âå
;

346 
öt32_t
 *
Ωå
;

347 
öt32_t
 *
°©e
;

348 
ønd_ty≥
;

349 
ønd_deg
;

350 
ønd_£p
;

351 
öt32_t
 *
íd_±r
;

354 
	$øndom_r
 (
øndom_d©a
 *
__ª°ri˘
 
__buf
,

355 
öt32_t
 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

357 
	$§™dom_r
 (
__£ed
, 
øndom_d©a
 *
__buf
)

358 
__THROW
 
	`__n⁄nuŒ
 ((2));

360 
	$öô°©e_r
 (
__£ed
, *
__ª°ri˘
 
__°©ebuf
,

361 
size_t
 
__°©ñí
,

362 
øndom_d©a
 *
__ª°ri˘
 
__buf
)

363 
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

365 
	$£t°©e_r
 (*
__ª°ri˘
 
__°©ebuf
,

366 
øndom_d©a
 *
__ª°ri˘
 
__buf
)

367 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

372 
__BEGIN_NAMESPACE_STD


374 
	$ønd
 (Ë
__THROW
;

376 
	$§™d
 (
__£ed
Ë
__THROW
;

377 
__END_NAMESPACE_STD


379 #ifde‡
__USE_POSIX


381 
	$ønd_r
 (*
__£ed
Ë
__THROW
;

385 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


389 
	$dønd48
 (Ë
__THROW
;

390 
	$î™d48
 (
__xsubi
[3]Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

393 
	$Ã™d48
 (Ë
__THROW
;

394 
	$ƒ™d48
 (
__xsubi
[3])

395 
__THROW
 
	`__n⁄nuŒ
 ((1));

398 
	$mønd48
 (Ë
__THROW
;

399 
	$jønd48
 (
__xsubi
[3])

400 
__THROW
 
	`__n⁄nuŒ
 ((1));

403 
	$§™d48
 (
__£edvÆ
Ë
__THROW
;

404 *
	$£ed48
 (
__£ed16v
[3])

405 
__THROW
 
	`__n⁄nuŒ
 ((1));

406 
	$lc⁄g48
 (
__∑øm
[7]Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

408 #ifde‡
__USE_MISC


412 
	sdønd48_d©a


414 
__x
[3];

415 
__ﬁd_x
[3];

416 
__c
;

417 
__öô
;

418 
__exãnsi⁄__
 
__a
;

423 
	$dønd48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

424 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

425 
	$î™d48_r
 (
__xsubi
[3],

426 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

427 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

430 
	$Ã™d48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

431 *
__ª°ri˘
 
__ªsu…
)

432 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

433 
	$ƒ™d48_r
 (
__xsubi
[3],

434 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

435 *
__ª°ri˘
 
__ªsu…
)

436 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

439 
	$mønd48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

440 *
__ª°ri˘
 
__ªsu…
)

441 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

442 
	$jønd48_r
 (
__xsubi
[3],

443 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

444 *
__ª°ri˘
 
__ªsu…
)

445 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

448 
	$§™d48_r
 (
__£edvÆ
, 
dønd48_d©a
 *
__buf„r
)

449 
__THROW
 
	`__n⁄nuŒ
 ((2));

451 
	$£ed48_r
 (
__£ed16v
[3],

452 
dønd48_d©a
 *
__buf„r
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

454 
	$lc⁄g48_r
 (
__∑øm
[7],

455 
dønd48_d©a
 *
__buf„r
)

456 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

462 #i‚de‡
__mÆloc_™d_ˇŒoc_deföed


463 
	#__mÆloc_™d_ˇŒoc_deföed


	)

464 
__BEGIN_NAMESPACE_STD


466 *
	$mÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

468 *
	$ˇŒoc
 (
size_t
 
__nmemb
, size_à
__size
)

469 
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

470 
__END_NAMESPACE_STD


473 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


474 
__BEGIN_NAMESPACE_STD


480 *
	$ªÆloc
 (*
__±r
, 
size_t
 
__size
)

481 
__THROW
 
__©åibuã_w¨n_unu£d_ªsu…__
;

483 
	$‰ì
 (*
__±r
Ë
__THROW
;

484 
__END_NAMESPACE_STD


486 #ifdef 
__USE_MISC


488 
	$c‰ì
 (*
__±r
Ë
__THROW
;

491 #ifde‡
__USE_MISC


492 
	~<Æloˇ.h
>

495 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K
) \

496 || 
deföed
 
__USE_MISC


498 *
	$vÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

501 #ifde‡
__USE_XOPEN2K


503 
	$posix_memÆign
 (**
__mem±r
, 
size_t
 
__Æignmít
, size_à
__size
)

504 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

507 #ifde‡
__USE_ISOC11


509 *
	$Æig√d_Æloc
 (
size_t
 
__Æignmít
, size_à
__size
)

510 
__THROW
 
__©åibuã_mÆloc__
 
	`__©åibuã_Æloc_size__
 ((2)Ë
__wur
;

513 
__BEGIN_NAMESPACE_STD


515 
	$ab‹t
 (Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

519 
	$©exô
 ((*
__func
Ë()Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

521 #i‡
deföed
 
__USE_ISOC11
 || deföed 
__USE_ISOCXX11


523 #ifde‡
__˝lu•lus


524 "C++" 
	$©_quick_exô
 ((*
__func
) ())

525 
__THROW
 
	`__asm
 ("©_quick_exô"Ë
	`__n⁄nuŒ
 ((1));

527 
	$©_quick_exô
 ((*
__func
Ë()Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

530 
__END_NAMESPACE_STD


532 #ifdef 
__USE_MISC


535 
	$⁄_exô
 ((*
__func
Ë(
__°©us
, *
__¨g
), *__arg)

536 
__THROW
 
	`__n⁄nuŒ
 ((1));

539 
__BEGIN_NAMESPACE_STD


543 
	$exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

545 #i‡
deföed
 
__USE_ISOC11
 || deföed 
__USE_ISOCXX11


549 
	$quick_exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

551 
__END_NAMESPACE_STD


553 #ifde‡
__USE_ISOC99


554 
__BEGIN_NAMESPACE_C99


557 
	$_Exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

558 
__END_NAMESPACE_C99


562 
__BEGIN_NAMESPACE_STD


564 *
	$gëív
 (c⁄° *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

565 
__END_NAMESPACE_STD


567 #ifde‡
__USE_GNU


570 *
	$£cuª_gëív
 (c⁄° *
__«me
)

571 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

574 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


578 
	$puãnv
 (*
__°rög
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

581 #ifde‡
__USE_XOPEN2K


584 
	$£ãnv
 (c⁄° *
__«me
, c⁄° *
__vÆue
, 
__ª∂a˚
)

585 
__THROW
 
	`__n⁄nuŒ
 ((2));

588 
	$un£ãnv
 (c⁄° *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

591 #ifdef 
__USE_MISC


595 
	$˛óªnv
 (Ë
__THROW
;

599 #i‡
deföed
 
__USE_MISC
 \

600 || (
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
)

606 *
	$mkãmp
 (*
__ãm∂©e
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

609 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


618 #i‚de‡
__USE_FILE_OFFSET64


619 
	$mk°emp
 (*
__ãm∂©e
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

621 #ifde‡
__REDIRECT


622 
	`__REDIRECT
 (
mk°emp
, (*
__ãm∂©e
), 
mk°emp64
)

623 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

625 
	#mk°emp
 
mk°emp64


	)

628 #ifde‡
__USE_LARGEFILE64


629 
	$mk°emp64
 (*
__ãm∂©e
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

633 #ifde‡
__USE_MISC


640 #i‚de‡
__USE_FILE_OFFSET64


641 
	$mk°emps
 (*
__ãm∂©e
, 
__suffixÀn
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

643 #ifde‡
__REDIRECT


644 
	`__REDIRECT
 (
mk°emps
, (*
__ãm∂©e
, 
__suffixÀn
),

645 
mk°emps64
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

647 
	#mk°emps
 
mk°emps64


	)

650 #ifde‡
__USE_LARGEFILE64


651 
	$mk°emps64
 (*
__ãm∂©e
, 
__suffixÀn
)

652 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

656 #ifde‡
__USE_XOPEN2K8


662 *
	$mkdãmp
 (*
__ãm∂©e
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

665 #ifde‡
__USE_GNU


672 #i‚de‡
__USE_FILE_OFFSET64


673 
	$mko°emp
 (*
__ãm∂©e
, 
__Êags
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

675 #ifde‡
__REDIRECT


676 
	`__REDIRECT
 (
mko°emp
, (*
__ãm∂©e
, 
__Êags
), 
mko°emp64
)

677 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

679 
	#mko°emp
 
mko°emp64


	)

682 #ifde‡
__USE_LARGEFILE64


683 
	$mko°emp64
 (*
__ãm∂©e
, 
__Êags
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

692 #i‚de‡
__USE_FILE_OFFSET64


693 
	$mko°emps
 (*
__ãm∂©e
, 
__suffixÀn
, 
__Êags
)

694 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

696 #ifde‡
__REDIRECT


697 
	`__REDIRECT
 (
mko°emps
, (*
__ãm∂©e
, 
__suffixÀn
,

698 
__Êags
), 
mko°emps64
)

699 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

701 
	#mko°emps
 
mko°emps64


	)

704 #ifde‡
__USE_LARGEFILE64


705 
	$mko°emps64
 (*
__ãm∂©e
, 
__suffixÀn
, 
__Êags
)

706 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

711 
__BEGIN_NAMESPACE_STD


716 
	$sy°em
 (c⁄° *
__comm™d
Ë
__wur
;

717 
__END_NAMESPACE_STD


720 #ifdef 
__USE_GNU


723 *
	$ˇn⁄iˇlize_fûe_«me
 (c⁄° *
__«me
)

724 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

727 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


733 *
	$ªÆ∑th
 (c⁄° *
__ª°ri˘
 
__«me
,

734 *
__ª°ri˘
 
__ªsﬁved
Ë
__THROW
 
__wur
;

739 #i‚de‡
__COMPAR_FN_T


740 
	#__COMPAR_FN_T


	)

741 (*
	t__com∑r_‚_t
) (const *, const *);

743 #ifdef 
__USE_GNU


744 
__com∑r_‚_t
 
	tcom∑ris⁄_‚_t
;

747 #ifde‡
__USE_GNU


748 (*
	t__com∑r_d_‚_t
) (const *, const *, *);

751 
__BEGIN_NAMESPACE_STD


754 *
	$b£¨ch
 (c⁄° *
__key
, c⁄° *
__ba£
,

755 
size_t
 
__nmemb
, size_à
__size
, 
__com∑r_‚_t
 
__com∑r
)

756 
	`__n⁄nuŒ
 ((1, 2, 5)Ë
__wur
;

758 #ifde‡
__USE_EXTERN_INLINES


759 
	~<bôs/°dlib-b£¨ch.h
>

764 
	$qs‹t
 (*
__ba£
, 
size_t
 
__nmemb
, size_à
__size
,

765 
__com∑r_‚_t
 
__com∑r
Ë
	`__n⁄nuŒ
 ((1, 4));

766 #ifde‡
__USE_GNU


767 
	$qs‹t_r
 (*
__ba£
, 
size_t
 
__nmemb
, size_à
__size
,

768 
__com∑r_d_‚_t
 
__com∑r
, *
__¨g
)

769 
	`__n⁄nuŒ
 ((1, 4));

774 
	$abs
 (
__x
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

775 
	$œbs
 (
__x
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

776 
__END_NAMESPACE_STD


778 #ifde‡
__USE_ISOC99


779 
__exãnsi⁄__
 
	$Œabs
 (
__x
)

780 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

784 
__BEGIN_NAMESPACE_STD


788 
div_t
 
	$div
 (
__numî
, 
__díom
)

789 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

790 
ldiv_t
 
	$ldiv
 (
__numî
, 
__díom
)

791 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

792 
__END_NAMESPACE_STD


794 #ifde‡
__USE_ISOC99


795 
__BEGIN_NAMESPACE_C99


796 
__exãnsi⁄__
 
Œdiv_t
 
	$Œdiv
 (
__numî
,

797 
__díom
)

798 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

799 
__END_NAMESPACE_C99


803 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

804 || 
deföed
 
__USE_MISC


811 *
	$ecvt
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

812 *
__ª°ri˘
 
__sign
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

817 *
	$fcvt
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

818 *
__ª°ri˘
 
__sign
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

823 *
	$gcvt
 (
__vÆue
, 
__ndigô
, *
__buf
)

824 
__THROW
 
	`__n⁄nuŒ
 ((3)Ë
__wur
;

827 #ifde‡
__USE_MISC


829 *
	$qecvt
 (
__vÆue
, 
__ndigô
,

830 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
)

831 
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

832 *
	$qfcvt
 (
__vÆue
, 
__ndigô
,

833 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
)

834 
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

835 *
	$qgcvt
 (
__vÆue
, 
__ndigô
, *
__buf
)

836 
__THROW
 
	`__n⁄nuŒ
 ((3)Ë
__wur
;

841 
	$ecvt_r
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

842 *
__ª°ri˘
 
__sign
, *__ª°ri˘ 
__buf
,

843 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

844 
	$fcvt_r
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

845 *
__ª°ri˘
 
__sign
, *__ª°ri˘ 
__buf
,

846 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

848 
	$qecvt_r
 (
__vÆue
, 
__ndigô
,

849 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
,

850 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

851 
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

852 
	$qfcvt_r
 (
__vÆue
, 
__ndigô
,

853 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
,

854 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

855 
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

859 
__BEGIN_NAMESPACE_STD


862 
	$mbÀn
 (c⁄° *
__s
, 
size_t
 
__n
Ë
__THROW
;

865 
	$mbtowc
 (
wch¨_t
 *
__ª°ri˘
 
__pwc
,

866 c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
Ë
__THROW
;

869 
	$w˘omb
 (*
__s
, 
wch¨_t
 
__wch¨
Ë
__THROW
;

873 
size_t
 
	$mb°owcs
 (
wch¨_t
 *
__ª°ri˘
 
__pwcs
,

874 c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
Ë
__THROW
;

876 
size_t
 
	$wc°ombs
 (*
__ª°ri˘
 
__s
,

877 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__pwcs
, 
size_t
 
__n
)

878 
__THROW
;

879 
__END_NAMESPACE_STD


882 #ifde‡
__USE_MISC


887 
	$Ωm©ch
 (c⁄° *
__ª•⁄£
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

891 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


898 
	$gësub›t
 (**
__ª°ri˘
 
__›ti⁄p
,

899 *c⁄° *
__ª°ri˘
 
__tokís
,

900 **
__ª°ri˘
 
__vÆuï
)

901 
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3)Ë
__wur
;

905 #ifde‡
__USE_XOPEN


907 
	$£tkey
 (c⁄° *
__key
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

913 #ifde‡
__USE_XOPEN2KXSI


915 
	$posix_›í±
 (
__oÊag
Ë
__wur
;

918 #ifde‡
__USE_XOPEN


923 
	$gø¡±
 (
__fd
Ë
__THROW
;

927 
	$u∆ock±
 (
__fd
Ë
__THROW
;

932 *
	$±¢ame
 (
__fd
Ë
__THROW
 
__wur
;

935 #ifde‡
__USE_GNU


939 
	$±¢ame_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
)

940 
__THROW
 
	`__n⁄nuŒ
 ((2));

943 
	`gë±
 ();

946 #ifde‡
__USE_MISC


950 
	$gëlﬂdavg
 (
__lﬂdavg
[], 
__√Àm
)

951 
__THROW
 
	`__n⁄nuŒ
 ((1));

954 
	~<bôs/°dlib-Êﬂt.h
>

957 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


958 
	~<bôs/°dlib.h
>

960 #ifde‡
__LDBL_COMPAT


961 
	~<bôs/°dlib-ldbl.h
>

965 #unde‡
__√ed_mÆloc_™d_ˇŒoc


967 
__END_DECLS


	@/usr/include/string.h

22 #i‚def 
_STRING_H


23 
	#_STRING_H
 1

	)

25 
	~<„©uªs.h
>

27 
	g__BEGIN_DECLS


30 
	#__√ed_size_t


	)

31 
	#__√ed_NULL


	)

32 
	~<°ddef.h
>

39 #i‡
deföed
 
__˝lu•lus
 && (__˝lu•lu†>199711L || 
__GNUC_PREREQ
 (4, 4))

40 
	#__CORRECT_ISO_CPP_STRING_H_PROTO


	)

44 
__BEGIN_NAMESPACE_STD


46 *
	$mem˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

47 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

50 *
	$memmove
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
)

51 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

52 
__END_NAMESPACE_STD


57 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


58 *
	$memc˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

59 
__c
, 
size_t
 
__n
)

60 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

64 
__BEGIN_NAMESPACE_STD


66 *
	$mem£t
 (*
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

69 
	$memcmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

70 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

73 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


76 *
	`memchr
 (*
__s
, 
__c
, 
size_t
 
__n
)

77 
__THROW
 
	`__asm
 ("memchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

78 c⁄° *
	`memchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

79 
__THROW
 
	`__asm
 ("memchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

81 #ifde‡
__OPTIMIZE__


82 
__exã∫_Æways_ölöe
 *

83 
	`memchr
 (*
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW


85  
	`__buûtö_memchr
 (
__s
, 
__c
, 
__n
);

88 
__exã∫_Æways_ölöe
 const *

89 
	`memchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW


91  
	`__buûtö_memchr
 (
__s
, 
__c
, 
__n
);

94 
	}
}

96 *
	$memchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

97 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

99 
__END_NAMESPACE_STD


101 #ifde‡
__USE_GNU


104 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


105 "C++" *
	$øwmemchr
 (*
__s
, 
__c
)

106 
__THROW
 
	`__asm
 ("øwmemchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

107 "C++" c⁄° *
	$øwmemchr
 (c⁄° *
__s
, 
__c
)

108 
__THROW
 
	`__asm
 ("øwmemchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

110 *
	$øwmemchr
 (c⁄° *
__s
, 
__c
)

111 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

115 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


116 "C++" *
	$memrchr
 (*
__s
, 
__c
, 
size_t
 
__n
)

117 
__THROW
 
	`__asm
 ("memrchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

118 "C++" c⁄° *
	$memrchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

119 
__THROW
 
	`__asm
 ("memrchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

121 *
	$memrchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

122 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

127 
__BEGIN_NAMESPACE_STD


129 *
	$°r˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

130 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

132 *
	$°∫˝y
 (*
__ª°ri˘
 
__de°
,

133 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

134 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

137 *
	$°rˇt
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

138 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

140 *
	$°∫ˇt
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

141 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

144 
	$°rcmp
 (c⁄° *
__s1
, c⁄° *
__s2
)

145 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

147 
	$°∫cmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

148 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

151 
	$°rcﬁl
 (c⁄° *
__s1
, c⁄° *
__s2
)

152 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

154 
size_t
 
	$°rx‰m
 (*
__ª°ri˘
 
__de°
,

155 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

156 
__THROW
 
	`__n⁄nuŒ
 ((2));

157 
__END_NAMESPACE_STD


159 #ifde‡
__USE_XOPEN2K8


163 
	~<xloˇÀ.h
>

166 
	$°rcﬁl_l
 (c⁄° *
__s1
, c⁄° *
__s2
, 
__loˇÀ_t
 
__l
)

167 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 3));

169 
size_t
 
	$°rx‰m_l
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
,

170 
__loˇÀ_t
 
__l
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

173 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


175 *
	$°rdup
 (c⁄° *
__s
)

176 
__THROW
 
__©åibuã_mÆloc__
 
	`__n⁄nuŒ
 ((1));

182 #i‡
deföed
 
__USE_XOPEN2K8


183 *
	$°∫dup
 (c⁄° *
__°rög
, 
size_t
 
__n
)

184 
__THROW
 
__©åibuã_mÆloc__
 
	`__n⁄nuŒ
 ((1));

187 #i‡
deföed
 
__USE_GNU
 && deföed 
__GNUC__


189 
	#°rdu∑
(
s
) \

190 (
__exãnsi⁄__
 \

192 c⁄° *
__ﬁd
 = (
s
); \

193 
size_t
 
__Àn
 = 
	`°æí
 (
__ﬁd
) + 1; \

194 *
__√w
 = (*Ë
	`__buûtö_Æloˇ
 (
__Àn
); \

195 (*Ë
	`mem˝y
 (
__√w
, 
__ﬁd
, 
__Àn
); \

196 
	}
}))

	)

199 
	#°∫du∑
(
s
, 
n
) \

200 (
__exãnsi⁄__
 \

202 c⁄° *
__ﬁd
 = (
s
); \

203 
size_t
 
__Àn
 = 
	`°∫Àn
 (
__ﬁd
, (
n
)); \

204 *
__√w
 = (*Ë
	`__buûtö_Æloˇ
 (
__Àn
 + 1); \

205 
__√w
[
__Àn
] = '\0'; \

206 (*Ë
	`mem˝y
 (
__√w
, 
__ﬁd
, 
__Àn
); \

207 }))

	)

210 
	g__BEGIN_NAMESPACE_STD


212 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


215 *
°rchr
 (*
__s
, 
__c
)

216 
__THROW
 
__asm
 ("°rchr"Ë
__©åibuã_puª__
 
__n⁄nuŒ
 ((1));

217 c⁄° *
°rchr
 (c⁄° *
__s
, 
__c
)

218 
__THROW
 
__asm
 ("°rchr"Ë
__©åibuã_puª__
 
__n⁄nuŒ
 ((1));

220 #ifde‡
__OPTIMIZE__


221 
__exã∫_Æways_ölöe
 *

222 
°rchr
 (*
__s
, 
__c
Ë
	g__THROW


224  
__buûtö_°rchr
 (
__s
, 
__c
);

227 
__exã∫_Æways_ölöe
 const *

228 
°rchr
 (c⁄° *
__s
, 
__c
Ë
	g__THROW


230  
__buûtö_°rchr
 (
__s
, 
__c
);

235 *
	$°rchr
 (c⁄° *
__s
, 
__c
)

236 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

239 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


242 *
	`°ºchr
 (*
__s
, 
__c
)

243 
__THROW
 
	`__asm
 ("°ºchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

244 c⁄° *
	`°ºchr
 (c⁄° *
__s
, 
__c
)

245 
__THROW
 
	`__asm
 ("°ºchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

247 #ifde‡
__OPTIMIZE__


248 
__exã∫_Æways_ölöe
 *

249 
	`°ºchr
 (*
__s
, 
__c
Ë
__THROW


251  
	`__buûtö_°ºchr
 (
__s
, 
__c
);

254 
__exã∫_Æways_ölöe
 const *

255 
	`°ºchr
 (c⁄° *
__s
, 
__c
Ë
__THROW


257  
	`__buûtö_°ºchr
 (
__s
, 
__c
);

260 
	}
}

262 *
	$°ºchr
 (c⁄° *
__s
, 
__c
)

263 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

265 
__END_NAMESPACE_STD


267 #ifde‡
__USE_GNU


270 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


271 "C++" *
	$°rch∫ul
 (*
__s
, 
__c
)

272 
__THROW
 
	`__asm
 ("°rch∫ul"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

273 "C++" c⁄° *
	$°rch∫ul
 (c⁄° *
__s
, 
__c
)

274 
__THROW
 
	`__asm
 ("°rch∫ul"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

276 *
	$°rch∫ul
 (c⁄° *
__s
, 
__c
)

277 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

281 
__BEGIN_NAMESPACE_STD


284 
size_t
 
	$°rc•n
 (c⁄° *
__s
, c⁄° *
__ªje˘
)

285 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

288 
size_t
 
	$°r•n
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

289 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

291 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


294 *
	`°Ωbrk
 (*
__s
, c⁄° *
__ac˚±
)

295 
__THROW
 
	`__asm
 ("°Ωbrk"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

296 c⁄° *
	`°Ωbrk
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

297 
__THROW
 
	`__asm
 ("°Ωbrk"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

299 #ifde‡
__OPTIMIZE__


300 
__exã∫_Æways_ölöe
 *

301 
	`°Ωbrk
 (*
__s
, c⁄° *
__ac˚±
Ë
__THROW


303  
	`__buûtö_°Ωbrk
 (
__s
, 
__ac˚±
);

306 
__exã∫_Æways_ölöe
 const *

307 
	`°Ωbrk
 (c⁄° *
__s
, c⁄° *
__ac˚±
Ë
__THROW


309  
	`__buûtö_°Ωbrk
 (
__s
, 
__ac˚±
);

312 
	}
}

314 *
	$°Ωbrk
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

315 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

318 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


321 *
	`°r°r
 (*
__hay°ack
, c⁄° *
__√edÀ
)

322 
__THROW
 
	`__asm
 ("°r°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

323 c⁄° *
	`°r°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
)

324 
__THROW
 
	`__asm
 ("°r°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

326 #ifde‡
__OPTIMIZE__


327 
__exã∫_Æways_ölöe
 *

328 
	`°r°r
 (*
__hay°ack
, c⁄° *
__√edÀ
Ë
__THROW


330  
	`__buûtö_°r°r
 (
__hay°ack
, 
__√edÀ
);

333 
__exã∫_Æways_ölöe
 const *

334 
	`°r°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
Ë
__THROW


336  
	`__buûtö_°r°r
 (
__hay°ack
, 
__√edÀ
);

339 
	}
}

341 *
	$°r°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
)

342 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

347 *
	$°πok
 (*
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__dñim
)

348 
__THROW
 
	`__n⁄nuŒ
 ((2));

349 
__END_NAMESPACE_STD


353 *
	$__°πok_r
 (*
__ª°ri˘
 
__s
,

354 c⁄° *
__ª°ri˘
 
__dñim
,

355 **
__ª°ri˘
 
__ßve_±r
)

356 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

357 #ifde‡
__USE_POSIX


358 *
	$°πok_r
 (*
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__dñim
,

359 **
__ª°ri˘
 
__ßve_±r
)

360 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

363 #ifde‡
__USE_GNU


365 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


366 "C++" *
	$°rˇ£°r
 (*
__hay°ack
, c⁄° *
__√edÀ
)

367 
__THROW
 
	`__asm
 ("°rˇ£°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

368 "C++" c⁄° *
	$°rˇ£°r
 (c⁄° *
__hay°ack
,

369 c⁄° *
__√edÀ
)

370 
__THROW
 
	`__asm
 ("°rˇ£°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

372 *
	$°rˇ£°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
)

373 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

377 #ifde‡
__USE_GNU


381 *
	$memmem
 (c⁄° *
__hay°ack
, 
size_t
 
__hay°ackÀn
,

382 c⁄° *
__√edÀ
, 
size_t
 
__√edÀÀn
)

383 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 3));

387 *
	$__memp˝y
 (*
__ª°ri˘
 
__de°
,

388 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

389 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

390 *
	$memp˝y
 (*
__ª°ri˘
 
__de°
,

391 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

392 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

396 
__BEGIN_NAMESPACE_STD


398 
size_t
 
	$°æí
 (c⁄° *
__s
)

399 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

400 
__END_NAMESPACE_STD


402 #ifdef 
__USE_XOPEN2K8


405 
size_t
 
	$°∫Àn
 (c⁄° *
__°rög
, 
size_t
 
__maxÀn
)

406 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

410 
__BEGIN_NAMESPACE_STD


412 *
	$°ªº‹
 (
__î∫um
Ë
__THROW
;

413 
__END_NAMESPACE_STD


414 #ifde‡
__USE_XOPEN2K


422 #i‡
deföed
 
__USE_XOPEN2K
 && !deföed 
__USE_GNU


425 #ifde‡
__REDIRECT_NTH


426 
	`__REDIRECT_NTH
 (
°ªº‹_r
,

427 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
),

428 
__xpg_°ªº‹_r
Ë
	`__n⁄nuŒ
 ((2));

430 
	$__xpg_°ªº‹_r
 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
)

431 
__THROW
 
	`__n⁄nuŒ
 ((2));

432 
	#°ªº‹_r
 
__xpg_°ªº‹_r


	)

437 *
	$°ªº‹_r
 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
)

438 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

442 #ifde‡
__USE_XOPEN2K8


444 *
	$°ªº‹_l
 (
__î∫um
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

450 
	$__bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

452 #ifde‡
__USE_MISC


454 
	$bc›y
 (c⁄° *
__§c
, *
__de°
, 
size_t
 
__n
)

455 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

458 
	$bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

461 
	$bcmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

462 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

465 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


468 *
	`ödex
 (*
__s
, 
__c
)

469 
__THROW
 
	`__asm
 ("ödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

470 c⁄° *
	`ödex
 (c⁄° *
__s
, 
__c
)

471 
__THROW
 
	`__asm
 ("ödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

473 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__CORRECT_ISO_CPP_STRINGS_H_PROTO


474 
__exã∫_Æways_ölöe
 *

475 
	`ödex
 (*
__s
, 
__c
Ë
__THROW


477  
	`__buûtö_ödex
 (
__s
, 
__c
);

480 
__exã∫_Æways_ölöe
 const *

481 
	`ödex
 (c⁄° *
__s
, 
__c
Ë
__THROW


483  
	`__buûtö_ödex
 (
__s
, 
__c
);

486 
	}
}

488 *
	$ödex
 (c⁄° *
__s
, 
__c
)

489 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

493 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


496 *
	`rödex
 (*
__s
, 
__c
)

497 
__THROW
 
	`__asm
 ("rödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

498 c⁄° *
	`rödex
 (c⁄° *
__s
, 
__c
)

499 
__THROW
 
	`__asm
 ("rödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

501 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__CORRECT_ISO_CPP_STRINGS_H_PROTO


502 
__exã∫_Æways_ölöe
 *

503 
	`rödex
 (*
__s
, 
__c
Ë
__THROW


505  
	`__buûtö_rödex
 (
__s
, 
__c
);

508 
__exã∫_Æways_ölöe
 const *

509 
	`rödex
 (c⁄° *
__s
, 
__c
Ë
__THROW


511  
	`__buûtö_rödex
 (
__s
, 
__c
);

514 
	}
}

516 *
	$rödex
 (c⁄° *
__s
, 
__c
)

517 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

522 
	$ffs
 (
__i
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

526 #ifdef 
__USE_GNU


527 
	$ff¶
 (
__l
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

528 
__exãnsi⁄__
 
	$ff¶l
 (
__Œ
)

529 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

533 
	$°rˇ£cmp
 (c⁄° *
__s1
, c⁄° *
__s2
)

534 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

537 
	$°∫ˇ£cmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

538 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

541 #ifdef 
__USE_GNU


544 
	$°rˇ£cmp_l
 (c⁄° *
__s1
, c⁄° *
__s2
,

545 
__loˇÀ_t
 
__loc
)

546 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 3));

548 
	$°∫ˇ£cmp_l
 (c⁄° *
__s1
, c⁄° *
__s2
,

549 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
)

550 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 4));

553 #ifdef 
__USE_MISC


556 *
	$°r£p
 (**
__ª°ri˘
 
__°rögp
,

557 c⁄° *
__ª°ri˘
 
__dñim
)

558 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

561 #ifdef 
__USE_XOPEN2K8


563 *
	$°rsig«l
 (
__sig
Ë
__THROW
;

566 *
	$__°p˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

567 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

568 *
	$°p˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

569 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

573 *
	$__°≤˝y
 (*
__ª°ri˘
 
__de°
,

574 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

575 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

576 *
	$°≤˝y
 (*
__ª°ri˘
 
__de°
,

577 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

578 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

581 #ifdef 
__USE_GNU


583 
	$°rvîscmp
 (c⁄° *
__s1
, c⁄° *
__s2
)

584 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

587 *
	$°r‰y
 (*
__°rög
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

590 *
	$mem‰ob
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

592 #i‚de‡
ba£«me


597 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


598 "C++" *
	$ba£«me
 (*
__fûíame
)

599 
__THROW
 
	`__asm
 ("ba£«me"Ë
	`__n⁄nuŒ
 ((1));

600 "C++" c⁄° *
	$ba£«me
 (c⁄° *
__fûíame
)

601 
__THROW
 
	`__asm
 ("ba£«me"Ë
	`__n⁄nuŒ
 ((1));

603 *
	$ba£«me
 (c⁄° *
__fûíame
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

609 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

610 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__OPTIMIZE_SIZE__
 \

611 && !
deföed
 
__NO_INLINE__
 && !deföed 
__˝lu•lus


631 
	~<bôs/°rög.h
>

634 
	~<bôs/°rög2.h
>

637 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


639 
	~<bôs/°rög3.h
>

643 
__END_DECLS


	@/usr/include/strings.h

18 #i‚def 
_STRINGS_H


19 
	#_STRINGS_H
 1

	)

24 #i‡!
deföed
 
_STRING_H
 || !deföed 
__USE_MISC


26 
	~<„©uªs.h
>

27 
	#__√ed_size_t


	)

28 
	~<°ddef.h
>

35 #i‡
deföed
 
__˝lu•lus
 && (__˝lu•lu†>199711L || 
__GNUC_PREREQ
 (4, 4))

36 
	#__CORRECT_ISO_CPP_STRINGS_H_PROTO


	)

39 
	g__BEGIN_DECLS


41 #i‡
deföed
 
__USE_MISC
 || !deföed 
__USE_XOPEN2K8


43 
	$bcmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

44 
__THROW
 
__©åibuã_puª__
;

47 
	$bc›y
 (c⁄° *
__§c
, *
__de°
, 
size_t
 
__n
Ë
__THROW
;

50 
	$bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
;

53 #ifde‡
__CORRECT_ISO_CPP_STRINGS_H_PROTO


56 *
	`ödex
 (*
__s
, 
__c
)

57 
__THROW
 
	`__asm
 ("ödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

58 c⁄° *
	`ödex
 (c⁄° *
__s
, 
__c
)

59 
__THROW
 
	`__asm
 ("ödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

61 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__CORRECT_ISO_CPP_STRING_H_PROTO


62 
__exã∫_Æways_ölöe
 *

63 
	`ödex
 (*
__s
, 
__c
Ë
__THROW


65  
	`__buûtö_ödex
 (
__s
, 
__c
);

68 
__exã∫_Æways_ölöe
 const *

69 
	`ödex
 (c⁄° *
__s
, 
__c
Ë
__THROW


71  
	`__buûtö_ödex
 (
__s
, 
__c
);

74 
	}
}

76 *
	$ödex
 (c⁄° *
__s
, 
__c
)

77 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

81 #ifde‡
__CORRECT_ISO_CPP_STRINGS_H_PROTO


84 *
	`rödex
 (*
__s
, 
__c
)

85 
__THROW
 
	`__asm
 ("rödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

86 c⁄° *
	`rödex
 (c⁄° *
__s
, 
__c
)

87 
__THROW
 
	`__asm
 ("rödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

89 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__CORRECT_ISO_CPP_STRING_H_PROTO


90 
__exã∫_Æways_ölöe
 *

91 
	`rödex
 (*
__s
, 
__c
Ë
__THROW


93  
	`__buûtö_rödex
 (
__s
, 
__c
);

96 
__exã∫_Æways_ölöe
 const *

97 
	`rödex
 (c⁄° *
__s
, 
__c
Ë
__THROW


99  
	`__buûtö_rödex
 (
__s
, 
__c
);

102 
	}
}

104 *
	$rödex
 (c⁄° *
__s
, 
__c
)

105 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

109 #i‡
deföed
 
__USE_MISC
 || !deföed 
__USE_XOPEN2K8
 || deföed 
__USE_XOPEN2K8XSI


112 
	$ffs
 (
__i
Ë
__THROW
 
	`__©åibuã__
 ((const));

116 
	$°rˇ£cmp
 (c⁄° *
__s1
, c⁄° *
__s2
)

117 
__THROW
 
__©åibuã_puª__
;

120 
	$°∫ˇ£cmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

121 
__THROW
 
__©åibuã_puª__
;

123 #ifdef 
__USE_XOPEN2K8


127 
	~<xloˇÀ.h
>

131 
	$°rˇ£cmp_l
 (c⁄° *
__s1
, c⁄° *
__s2
, 
__loˇÀ_t
 
__loc
)

132 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 3));

134 
	$°∫ˇ£cmp_l
 (c⁄° *
__s1
, c⁄° *
__s2
,

135 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
)

136 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 4));

139 
__END_DECLS


	@/usr/include/time.h

22 #i‚def 
_TIME_H


24 #i‡(! 
deföed
 
__√ed_time_t
 && !deföed 
__√ed_˛ock_t
 && \

25 ! 
deföed
 
	g__√ed_time•ec
)

26 
	#_TIME_H
 1

	)

27 
	~<„©uªs.h
>

29 
	g__BEGIN_DECLS


33 #ifdef 
_TIME_H


35 
	#__√ed_size_t


	)

36 
	#__√ed_NULL


	)

37 
	~<°ddef.h
>

41 
	~<bôs/time.h
>

44 #i‡!
deföed
 
__STRICT_ANSI__
 && !deföed 
__USE_XOPEN2K


45 #i‚de‡
CLK_TCK


46 
	#CLK_TCK
 
CLOCKS_PER_SEC


	)

52 #i‡!
deföed
 
__˛ock_t_deföed
 && (deföed 
_TIME_H
 || deföed 
__√ed_˛ock_t
)

53 
	#__˛ock_t_deföed
 1

	)

55 
	~<bôs/ty≥s.h
>

57 
__BEGIN_NAMESPACE_STD


59 
__˛ock_t
 
	t˛ock_t
;

60 
	g__END_NAMESPACE_STD


61 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_POSIX


62 
	$__USING_NAMESPACE_STD
(
˛ock_t
)

66 #unde‡
__√ed_˛ock_t


68 #i‡!
deföed
 
__time_t_deföed
 && (deföed 
_TIME_H
 || deföed 
__√ed_time_t
)

69 
	#__time_t_deföed
 1

	)

71 
	~<bôs/ty≥s.h
>

73 
__BEGIN_NAMESPACE_STD


75 
__time_t
 
	ttime_t
;

76 
__END_NAMESPACE_STD


77 #ifde‡
__USE_POSIX


78 
	$__USING_NAMESPACE_STD
(
time_t
)

82 #unde‡
__√ed_time_t


84 #i‡!
deföed
 
__˛ockid_t_deföed
 && \

85 ((
deföed
 
_TIME_H
 && deföed 
__USE_POSIX199309
Ë|| deföed 
__√ed_˛ockid_t
)

86 
	#__˛ockid_t_deföed
 1

	)

88 
	~<bôs/ty≥s.h
>

91 
__˛ockid_t
 
	t˛ockid_t
;

94 #unde‡
__˛ockid_time_t


96 #i‡!
deföed
 
__timî_t_deföed
 && \

97 ((
deföed
 
_TIME_H
 && deföed 
__USE_POSIX199309
Ë|| deföed 
__√ed_timî_t
)

98 
	#__timî_t_deföed
 1

	)

100 
	~<bôs/ty≥s.h
>

103 
__timî_t
 
	ttimî_t
;

106 #unde‡
__√ed_timî_t


109 #i‡(!
deföed
 
__time•ec_deföed
 \

110 && ((
deföed
 
_TIME_H
 \

111 && (
deföed
 
__USE_POSIX199309
 \

112 || 
deföed
 
__USE_ISOC11
)) \

113 || 
deföed
 
__√ed_time•ec
))

114 
	#__time•ec_deföed
 1

	)

116 
	~<bôs/ty≥s.h
>

120 
	stime•ec


122 
__time_t
 
tv_£c
;

123 
__sysˇŒ_¶⁄g_t
 
tv_n£c
;

127 #unde‡
__√ed_time•ec


130 #ifdef 
_TIME_H


131 
__BEGIN_NAMESPACE_STD


133 
	stm


135 
tm_£c
;

136 
tm_mö
;

137 
tm_hour
;

138 
tm_mday
;

139 
tm_m⁄
;

140 
tm_yór
;

141 
tm_wday
;

142 
tm_yday
;

143 
tm_isd°
;

145 #ifdef 
__USE_MISC


146 
tm_gmtoff
;

147 c⁄° *
tm_z⁄e
;

149 
__tm_gmtoff
;

150 c⁄° *
__tm_z⁄e
;

153 
__END_NAMESPACE_STD


154 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_POSIX


155 
	$__USING_NAMESPACE_STD
(
tm
)

159 #ifde‡
__USE_POSIX199309


161 
	sôimî•ec


163 
time•ec
 
ô_öãrvÆ
;

164 
time•ec
 
ô_vÆue
;

168 
sigevít
;

172 #ifde‡
__USE_XOPEN2K


173 #i‚de‡
__pid_t_deföed


174 
__pid_t
 
	tpid_t
;

175 
	#__pid_t_deföed


	)

180 #ifde‡
__USE_ISOC11


182 
	#TIME_UTC
 1

	)

186 
__BEGIN_NAMESPACE_STD


189 
˛ock_t
 
	$˛ock
 (Ë
__THROW
;

192 
time_t
 
	$time
 (
time_t
 *
__timî
Ë
__THROW
;

195 
	$dif·ime
 (
time_t
 
__time1
,Åime_à
__time0
)

196 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

199 
time_t
 
	$mktime
 (
tm
 *
__ç
Ë
__THROW
;

205 
size_t
 
	$°r·ime
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

206 c⁄° *
__ª°ri˘
 
__f‹m©
,

207 c⁄° 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

208 
__END_NAMESPACE_STD


210 #ifde‡
__USE_XOPEN


213 *
	$°Ωtime
 (c⁄° *
__ª°ri˘
 
__s
,

214 c⁄° *
__ª°ri˘
 
__fmt
, 
tm
 *
__ç
)

215 
__THROW
;

218 #ifde‡
__USE_XOPEN2K8


221 
	~<xloˇÀ.h
>

223 
size_t
 
	$°r·ime_l
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

224 c⁄° *
__ª°ri˘
 
__f‹m©
,

225 c⁄° 
tm
 *
__ª°ri˘
 
__ç
,

226 
__loˇÀ_t
 
__loc
Ë
__THROW
;

229 #ifde‡
__USE_GNU


230 *
	$°Ωtime_l
 (c⁄° *
__ª°ri˘
 
__s
,

231 c⁄° *
__ª°ri˘
 
__fmt
, 
tm
 *
__ç
,

232 
__loˇÀ_t
 
__loc
Ë
__THROW
;

236 
__BEGIN_NAMESPACE_STD


239 
tm
 *
	$gmtime
 (c⁄° 
time_t
 *
__timî
Ë
__THROW
;

243 
tm
 *
	$loˇ…ime
 (c⁄° 
time_t
 *
__timî
Ë
__THROW
;

244 
__END_NAMESPACE_STD


246 #ifde‡
__USE_POSIX


249 
tm
 *
	$gmtime_r
 (c⁄° 
time_t
 *
__ª°ri˘
 
__timî
,

250 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

254 
tm
 *
	$loˇ…ime_r
 (c⁄° 
time_t
 *
__ª°ri˘
 
__timî
,

255 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

258 
__BEGIN_NAMESPACE_STD


261 *
	$as˘ime
 (c⁄° 
tm
 *
__ç
Ë
__THROW
;

264 *
	$˘ime
 (c⁄° 
time_t
 *
__timî
Ë
__THROW
;

265 
__END_NAMESPACE_STD


267 #ifde‡
__USE_POSIX


272 *
	$as˘ime_r
 (c⁄° 
tm
 *
__ª°ri˘
 
__ç
,

273 *
__ª°ri˘
 
__buf
Ë
__THROW
;

276 *
	$˘ime_r
 (c⁄° 
time_t
 *
__ª°ri˘
 
__timî
,

277 *
__ª°ri˘
 
__buf
Ë
__THROW
;

282 *
__tz«me
[2];

283 
__daylight
;

284 
__timez⁄e
;

287 #ifdef 
__USE_POSIX


289 *
tz«me
[2];

293 
	$tz£t
 (Ë
__THROW
;

296 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


297 
daylight
;

298 
timez⁄e
;

301 #ifde‡
__USE_MISC


304 
	$°ime
 (c⁄° 
time_t
 *
__whí
Ë
__THROW
;

310 
	#__i¶óp
(
yór
) \

311 ((
yór
Ë% 4 =0 && ((yórË% 100 !0 || (yórË% 400 =0))

	)

314 #ifde‡
__USE_MISC


319 
time_t
 
	$timegm
 (
tm
 *
__ç
Ë
__THROW
;

322 
time_t
 
	$timñoˇl
 (
tm
 *
__ç
Ë
__THROW
;

325 
	$dysize
 (
__yór
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

329 #ifde‡
__USE_POSIX199309


334 
	`«no¶ìp
 (c⁄° 
time•ec
 *
__ªque°ed_time
,

335 
time•ec
 *
__ªmaöög
);

339 
	$˛ock_gëªs
 (
˛ockid_t
 
__˛ock_id
, 
time•ec
 *
__ªs
Ë
__THROW
;

342 
	$˛ock_gëtime
 (
˛ockid_t
 
__˛ock_id
, 
time•ec
 *
__ç
Ë
__THROW
;

345 
	$˛ock_£âime
 (
˛ockid_t
 
__˛ock_id
, c⁄° 
time•ec
 *
__ç
)

346 
__THROW
;

348 #ifde‡
__USE_XOPEN2K


353 
	`˛ock_«no¶ìp
 (
˛ockid_t
 
__˛ock_id
, 
__Êags
,

354 c⁄° 
time•ec
 *
__ªq
,

355 
time•ec
 *
__ªm
);

358 
	$˛ock_gë˝u˛ockid
 (
pid_t
 
__pid
, 
˛ockid_t
 *
__˛ock_id
Ë
__THROW
;

363 
	$timî_¸óã
 (
˛ockid_t
 
__˛ock_id
,

364 
sigevít
 *
__ª°ri˘
 
__evp
,

365 
timî_t
 *
__ª°ri˘
 
__timîid
Ë
__THROW
;

368 
	$timî_dñëe
 (
timî_t
 
__timîid
Ë
__THROW
;

371 
	$timî_£âime
 (
timî_t
 
__timîid
, 
__Êags
,

372 c⁄° 
ôimî•ec
 *
__ª°ri˘
 
__vÆue
,

373 
ôimî•ec
 *
__ª°ri˘
 
__ovÆue
Ë
__THROW
;

376 
	$timî_gëtime
 (
timî_t
 
__timîid
, 
ôimî•ec
 *
__vÆue
)

377 
__THROW
;

380 
	$timî_gëovîrun
 (
timî_t
 
__timîid
Ë
__THROW
;

384 #ifde‡
__USE_ISOC11


386 
	$time•ec_gë
 (
time•ec
 *
__ts
, 
__ba£
)

387 
__THROW
 
	`__n⁄nuŒ
 ((1));

391 #ifde‡
__USE_XOPEN_EXTENDED


403 
gëd©e_îr
;

412 
tm
 *
	`gëd©e
 (c⁄° *
__°rög
);

415 #ifde‡
__USE_GNU


426 
	`gëd©e_r
 (c⁄° *
__ª°ri˘
 
__°rög
,

427 
tm
 *
__ª°ri˘
 
__ªsbuÂ
);

430 
__END_DECLS


	@/usr/include/unistd.h

22 #i‚def 
_UNISTD_H


23 
	#_UNISTD_H
 1

	)

25 
	~<„©uªs.h
>

27 
	g__BEGIN_DECLS


32 #ifde‡
__USE_XOPEN2K8


34 
	#_POSIX_VERSION
 200809L

	)

35 #ñi‡
deföed
 
__USE_XOPEN2K


37 
	#_POSIX_VERSION
 200112L

	)

38 #ñi‡
deföed
 
__USE_POSIX199506


40 
	#_POSIX_VERSION
 199506L

	)

41 #ñi‡
deföed
 
__USE_POSIX199309


43 
	#_POSIX_VERSION
 199309L

	)

46 
	#_POSIX_VERSION
 199009L

	)

52 #ifde‡
__USE_XOPEN2K8


53 
	#__POSIX2_THIS_VERSION
 200809L

	)

55 #ñi‡
deföed
 
__USE_XOPEN2K


57 
	#__POSIX2_THIS_VERSION
 200112L

	)

58 #ñi‡
deföed
 
__USE_POSIX199506


60 
	#__POSIX2_THIS_VERSION
 199506L

	)

63 
	#__POSIX2_THIS_VERSION
 199209L

	)

67 
	#_POSIX2_VERSION
 
__POSIX2_THIS_VERSION


	)

71 
	#_POSIX2_C_BIND
 
__POSIX2_THIS_VERSION


	)

75 
	#_POSIX2_C_DEV
 
__POSIX2_THIS_VERSION


	)

79 
	#_POSIX2_SW_DEV
 
__POSIX2_THIS_VERSION


	)

83 
	#_POSIX2_LOCALEDEF
 
__POSIX2_THIS_VERSION


	)

86 #ifde‡
__USE_XOPEN2K8


87 
	#_XOPEN_VERSION
 700

	)

88 #ñi‡
deföed
 
__USE_XOPEN2K


89 
	#_XOPEN_VERSION
 600

	)

90 #ñi‡
deföed
 
__USE_UNIX98


91 
	#_XOPEN_VERSION
 500

	)

93 
	#_XOPEN_VERSION
 4

	)

97 
	#_XOPEN_XCU_VERSION
 4

	)

100 
	#_XOPEN_XPG2
 1

	)

101 
	#_XOPEN_XPG3
 1

	)

102 
	#_XOPEN_XPG4
 1

	)

105 
	#_XOPEN_UNIX
 1

	)

108 
	#_XOPEN_CRYPT
 1

	)

112 
	#_XOPEN_ENH_I18N
 1

	)

115 
	#_XOPEN_LEGACY
 1

	)

202 
	~<bôs/posix_›t.h
>

205 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


206 
	~<bôs/ívú⁄míts.h
>

210 
	#STDIN_FILENO
 0

	)

211 
	#STDOUT_FILENO
 1

	)

212 
	#STDERR_FILENO
 2

	)

217 
	~<bôs/ty≥s.h
>

219 #i‚def 
__ssize_t_deföed


220 
__ssize_t
 
	tssize_t
;

221 
	#__ssize_t_deföed


	)

224 
	#__√ed_size_t


	)

225 
	#__√ed_NULL


	)

226 
	~<°ddef.h
>

228 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


231 #i‚de‡
__gid_t_deföed


232 
__gid_t
 
	tgid_t
;

233 
	#__gid_t_deföed


	)

236 #i‚de‡
__uid_t_deföed


237 
__uid_t
 
	tuid_t
;

238 
	#__uid_t_deföed


	)

241 #i‚de‡
__off_t_deföed


242 #i‚de‡
__USE_FILE_OFFSET64


243 
__off_t
 
	toff_t
;

245 
__off64_t
 
	toff_t
;

247 
	#__off_t_deföed


	)

249 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


250 
__off64_t
 
	toff64_t
;

251 
	#__off64_t_deföed


	)

254 #i‚de‡
__u£c⁄ds_t_deföed


255 
__u£c⁄ds_t
 
	tu£c⁄ds_t
;

256 
	#__u£c⁄ds_t_deföed


	)

259 #i‚de‡
__pid_t_deföed


260 
__pid_t
 
	tpid_t
;

261 
	#__pid_t_deföed


	)

265 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


266 #i‚de‡
__öçå_t_deföed


267 
__öçå_t
 
	töçå_t
;

268 
	#__öçå_t_deföed


	)

272 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


273 #i‚de‡
__sockÀn_t_deföed


274 
__sockÀn_t
 
	tsockÀn_t
;

275 
	#__sockÀn_t_deföed


	)

281 
	#R_OK
 4

	)

282 
	#W_OK
 2

	)

283 
	#X_OK
 1

	)

284 
	#F_OK
 0

	)

287 
	$ac˚ss
 (c⁄° *
__«me
, 
__ty≥
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

289 #ifde‡
__USE_GNU


292 
	$euidac˚ss
 (c⁄° *
__«me
, 
__ty≥
)

293 
__THROW
 
	`__n⁄nuŒ
 ((1));

296 
	$óc˚ss
 (c⁄° *
__«me
, 
__ty≥
)

297 
__THROW
 
	`__n⁄nuŒ
 ((1));

300 #ifde‡
__USE_ATFILE


304 
	$Ác˚sßt
 (
__fd
, c⁄° *
__fûe
, 
__ty≥
, 
__Êag
)

305 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

310 #i‚def 
_STDIO_H


311 
	#SEEK_SET
 0

	)

312 
	#SEEK_CUR
 1

	)

313 
	#SEEK_END
 2

	)

314 #ifde‡
__USE_GNU


315 
	#SEEK_DATA
 3

	)

316 
	#SEEK_HOLE
 4

	)

320 #i‡
deföed
 
__USE_MISC
 && !deföed 
L_SET


322 
	#L_SET
 
SEEK_SET


	)

323 
	#L_INCR
 
SEEK_CUR


	)

324 
	#L_XTND
 
SEEK_END


	)

333 #i‚de‡
__USE_FILE_OFFSET64


334 
__off_t
 
	$l£ek
 (
__fd
, 
__off_t
 
__off£t
, 
__whí˚
Ë
__THROW
;

336 #ifde‡
__REDIRECT_NTH


337 
__off64_t
 
	`__REDIRECT_NTH
 (
l£ek
,

338 (
__fd
, 
__off64_t
 
__off£t
, 
__whí˚
),

339 
l£ek64
);

341 
	#l£ek
 
l£ek64


	)

344 #ifde‡
__USE_LARGEFILE64


345 
__off64_t
 
	$l£ek64
 (
__fd
, 
__off64_t
 
__off£t
, 
__whí˚
)

346 
__THROW
;

353 
	`˛o£
 (
__fd
);

360 
ssize_t
 
	$ªad
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
Ë
__wur
;

366 
ssize_t
 
	$wrôe
 (
__fd
, c⁄° *
__buf
, 
size_t
 
__n
Ë
__wur
;

368 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8


369 #i‚de‡
__USE_FILE_OFFSET64


376 
ssize_t
 
	$¥ód
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

377 
__off_t
 
__off£t
Ë
__wur
;

384 
ssize_t
 
	$pwrôe
 (
__fd
, c⁄° *
__buf
, 
size_t
 
__n
,

385 
__off_t
 
__off£t
Ë
__wur
;

387 #ifde‡
__REDIRECT


388 
ssize_t
 
	`__REDIRECT
 (
¥ód
, (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

389 
__off64_t
 
__off£t
),

390 
¥ód64
Ë
__wur
;

391 
ssize_t
 
	`__REDIRECT
 (
pwrôe
, (
__fd
, c⁄° *
__buf
,

392 
size_t
 
__nbyãs
, 
__off64_t
 
__off£t
),

393 
pwrôe64
Ë
__wur
;

395 
	#¥ód
 
¥ód64


	)

396 
	#pwrôe
 
pwrôe64


	)

400 #ifde‡
__USE_LARGEFILE64


404 
ssize_t
 
	$¥ód64
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

405 
__off64_t
 
__off£t
Ë
__wur
;

408 
ssize_t
 
	$pwrôe64
 (
__fd
, c⁄° *
__buf
, 
size_t
 
__n
,

409 
__off64_t
 
__off£t
Ë
__wur
;

417 
	$pùe
 (
__pùedes
[2]Ë
__THROW
 
__wur
;

419 #ifde‡
__USE_GNU


422 
	$pùe2
 (
__pùedes
[2], 
__Êags
Ë
__THROW
 
__wur
;

432 
	$Æ¨m
 (
__£c⁄ds
Ë
__THROW
;

444 
	`¶ìp
 (
__£c⁄ds
);

446 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

447 || 
deföed
 
__USE_MISC


452 
__u£c⁄ds_t
 
	$uÆ¨m
 (
__u£c⁄ds_t
 
__vÆue
, __u£c⁄ds_à
__öãrvÆ
)

453 
__THROW
;

460 
	`u¶ìp
 (
__u£c⁄ds_t
 
__u£c⁄ds
);

469 
	`∑u£
 ();

473 
	$chown
 (c⁄° *
__fûe
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
)

474 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

476 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


478 
	$fchown
 (
__fd
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
Ë
__THROW
 
__wur
;

483 
	$lchown
 (c⁄° *
__fûe
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
)

484 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

488 #ifde‡
__USE_ATFILE


491 
	$fchow«t
 (
__fd
, c⁄° *
__fûe
, 
__uid_t
 
__ow√r
,

492 
__gid_t
 
__group
, 
__Êag
)

493 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

497 
	$chdú
 (c⁄° *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

499 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


501 
	$fchdú
 (
__fd
Ë
__THROW
 
__wur
;

511 *
	$gëcwd
 (*
__buf
, 
size_t
 
__size
Ë
__THROW
 
__wur
;

513 #ifdef 
__USE_GNU


517 *
	$gë_cuºít_dú_«me
 (Ë
__THROW
;

520 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

521 || 
deföed
 
__USE_MISC


525 *
	$gëwd
 (*
__buf
)

526 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__©åibuã_dïªˇãd__
 
__wur
;

531 
	$dup
 (
__fd
Ë
__THROW
 
__wur
;

534 
	$dup2
 (
__fd
, 
__fd2
Ë
__THROW
;

536 #ifde‡
__USE_GNU


539 
	$dup3
 (
__fd
, 
__fd2
, 
__Êags
Ë
__THROW
;

543 **
__ívú⁄
;

544 #ifde‡
__USE_GNU


545 **
ívú⁄
;

551 
	$execve
 (c⁄° *
__∑th
, *c⁄° 
__¨gv
[],

552 *c⁄° 
__ívp
[]Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

554 #ifde‡
__USE_XOPEN2K8


557 
	$„xecve
 (
__fd
, *c⁄° 
__¨gv
[], *c⁄° 
__ívp
[])

558 
__THROW
 
	`__n⁄nuŒ
 ((2));

563 
	$execv
 (c⁄° *
__∑th
, *c⁄° 
__¨gv
[])

564 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

568 
	$exe˛e
 (c⁄° *
__∑th
, c⁄° *
__¨g
, ...)

569 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

573 
	$exe˛
 (c⁄° *
__∑th
, c⁄° *
__¨g
, ...)

574 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

578 
	$execvp
 (c⁄° *
__fûe
, *c⁄° 
__¨gv
[])

579 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

584 
	$exe˛p
 (c⁄° *
__fûe
, c⁄° *
__¨g
, ...)

585 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

587 #ifde‡
__USE_GNU


590 
	$execv≥
 (c⁄° *
__fûe
, *c⁄° 
__¨gv
[],

591 *c⁄° 
__ívp
[])

592 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

596 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


598 
	$ni˚
 (
__öc
Ë
__THROW
 
__wur
;

603 
	$_exô
 (
__°©us
Ë
	`__©åibuã__
 ((
__n‹ëu∫__
));

609 
	~<bôs/c⁄‚ame.h
>

612 
	$∑thc⁄f
 (c⁄° *
__∑th
, 
__«me
)

613 
__THROW
 
	`__n⁄nuŒ
 ((1));

616 
	$Â©hc⁄f
 (
__fd
, 
__«me
Ë
__THROW
;

619 
	$sysc⁄f
 (
__«me
Ë
__THROW
;

621 #ifdef 
__USE_POSIX2


623 
size_t
 
	$c⁄f°r
 (
__«me
, *
__buf
, 
size_t
 
__Àn
Ë
__THROW
;

628 
__pid_t
 
	$gëpid
 (Ë
__THROW
;

631 
__pid_t
 
	$gëµid
 (Ë
__THROW
;

634 
__pid_t
 
	$gëpgΩ
 (Ë
__THROW
;

637 
__pid_t
 
	$__gëpgid
 (
__pid_t
 
__pid
Ë
__THROW
;

638 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


639 
__pid_t
 
	$gëpgid
 (
__pid_t
 
__pid
Ë
__THROW
;

646 
	$£çgid
 (
__pid_t
 
__pid
, __pid_à
__pgid
Ë
__THROW
;

648 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


660 
	$£çgΩ
 (Ë
__THROW
;

667 
__pid_t
 
	$£tsid
 (Ë
__THROW
;

669 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


671 
__pid_t
 
	$gësid
 (
__pid_t
 
__pid
Ë
__THROW
;

675 
__uid_t
 
	$gëuid
 (Ë
__THROW
;

678 
__uid_t
 
	$gëeuid
 (Ë
__THROW
;

681 
__gid_t
 
	$gëgid
 (Ë
__THROW
;

684 
__gid_t
 
	$gëegid
 (Ë
__THROW
;

689 
	$gëgroups
 (
__size
, 
__gid_t
 
__li°
[]Ë
__THROW
 
__wur
;

691 #ifdef 
__USE_GNU


693 
	$group_membî
 (
__gid_t
 
__gid
Ë
__THROW
;

700 
	$£tuid
 (
__uid_t
 
__uid
Ë
__THROW
 
__wur
;

702 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


705 
	$£åeuid
 (
__uid_t
 
__ruid
, __uid_à
__euid
Ë
__THROW
 
__wur
;

708 #ifde‡
__USE_XOPEN2K


710 
	$£ãuid
 (
__uid_t
 
__uid
Ë
__THROW
 
__wur
;

717 
	$£tgid
 (
__gid_t
 
__gid
Ë
__THROW
 
__wur
;

719 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


722 
	$£åegid
 (
__gid_t
 
__rgid
, __gid_à
__egid
Ë
__THROW
 
__wur
;

725 #ifde‡
__USE_XOPEN2K


727 
	$£ãgid
 (
__gid_t
 
__gid
Ë
__THROW
 
__wur
;

730 #ifde‡
__USE_GNU


733 
	$gëªsuid
 (
__uid_t
 *
__ruid
, __uid_à*
__euid
, __uid_à*
__suid
)

734 
__THROW
;

738 
	$gëªsgid
 (
__gid_t
 *
__rgid
, __gid_à*
__egid
, __gid_à*
__sgid
)

739 
__THROW
;

743 
	$£åesuid
 (
__uid_t
 
__ruid
, __uid_à
__euid
, __uid_à
__suid
)

744 
__THROW
 
__wur
;

748 
	$£åesgid
 (
__gid_t
 
__rgid
, __gid_à
__egid
, __gid_à
__sgid
)

749 
__THROW
 
__wur
;

756 
__pid_t
 
	$f‹k
 (Ë
__THROWNL
;

758 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

759 || 
deföed
 
__USE_MISC


764 
__pid_t
 
	$vf‹k
 (Ë
__THROW
;

770 *
	$ây«me
 (
__fd
Ë
__THROW
;

774 
	$ây«me_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
)

775 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

779 
	$ißây
 (
__fd
Ë
__THROW
;

781 #i‡
deföed
 
__USE_MISC
 \

782 || (
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_UNIX98
)

785 
	$ây¶Ÿ
 (Ë
__THROW
;

790 
	$lök
 (c⁄° *
__‰om
, c⁄° *
__to
)

791 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

793 #ifde‡
__USE_ATFILE


796 
	$lök©
 (
__‰omfd
, c⁄° *
__‰om
, 
__tofd
,

797 c⁄° *
__to
, 
__Êags
)

798 
__THROW
 
	`__n⁄nuŒ
 ((2, 4)Ë
__wur
;

801 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


803 
	$symlök
 (c⁄° *
__‰om
, c⁄° *
__to
)

804 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

809 
ssize_t
 
	$ªadlök
 (c⁄° *
__ª°ri˘
 
__∑th
,

810 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

811 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

814 #ifde‡
__USE_ATFILE


816 
	$symlök©
 (c⁄° *
__‰om
, 
__tofd
,

817 c⁄° *
__to
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 3)Ë
__wur
;

820 
ssize_t
 
	$ªadlök©
 (
__fd
, c⁄° *
__ª°ri˘
 
__∑th
,

821 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

822 
__THROW
 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
;

826 
	$u∆ök
 (c⁄° *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

828 #ifde‡
__USE_ATFILE


830 
	$u∆ök©
 (
__fd
, c⁄° *
__«me
, 
__Êag
)

831 
__THROW
 
	`__n⁄nuŒ
 ((2));

835 
	$rmdú
 (c⁄° *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

839 
__pid_t
 
	$tcgëpgΩ
 (
__fd
Ë
__THROW
;

842 
	$tc£çgΩ
 (
__fd
, 
__pid_t
 
__pgΩ_id
Ë
__THROW
;

849 *
	`gëlogö
 ();

850 #i‡
deföed
 
__USE_REENTRANT
 || deföed 
__USE_POSIX199506


857 
	$gëlogö_r
 (*
__«me
, 
size_t
 
__«me_Àn
Ë
	`__n⁄nuŒ
 ((1));

860 #ifdef 
__USE_MISC


862 
	$£éogö
 (c⁄° *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

866 #ifdef 
__USE_POSIX2


870 
	#__√ed_gë›t


	)

871 
	~<gë›t.h
>

875 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


879 
	$gëho°«me
 (*
__«me
, 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

883 #i‡
deföed
 
__USE_MISC


886 
	$£tho°«me
 (c⁄° *
__«me
, 
size_t
 
__Àn
)

887 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

891 
	$£tho°id
 (
__id
Ë
__THROW
 
__wur
;

897 
	$gëdomaö«me
 (*
__«me
, 
size_t
 
__Àn
)

898 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

899 
	$£tdomaö«me
 (c⁄° *
__«me
, 
size_t
 
__Àn
)

900 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

906 
	$vh™gup
 (Ë
__THROW
;

909 
	$ªvoke
 (c⁄° *
__fûe
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

917 
	$¥ofû
 (*
__ßm∂e_buf„r
, 
size_t
 
__size
,

918 
size_t
 
__off£t
, 
__sˇÀ
)

919 
__THROW
 
	`__n⁄nuŒ
 ((1));

925 
	$ac˘
 (c⁄° *
__«me
Ë
__THROW
;

929 *
	$gëu£rshñl
 (Ë
__THROW
;

930 
	$ídu£rshñl
 (Ë
__THROW
;

931 
	$£tu£rshñl
 (Ë
__THROW
;

937 
	$d´m⁄
 (
__nochdú
, 
__no˛o£
Ë
__THROW
 
__wur
;

941 #i‡
deföed
 
__USE_MISC
 || (deföed 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
)

944 
	$chroŸ
 (c⁄° *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

948 *
	$gë∑ss
 (c⁄° *
__¥om±
Ë
	`__n⁄nuŒ
 ((1));

956 
	`fsync
 (
__fd
);

959 #ifde‡
__USE_GNU


962 
	$syncfs
 (
__fd
Ë
__THROW
;

966 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


969 
	`gëho°id
 ();

972 
	$sync
 (Ë
__THROW
;

975 #i‡
deföed
 
__USE_MISC
 || !deföed 
__USE_XOPEN2K


978 
	$gë∑gesize
 (Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

983 
	$gëdèbÀsize
 (Ë
__THROW
;

989 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


992 #i‚de‡
__USE_FILE_OFFSET64


993 
	$åunˇã
 (c⁄° *
__fûe
, 
__off_t
 
__Àngth
)

994 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

996 #ifde‡
__REDIRECT_NTH


997 
	`__REDIRECT_NTH
 (
åunˇã
,

998 (c⁄° *
__fûe
, 
__off64_t
 
__Àngth
),

999 
åunˇã64
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

1001 
	#åunˇã
 
åunˇã64


	)

1004 #ifde‡
__USE_LARGEFILE64


1005 
	$åunˇã64
 (c⁄° *
__fûe
, 
__off64_t
 
__Àngth
)

1006 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

1011 #i‡
deföed
 
__USE_POSIX199309
 \

1012 || 
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


1015 #i‚de‡
__USE_FILE_OFFSET64


1016 
	$·runˇã
 (
__fd
, 
__off_t
 
__Àngth
Ë
__THROW
 
__wur
;

1018 #ifde‡
__REDIRECT_NTH


1019 
	`__REDIRECT_NTH
 (
·runˇã
, (
__fd
, 
__off64_t
 
__Àngth
),

1020 
·runˇã64
Ë
__wur
;

1022 
	#·runˇã
 
·runˇã64


	)

1025 #ifde‡
__USE_LARGEFILE64


1026 
	$·runˇã64
 (
__fd
, 
__off64_t
 
__Àngth
Ë
__THROW
 
__wur
;

1032 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K
) \

1033 || 
deföed
 
__USE_MISC


1037 
	$brk
 (*
__addr
Ë
__THROW
 
__wur
;

1043 *
	$sbrk
 (
öçå_t
 
__dñè
Ë
__THROW
;

1047 #ifde‡
__USE_MISC


1058 
	$sysˇŒ
 (
__sy¢o
, ...Ë
__THROW
;

1063 #i‡(
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
Ë&& !deföed 
F_LOCK


1075 
	#F_ULOCK
 0

	)

1076 
	#F_LOCK
 1

	)

1077 
	#F_TLOCK
 2

	)

1078 
	#F_TEST
 3

	)

1080 #i‚de‡
__USE_FILE_OFFSET64


1081 
	$lockf
 (
__fd
, 
__cmd
, 
__off_t
 
__Àn
Ë
__wur
;

1083 #ifde‡
__REDIRECT


1084 
	`__REDIRECT
 (
lockf
, (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
),

1085 
lockf64
Ë
__wur
;

1087 
	#lockf
 
lockf64


	)

1090 #ifde‡
__USE_LARGEFILE64


1091 
	$lockf64
 (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
Ë
__wur
;

1096 #ifde‡
__USE_GNU


1101 
	#TEMP_FAILURE_RETRY
(
ex¥essi⁄
) \

1102 (
__exãnsi⁄__
 \

1103 ({ 
__ªsu…
; \

1104 dÿ
__ªsu…
 = (Ë(
ex¥essi⁄
); \

1105 
__ªsu…
 =-1L && 
î∫o
 =
EINTR
); \

1106 
__ªsu…
; 
	}
}))

	)

1109 #i‡
deföed
 
__USE_POSIX199309
 || deföed 
__USE_UNIX98


1112 
fd©async
 (
__fûdes
);

1118 #ifdef 
__USE_XOPEN


1120 *
	$¸y±
 (c⁄° *
__key
, c⁄° *
__ß…
)

1121 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1125 
	$í¸y±
 (*
__glibc_block
, 
__edÊag
)

1126 
__THROW
 
	`__n⁄nuŒ
 ((1));

1133 
	$swab
 (c⁄° *
__ª°ri˘
 
__‰om
, *__ª°ri˘ 
__to
,

1134 
ssize_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1140 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K


1142 *
	$˘îmid
 (*
__s
Ë
__THROW
;

1147 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


1148 
	~<bôs/uni°d.h
>

1151 
__END_DECLS


	@/usr/include/zlib.h

31 #i‚de‡
ZLIB_H


32 
	#ZLIB_H


	)

34 
	~"zc⁄f.h
"

36 #ifde‡
__˝lu•lus


40 
	#ZLIB_VERSION
 "1.2.8"

	)

41 
	#ZLIB_VERNUM
 0x1280

	)

42 
	#ZLIB_VER_MAJOR
 1

	)

43 
	#ZLIB_VER_MINOR
 2

	)

44 
	#ZLIB_VER_REVISION
 8

	)

45 
	#ZLIB_VER_SUBREVISION
 0

	)

80 
voidpf
 (*
	tÆloc_func
Ë
	tOF
((
	tvoidpf
 
	t›aque
, 
	tuI¡
 
	tôems
, uI¡ 
	tsize
));

81 (*
‰ì_func
Ë
	tOF
((
	tvoidpf
 
	t›aque
, voidp‡
	taddªss
));

83 
öã∫Æ_°©e
;

85 
	sz_°ªam_s
 {

86 
z_c⁄°
 
Byãf
 *
√xt_ö
;

87 
uI¡
 
avaû_ö
;

88 
uL⁄g
 
tŸÆ_ö
;

90 
Byãf
 *
√xt_out
;

91 
uI¡
 
avaû_out
;

92 
uL⁄g
 
tŸÆ_out
;

94 
z_c⁄°
 *
msg
;

95 
öã∫Æ_°©e
 
FAR
 *
°©e
;

97 
Æloc_func
 
zÆloc
;

98 
‰ì_func
 
z‰ì
;

99 
voidpf
 
›aque
;

101 
d©a_ty≥
;

102 
uL⁄g
 
adÀr
;

103 
uL⁄g
 
ª£rved
;

104 } 
	tz_°ªam
;

106 
z_°ªam
 
	tFAR
 *
	tz_°ªamp
;

112 
	sgz_hódî_s
 {

113 
ãxt
;

114 
uL⁄g
 
time
;

115 
xÊags
;

116 
os
;

117 
Byãf
 *
exåa
;

118 
uI¡
 
exåa_Àn
;

119 
uI¡
 
exåa_max
;

120 
Byãf
 *
«me
;

121 
uI¡
 
«me_max
;

122 
Byãf
 *
commít
;

123 
uI¡
 
comm_max
;

124 
h¸c
;

125 
d⁄e
;

127 } 
	tgz_hódî
;

129 
gz_hódî
 
	tFAR
 *
	tgz_hódîp
;

164 
	#Z_NO_FLUSH
 0

	)

165 
	#Z_PARTIAL_FLUSH
 1

	)

166 
	#Z_SYNC_FLUSH
 2

	)

167 
	#Z_FULL_FLUSH
 3

	)

168 
	#Z_FINISH
 4

	)

169 
	#Z_BLOCK
 5

	)

170 
	#Z_TREES
 6

	)

173 
	#Z_OK
 0

	)

174 
	#Z_STREAM_END
 1

	)

175 
	#Z_NEED_DICT
 2

	)

176 
	#Z_ERRNO
 (-1)

	)

177 
	#Z_STREAM_ERROR
 (-2)

	)

178 
	#Z_DATA_ERROR
 (-3)

	)

179 
	#Z_MEM_ERROR
 (-4)

	)

180 
	#Z_BUF_ERROR
 (-5)

	)

181 
	#Z_VERSION_ERROR
 (-6)

	)

186 
	#Z_NO_COMPRESSION
 0

	)

187 
	#Z_BEST_SPEED
 1

	)

188 
	#Z_BEST_COMPRESSION
 9

	)

189 
	#Z_DEFAULT_COMPRESSION
 (-1)

	)

192 
	#Z_FILTERED
 1

	)

193 
	#Z_HUFFMAN_ONLY
 2

	)

194 
	#Z_RLE
 3

	)

195 
	#Z_FIXED
 4

	)

196 
	#Z_DEFAULT_STRATEGY
 0

	)

199 
	#Z_BINARY
 0

	)

200 
	#Z_TEXT
 1

	)

201 
	#Z_ASCII
 
Z_TEXT


	)

202 
	#Z_UNKNOWN
 2

	)

205 
	#Z_DEFLATED
 8

	)

208 
	#Z_NULL
 0

	)

210 
	#zlib_vîsi⁄
 
	`zlibVîsi⁄
()

	)

216 
ZEXTERN
 c⁄° * 
ZEXPORT
 
zlibVîsi⁄
 
OF
(());

246 
ZEXTERN
 
ZEXPORT
 
deÊ©e
 
OF
((
z_°ªamp
 
°rm
, 
Êush
));

353 
ZEXTERN
 
ZEXPORT
 
deÊ©eEnd
 
OF
((
z_°ªamp
 
°rm
));

392 
ZEXTERN
 
ZEXPORT
 
öÊ©e
 
OF
((
z_°ªamp
 
°rm
, 
Êush
));

508 
ZEXTERN
 
ZEXPORT
 
öÊ©eEnd
 
OF
((
z_°ªamp
 
°rm
));

587 
ZEXTERN
 
ZEXPORT
 
deÊ©eSëDi˘i⁄¨y
 
OF
((
z_°ªamp
 
°rm
,

588 c⁄° 
Byãf
 *
di˘i⁄¨y
,

589 
uI¡
 
di˘Lígth
));

631 
ZEXTERN
 
ZEXPORT
 
deÊ©eC›y
 
OF
((
z_°ªamp
 
de°
,

632 
z_°ªamp
 
sour˚
));

649 
ZEXTERN
 
ZEXPORT
 
deÊ©eRe£t
 
OF
((
z_°ªamp
 
°rm
));

660 
ZEXTERN
 
ZEXPORT
 
deÊ©eP¨ams
 
OF
((
z_°ªamp
 
°rm
,

661 
Àvñ
,

662 
°øãgy
));

681 
ZEXTERN
 
ZEXPORT
 
deÊ©eTu√
 
OF
((
z_°ªamp
 
°rm
,

682 
good_Àngth
,

683 
max_œzy
,

684 
ni˚_Àngth
,

685 
max_chaö
));

698 
ZEXTERN
 
uL⁄g
 
ZEXPORT
 
deÊ©eBound
 
OF
((
z_°ªamp
 
°rm
,

699 
uL⁄g
 
sour˚Lí
));

713 
ZEXTERN
 
ZEXPORT
 
deÊ©ePídög
 
OF
((
z_°ªamp
 
°rm
,

714 *
≥ndög
,

715 *
bôs
));

728 
ZEXTERN
 
ZEXPORT
 
deÊ©ePrime
 
OF
((
z_°ªamp
 
°rm
,

729 
bôs
,

730 
vÆue
));

745 
ZEXTERN
 
ZEXPORT
 
deÊ©eSëHódî
 
OF
((
z_°ªamp
 
°rm
,

746 
gz_hódîp
 
hód
));

819 
ZEXTERN
 
ZEXPORT
 
öÊ©eSëDi˘i⁄¨y
 
OF
((
z_°ªamp
 
°rm
,

820 c⁄° 
Byãf
 *
di˘i⁄¨y
,

821 
uI¡
 
di˘Lígth
));

842 
ZEXTERN
 
ZEXPORT
 
öÊ©eGëDi˘i⁄¨y
 
OF
((
z_°ªamp
 
°rm
,

843 
Byãf
 *
di˘i⁄¨y
,

844 
uI¡
 *
di˘Lígth
));

857 
ZEXTERN
 
ZEXPORT
 
öÊ©eSync
 
OF
((
z_°ªamp
 
°rm
));

876 
ZEXTERN
 
ZEXPORT
 
öÊ©eC›y
 
OF
((
z_°ªamp
 
de°
,

877 
z_°ªamp
 
sour˚
));

892 
ZEXTERN
 
ZEXPORT
 
öÊ©eRe£t
 
OF
((
z_°ªamp
 
°rm
));

902 
ZEXTERN
 
ZEXPORT
 
öÊ©eRe£t2
 
OF
((
z_°ªamp
 
°rm
,

903 
wödowBôs
));

914 
ZEXTERN
 
ZEXPORT
 
öÊ©ePrime
 
OF
((
z_°ªamp
 
°rm
,

915 
bôs
,

916 
vÆue
));

935 
ZEXTERN
 
ZEXPORT
 
öÊ©eM¨k
 
OF
((
z_°ªamp
 
°rm
));

963 
ZEXTERN
 
ZEXPORT
 
öÊ©eGëHódî
 
OF
((
z_°ªamp
 
°rm
,

964 
gz_hódîp
 
hód
));

1025 (*
ö_func
Ë
	tOF
((
	tFAR
 *,

1026 
	tz_c⁄°
 
	tFAR
 * FAR *));

1027 (*
out_func
Ë
	tOF
((
	tFAR
 *, FAR *, ));

1029 
ZEXTERN
 
ZEXPORT
 
öÊ©eBack
 
OF
((
z_°ªamp
 
°rm
,

1030 
ö_func
 
ö
, 
FAR
 *
ö_desc
,

1031 
out_func
 
out
, 
FAR
 *
out_desc
));

1099 
ZEXTERN
 
ZEXPORT
 
öÊ©eBackEnd
 
OF
((
z_°ªamp
 
°rm
));

1107 
ZEXTERN
 
uL⁄g
 
ZEXPORT
 
zlibCompûeFœgs
 
OF
(());

1148 #i‚de‡
Z_SOLO


1160 
ZEXTERN
 
ZEXPORT
 
com¥ess
 
OF
((
Byãf
 *
de°
, 
uL⁄gf
 *
de°Lí
,

1161 c⁄° 
Byãf
 *
sour˚
, 
uL⁄g
 
sour˚Lí
));

1174 
ZEXTERN
 
ZEXPORT
 
com¥ess2
 
OF
((
Byãf
 *
de°
, 
uL⁄gf
 *
de°Lí
,

1175 c⁄° 
Byãf
 *
sour˚
, 
uL⁄g
 
sour˚Lí
,

1176 
Àvñ
));

1190 
ZEXTERN
 
uL⁄g
 
ZEXPORT
 
com¥essBound
 
OF
((uL⁄g 
sour˚Lí
));

1197 
ZEXTERN
 
ZEXPORT
 
uncom¥ess
 
OF
((
Byãf
 *
de°
, 
uL⁄gf
 *
de°Lí
,

1198 c⁄° 
Byãf
 *
sour˚
, 
uL⁄g
 
sour˚Lí
));

1224 
gzFûe_s
 *
	tgzFûe
;

1264 
ZEXTERN
 
gzFûe
 
ZEXPORT
 
gzd›í
 
OF
((
fd
, c⁄° *
mode
));

1287 
ZEXTERN
 
ZEXPORT
 
gzbuf„r
 
OF
((
gzFûe
 
fûe
, 
size
));

1304 
ZEXTERN
 
ZEXPORT
 
gz£ç¨ams
 
OF
((
gzFûe
 
fûe
, 
Àvñ
, 
°øãgy
));

1313 
ZEXTERN
 
ZEXPORT
 
gzªad
 
OF
((
gzFûe
 
fûe
, 
voidp
 
buf
, 
Àn
));

1341 
ZEXTERN
 
ZEXPORT
 
gzwrôe
 
OF
((
gzFûe
 
fûe
,

1342 
voidpc
 
buf
, 
Àn
));

1349 
ZEXTERN
 
ZEXPORTVA
 
gz¥ötf
 
Z_ARG
((
gzFûe
 
fûe
, c⁄° *
f‹m©
, ...));

1364 
ZEXTERN
 
ZEXPORT
 
gzputs
 
OF
((
gzFûe
 
fûe
, c⁄° *
s
));

1372 
ZEXTERN
 * 
ZEXPORT
 
gzgës
 
OF
((
gzFûe
 
fûe
, *
buf
, 
Àn
));

1385 
ZEXTERN
 
ZEXPORT
 
gzputc
 
OF
((
gzFûe
 
fûe
, 
c
));

1391 
ZEXTERN
 
ZEXPORT
 
gzgëc
 
OF
((
gzFûe
 
fûe
));

1400 
ZEXTERN
 
ZEXPORT
 
gzungëc
 
OF
((
c
, 
gzFûe
 
fûe
));

1412 
ZEXTERN
 
ZEXPORT
 
gzÊush
 
OF
((
gzFûe
 
fûe
, 
Êush
));

1447 
ZEXTERN
 
ZEXPORT
 
gzªwöd
 
OF
((
gzFûe
 
fûe
));

1475 
ZEXTERN
 
ZEXPORT
 
gzeof
 
OF
((
gzFûe
 
fûe
));

1490 
ZEXTERN
 
ZEXPORT
 
gzdúe˘
 
OF
((
gzFûe
 
fûe
));

1511 
ZEXTERN
 
ZEXPORT
 
gz˛o£
 
OF
((
gzFûe
 
fûe
));

1524 
ZEXTERN
 
ZEXPORT
 
gz˛o£_r
 
OF
((
gzFûe
 
fûe
));

1525 
ZEXTERN
 
ZEXPORT
 
gz˛o£_w
 
OF
((
gzFûe
 
fûe
));

1536 
ZEXTERN
 c⁄° * 
ZEXPORT
 
gzîr‹
 
OF
((
gzFûe
 
fûe
, *
î∫um
));

1552 
ZEXTERN
 
ZEXPORT
 
gz˛óªº
 
OF
((
gzFûe
 
fûe
));

1569 
ZEXTERN
 
uL⁄g
 
ZEXPORT
 
adÀr32
 
OF
((uL⁄g 
adÀr
, c⁄° 
Byãf
 *
buf
, 
uI¡
 
Àn
));

1600 
ZEXTERN
 
uL⁄g
 
ZEXPORT
 
¸c32
 
OF
((uL⁄g 
¸c
, c⁄° 
Byãf
 *
buf
, 
uI¡
 
Àn
));

1633 
ZEXTERN
 
ZEXPORT
 
deÊ©eInô_
 
OF
((
z_°ªamp
 
°rm
, 
Àvñ
,

1634 c⁄° *
vîsi⁄
, 
°ªam_size
));

1635 
ZEXTERN
 
ZEXPORT
 
öÊ©eInô_
 
OF
((
z_°ªamp
 
°rm
,

1636 c⁄° *
vîsi⁄
, 
°ªam_size
));

1637 
ZEXTERN
 
ZEXPORT
 
deÊ©eInô2_
 
OF
((
z_°ªamp
 
°rm
, 
Àvñ
, 
mëhod
,

1638 
wödowBôs
, 
memLevñ
,

1639 
°øãgy
, c⁄° *
vîsi⁄
,

1640 
°ªam_size
));

1641 
ZEXTERN
 
ZEXPORT
 
öÊ©eInô2_
 
OF
((
z_°ªamp
 
°rm
, 
wödowBôs
,

1642 c⁄° *
vîsi⁄
, 
°ªam_size
));

1643 
ZEXTERN
 
ZEXPORT
 
öÊ©eBackInô_
 
OF
((
z_°ªamp
 
°rm
, 
wödowBôs
,

1644 
FAR
 *
wödow
,

1645 c⁄° *
vîsi⁄
,

1646 
°ªam_size
));

1647 
	#deÊ©eInô
(
°rm
, 
Àvñ
) \

1648 
	`deÊ©eInô_
((
°rm
), (
Àvñ
), 
ZLIB_VERSION
, ()(
z_°ªam
))

	)

1649 
	#öÊ©eInô
(
°rm
) \

1650 
	`öÊ©eInô_
((
°rm
), 
ZLIB_VERSION
, ()(
z_°ªam
))

	)

1651 
	#deÊ©eInô2
(
°rm
, 
Àvñ
, 
mëhod
, 
wödowBôs
, 
memLevñ
, 
°øãgy
) \

1652 
	`deÊ©eInô2_
((
°rm
),(
Àvñ
),(
mëhod
),(
wödowBôs
),(
memLevñ
),\

1653 (
°øãgy
), 
ZLIB_VERSION
, ()(
z_°ªam
))

	)

1654 
	#öÊ©eInô2
(
°rm
, 
wödowBôs
) \

1655 
	`öÊ©eInô2_
((
°rm
), (
wödowBôs
), 
ZLIB_VERSION
, \

1656 ()(
z_°ªam
))

	)

1657 
	#öÊ©eBackInô
(
°rm
, 
wödowBôs
, 
wödow
) \

1658 
	`öÊ©eBackInô_
((
°rm
), (
wödowBôs
), (
wödow
), \

1659 
ZLIB_VERSION
, ()(
z_°ªam
))

	)

1661 #i‚de‡
Z_SOLO


1670 
	sgzFûe_s
 {

1671 
have
;

1672 *
√xt
;

1673 
z_off64_t
 
pos
;

1675 
ZEXTERN
 
ZEXPORT
 
gzgëc_
 
OF
((
gzFûe
 
fûe
));

1676 #ifde‡
Z_PREFIX_SET


1677 #unde‡
z_gzgëc


1678 
	#z_gzgëc
(
g
) \

1679 ((
g
)->
have
 ? ((g)->have--, (g)->
pos
++, *((g)->
√xt
)++Ë: 
	`gzgëc
(g))

	)

1681 
	#gzgëc
(
g
) \

1682 ((
g
)->
have
 ? ((g)->have--, (g)->
pos
++, *((g)->
√xt
)++Ë: 
	`gzgëc
(g))

	)

1691 #ifde‡
Z_LARGE64


1692 
ZEXTERN
 
gzFûe
 
ZEXPORT
 
gz›í64
 
OF
((const *, const *));

1693 
ZEXTERN
 
z_off64_t
 
ZEXPORT
 
gz£ek64
 
OF
((
gzFûe
, z_off64_t, ));

1694 
ZEXTERN
 
z_off64_t
 
ZEXPORT
 
gzãŒ64
 
OF
((
gzFûe
));

1695 
ZEXTERN
 
z_off64_t
 
ZEXPORT
 
gzoff£t64
 
OF
((
gzFûe
));

1696 
ZEXTERN
 
uL⁄g
 
ZEXPORT
 
adÀr32_comböe64
 
OF
((uL⁄g, uL⁄g, 
z_off64_t
));

1697 
ZEXTERN
 
uL⁄g
 
ZEXPORT
 
¸c32_comböe64
 
OF
((uL⁄g, uL⁄g, 
z_off64_t
));

1700 #i‡!
deföed
(
ZLIB_INTERNAL
Ë&& deföed(
Z_WANT64
)

1701 #ifde‡
Z_PREFIX_SET


1702 
	#z_gz›í
 
z_gz›í64


	)

1703 
	#z_gz£ek
 
z_gz£ek64


	)

1704 
	#z_gzãŒ
 
z_gzãŒ64


	)

1705 
	#z_gzoff£t
 
z_gzoff£t64


	)

1706 
	#z_adÀr32_comböe
 
z_adÀr32_comböe64


	)

1707 
	#z_¸c32_comböe
 
z_¸c32_comböe64


	)

1709 
	#gz›í
 
gz›í64


	)

1710 
	#gz£ek
 
gz£ek64


	)

1711 
	#gzãŒ
 
gzãŒ64


	)

1712 
	#gzoff£t
 
gzoff£t64


	)

1713 
	#adÀr32_comböe
 
adÀr32_comböe64


	)

1714 
	#¸c32_comböe
 
¸c32_comböe64


	)

1716 #i‚de‡
Z_LARGE64


1717 
ZEXTERN
 
gzFûe
 
ZEXPORT
 
gz›í64
 
OF
((const *, const *));

1718 
ZEXTERN
 
z_off_t
 
ZEXPORT
 
gz£ek64
 
OF
((
gzFûe
, z_off_t, ));

1719 
ZEXTERN
 
z_off_t
 
ZEXPORT
 
gzãŒ64
 
OF
((
gzFûe
));

1720 
ZEXTERN
 
z_off_t
 
ZEXPORT
 
gzoff£t64
 
OF
((
gzFûe
));

1721 
ZEXTERN
 
uL⁄g
 
ZEXPORT
 
adÀr32_comböe64
 
OF
((uL⁄g, uL⁄g, 
z_off_t
));

1722 
ZEXTERN
 
uL⁄g
 
ZEXPORT
 
¸c32_comböe64
 
OF
((uL⁄g, uL⁄g, 
z_off_t
));

1725 
ZEXTERN
 
gzFûe
 
ZEXPORT
 
gz›í
 
OF
((const *, const *));

1726 
ZEXTERN
 
z_off_t
 
ZEXPORT
 
gz£ek
 
OF
((
gzFûe
, z_off_t, ));

1727 
ZEXTERN
 
z_off_t
 
ZEXPORT
 
gzãŒ
 
OF
((
gzFûe
));

1728 
ZEXTERN
 
z_off_t
 
ZEXPORT
 
gzoff£t
 
OF
((
gzFûe
));

1729 
ZEXTERN
 
uL⁄g
 
ZEXPORT
 
adÀr32_comböe
 
OF
((uL⁄g, uL⁄g, 
z_off_t
));

1730 
ZEXTERN
 
uL⁄g
 
ZEXPORT
 
¸c32_comböe
 
OF
((uL⁄g, uL⁄g, 
z_off_t
));

1735 
ZEXTERN
 
uL⁄g
 
ZEXPORT
 
adÀr32_comböe
 
OF
((uL⁄g, uL⁄g, 
z_off_t
));

1736 
ZEXTERN
 
uL⁄g
 
ZEXPORT
 
¸c32_comböe
 
OF
((uL⁄g, uL⁄g, 
z_off_t
));

1741 #i‡!
deföed
(
ZUTIL_H
Ë&& !deföed(
NO_DUMMY_DECL
)

1742 
	söã∫Æ_°©e
 {
dummy
;};

1746 
ZEXTERN
 c⁄° * 
ZEXPORT
 
zEº‹
 
OF
(());

1747 
ZEXTERN
 
ZEXPORT
 
öÊ©eSyncPoöt
 
OF
((
z_°ªamp
));

1748 
ZEXTERN
 c⁄° 
z_¸c_t
 
FAR
 * 
ZEXPORT
 
gë_¸c_èbÀ
 
OF
(());

1749 
ZEXTERN
 
ZEXPORT
 
öÊ©eUndîmöe
 
OF
((
z_°ªamp
, ));

1750 
ZEXTERN
 
ZEXPORT
 
öÊ©eRe£tKìp
 
OF
((
z_°ªamp
));

1751 
ZEXTERN
 
ZEXPORT
 
deÊ©eRe£tKìp
 
OF
((
z_°ªamp
));

1752 #i‡
deföed
(
_WIN32
Ë&& !deföed(
Z_SOLO
)

1753 
ZEXTERN
 
gzFûe
 
ZEXPORT
 
gz›í_w
 
OF
((c⁄° 
wch¨_t
 *
∑th
,

1754 c⁄° *
mode
));

1756 #i‡
deföed
(
STDC
Ë|| deföed(
Z_HAVE_STDARG_H
)

1757 #i‚de‡
Z_SOLO


1758 
ZEXTERN
 
ZEXPORTVA
 
gzv¥ötf
 
Z_ARG
((
gzFûe
 
fûe
,

1759 c⁄° *
f‹m©
,

1760 
va_li°
 
va
));

1764 #ifde‡
__˝lu•lus


	@/usr/include/alloca.h

18 #i‚def 
_ALLOCA_H


19 
	#_ALLOCA_H
 1

	)

21 
	~<„©uªs.h
>

23 
	#__√ed_size_t


	)

24 
	~<°ddef.h
>

26 
	g__BEGIN_DECLS


29 #unde‡
Æloˇ


32 *
	$Æloˇ
 (
size_t
 
__size
Ë
__THROW
;

34 #ifdef 
__GNUC__


35 
	#Æloˇ
(
size
Ë
	`__buûtö_Æloˇ
 (size)

	)

38 
__END_DECLS


	@/usr/include/features.h

18 #i‚def 
_FEATURES_H


19 
	#_FEATURES_H
 1

	)

97 #unde‡
__USE_ISOC11


98 #unde‡
__USE_ISOC99


99 #unde‡
__USE_ISOC95


100 #unde‡
__USE_ISOCXX11


101 #unde‡
__USE_POSIX


102 #unde‡
__USE_POSIX2


103 #unde‡
__USE_POSIX199309


104 #unde‡
__USE_POSIX199506


105 #unde‡
__USE_XOPEN


106 #unde‡
__USE_XOPEN_EXTENDED


107 #unde‡
__USE_UNIX98


108 #unde‡
__USE_XOPEN2K


109 #unde‡
__USE_XOPEN2KXSI


110 #unde‡
__USE_XOPEN2K8


111 #unde‡
__USE_XOPEN2K8XSI


112 #unde‡
__USE_LARGEFILE


113 #unde‡
__USE_LARGEFILE64


114 #unde‡
__USE_FILE_OFFSET64


115 #unde‡
__USE_MISC


116 #unde‡
__USE_ATFILE


117 #unde‡
__USE_GNU


118 #unde‡
__USE_REENTRANT


119 #unde‡
__USE_FORTIFY_LEVEL


120 #unde‡
__KERNEL_STRICT_NAMES


124 #i‚de‡
_LOOSE_KERNEL_NAMES


125 
	#__KERNEL_STRICT_NAMES


	)

135 #i‡
deföed
 
__GNUC__
 && deföed 
__GNUC_MINOR__


136 
	#__GNUC_PREREQ
(
maj
, 
mö
) \

137 ((
__GNUC__
 << 16Ë+ 
__GNUC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

139 
	#__GNUC_PREREQ
(
maj
, 
mö
Ë0

	)

146 #i‡(
deföed
 
_BSD_SOURCE
 || deföed 
_SVID_SOURCE
) \

147 && !
deföed
 
	g_DEFAULT_SOURCE


152 #unde‡
_DEFAULT_SOURCE


153 
	#_DEFAULT_SOURCE
 1

	)

157 #ifde‡
_GNU_SOURCE


158 #unde‡
_ISOC95_SOURCE


159 
	#_ISOC95_SOURCE
 1

	)

160 #unde‡
_ISOC99_SOURCE


161 
	#_ISOC99_SOURCE
 1

	)

162 #unde‡
_ISOC11_SOURCE


163 
	#_ISOC11_SOURCE
 1

	)

164 #unde‡
_POSIX_SOURCE


165 
	#_POSIX_SOURCE
 1

	)

166 #unde‡
_POSIX_C_SOURCE


167 
	#_POSIX_C_SOURCE
 200809L

	)

168 #unde‡
_XOPEN_SOURCE


169 
	#_XOPEN_SOURCE
 700

	)

170 #unde‡
_XOPEN_SOURCE_EXTENDED


171 
	#_XOPEN_SOURCE_EXTENDED
 1

	)

172 #unde‡
_LARGEFILE64_SOURCE


173 
	#_LARGEFILE64_SOURCE
 1

	)

174 #unde‡
_DEFAULT_SOURCE


175 
	#_DEFAULT_SOURCE
 1

	)

176 #unde‡
_ATFILE_SOURCE


177 
	#_ATFILE_SOURCE
 1

	)

182 #i‡(
deföed
 
_DEFAULT_SOURCE
 \

183 || (!
deföed
 
	g__STRICT_ANSI__
 \

184 && !
deföed
 
	g_ISOC99_SOURCE
 \

185 && !
deföed
 
	g_POSIX_SOURCE
 && !deföed 
	g_POSIX_C_SOURCE
 \

186 && !
deföed
 
	g_XOPEN_SOURCE
))

187 #unde‡
_DEFAULT_SOURCE


188 
	#_DEFAULT_SOURCE
 1

	)

192 #i‡(
deföed
 
_ISOC11_SOURCE
 \

193 || (
deföed
 
	g__STDC_VERSION__
 && __STDC_VERSION__ >= 201112L))

194 
	#__USE_ISOC11
 1

	)

198 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC11_SOURCE
 \

199 || (
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L))

200 
	#__USE_ISOC99
 1

	)

204 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC11_SOURCE
 \

205 || (
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199409L))

206 
	#__USE_ISOC95
 1

	)

213 #i‡((
deföed
 
__˝lu•lus
 && __cplusplus >= 201103L) \

214 || 
deföed
 
__GXX_EXPERIMENTAL_CXX0X__
)

215 
	#__USE_ISOCXX11
 1

	)

221 #ifde‡
_DEFAULT_SOURCE


222 #i‡!
deföed
 
_POSIX_SOURCE
 && !deföed 
_POSIX_C_SOURCE


223 
	#__USE_POSIX_IMPLICITLY
 1

	)

225 #unde‡
_POSIX_SOURCE


226 
	#_POSIX_SOURCE
 1

	)

227 #unde‡
_POSIX_C_SOURCE


228 
	#_POSIX_C_SOURCE
 200809L

	)

230 #i‡((!
deföed
 
__STRICT_ANSI__
 || (
_XOPEN_SOURCE
 - 0) >= 500) && \

231 !
deföed
 
_POSIX_SOURCE
 && !deföed 
_POSIX_C_SOURCE
)

232 
	#_POSIX_SOURCE
 1

	)

233 #i‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 500

234 
	#_POSIX_C_SOURCE
 2

	)

235 #ñi‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 600

236 
	#_POSIX_C_SOURCE
 199506L

	)

237 #ñi‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 700

238 
	#_POSIX_C_SOURCE
 200112L

	)

240 
	#_POSIX_C_SOURCE
 200809L

	)

242 
	#__USE_POSIX_IMPLICITLY
 1

	)

245 #i‡
deföed
 
_POSIX_SOURCE
 || 
_POSIX_C_SOURCE
 >1 || deföed 
_XOPEN_SOURCE


246 
	#__USE_POSIX
 1

	)

249 #i‡
deföed
 
_POSIX_C_SOURCE
 && _POSIX_C_SOURCE >2 || deföed 
_XOPEN_SOURCE


250 
	#__USE_POSIX2
 1

	)

253 #i‡(
_POSIX_C_SOURCE
 - 0) >= 199309L

254 
	#__USE_POSIX199309
 1

	)

257 #i‡(
_POSIX_C_SOURCE
 - 0) >= 199506L

258 
	#__USE_POSIX199506
 1

	)

261 #i‡(
_POSIX_C_SOURCE
 - 0) >= 200112L

262 
	#__USE_XOPEN2K
 1

	)

263 #unde‡
__USE_ISOC95


264 
	#__USE_ISOC95
 1

	)

265 #unde‡
__USE_ISOC99


266 
	#__USE_ISOC99
 1

	)

269 #i‡(
_POSIX_C_SOURCE
 - 0) >= 200809L

270 
	#__USE_XOPEN2K8
 1

	)

271 #unde‡
_ATFILE_SOURCE


272 
	#_ATFILE_SOURCE
 1

	)

275 #ifdef 
_XOPEN_SOURCE


276 
	#__USE_XOPEN
 1

	)

277 #i‡(
_XOPEN_SOURCE
 - 0) >= 500

278 
	#__USE_XOPEN_EXTENDED
 1

	)

279 
	#__USE_UNIX98
 1

	)

280 #unde‡
_LARGEFILE_SOURCE


281 
	#_LARGEFILE_SOURCE
 1

	)

282 #i‡(
_XOPEN_SOURCE
 - 0) >= 600

283 #i‡(
_XOPEN_SOURCE
 - 0) >= 700

284 
	#__USE_XOPEN2K8
 1

	)

285 
	#__USE_XOPEN2K8XSI
 1

	)

287 
	#__USE_XOPEN2K
 1

	)

288 
	#__USE_XOPEN2KXSI
 1

	)

289 #unde‡
__USE_ISOC95


290 
	#__USE_ISOC95
 1

	)

291 #unde‡
__USE_ISOC99


292 
	#__USE_ISOC99
 1

	)

295 #ifde‡
_XOPEN_SOURCE_EXTENDED


296 
	#__USE_XOPEN_EXTENDED
 1

	)

301 #ifde‡
_LARGEFILE_SOURCE


302 
	#__USE_LARGEFILE
 1

	)

305 #ifde‡
_LARGEFILE64_SOURCE


306 
	#__USE_LARGEFILE64
 1

	)

309 #i‡
deföed
 
_FILE_OFFSET_BITS
 && _FILE_OFFSET_BITS == 64

310 
	#__USE_FILE_OFFSET64
 1

	)

313 #i‡
deföed
 
_DEFAULT_SOURCE


314 
	#__USE_MISC
 1

	)

317 #ifdef 
_ATFILE_SOURCE


318 
	#__USE_ATFILE
 1

	)

321 #ifdef 
_GNU_SOURCE


322 
	#__USE_GNU
 1

	)

325 #i‡
deföed
 
_REENTRANT
 || deföed 
_THREAD_SAFE


326 
	#__USE_REENTRANT
 1

	)

329 #i‡
deföed
 
_FORTIFY_SOURCE
 && _FORTIFY_SOURCE > 0 \

330 && 
__GNUC_PREREQ
 (4, 1Ë&& 
deföed
 
	g__OPTIMIZE__
 && __OPTIMIZE__ > 0

331 #i‡
_FORTIFY_SOURCE
 > 1

332 
	#__USE_FORTIFY_LEVEL
 2

	)

334 
	#__USE_FORTIFY_LEVEL
 1

	)

337 
	#__USE_FORTIFY_LEVEL
 0

	)

342 
	~<°dc-¥edef.h
>

350 #unde‡
__GNU_LIBRARY__


351 
	#__GNU_LIBRARY__
 6

	)

355 
	#__GLIBC__
 2

	)

356 
	#__GLIBC_MINOR__
 21

	)

358 
	#__GLIBC_PREREQ
(
maj
, 
mö
) \

359 ((
__GLIBC__
 << 16Ë+ 
__GLIBC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

362 #i‚de‡
__ASSEMBLER__


363 #i‚de‡
_SYS_CDEFS_H


364 
	~<sys/cdefs.h
>

369 #i‡
deföed
 
__USE_FILE_OFFSET64
 && !deföed 
__REDIRECT


370 
	#__USE_LARGEFILE
 1

	)

371 
	#__USE_LARGEFILE64
 1

	)

377 #i‡
__GNUC_PREREQ
 (2, 7Ë&& 
deföed
 
__OPTIMIZE__
 \

378 && !
deföed
 
	g__OPTIMIZE_SIZE__
 && !deföed 
	g__NO_INLINE__
 \

379 && 
deföed
 
	g__exã∫_ölöe


380 
	#__USE_EXTERN_INLINES
 1

	)

388 
	~<gnu/°ubs.h
>

	@/usr/include/getopt.h

19 #i‚de‡
_GETOPT_H


21 #i‚de‡
__√ed_gë›t


22 
	#_GETOPT_H
 1

	)

32 #i‡!
deföed
 
__GNU_LIBRARY__


33 
	~<˘y≥.h
>

36 #i‚de‡
__THROW


37 #i‚de‡
__GNUC_PREREQ


38 
	#__GNUC_PREREQ
(
maj
, 
mö
Ë(0)

	)

40 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (2,8)

41 
	#__THROW
 
	`throw
 ()

	)

43 
	#__THROW


	)

47 #ifdef 
__˝lu•lus


57 *
›èrg
;

71 
›töd
;

76 
›ãº
;

80 
›t›t
;

82 #i‚de‡
__√ed_gë›t


104 
	s›ti⁄


106 c⁄° *
	g«me
;

109 
	ghas_¨g
;

110 *
	gÊag
;

111 
	gvÆ
;

116 
	#no_¨gumít
 0

	)

117 
	#ªquúed_¨gumít
 1

	)

118 
	#›ti⁄Æ_¨gumít
 2

	)

146 #ifde‡
__GNU_LIBRARY__


150 
gë›t
 (
___¨gc
, *c⁄° *
___¨gv
, c⁄° *
__sh‹t›ts
)

151 
__THROW
;

153 #i‡
deföed
 
__√ed_gë›t
 && deföed 
__USE_POSIX2
 \

154 && !
deföed
 
	g__USE_POSIX_IMPLICITLY
 && !deföed 
	g__USE_GNU


158 #ifde‡
__REDIRECT


159 
__REDIRECT_NTH
 (
gë›t
, (
___¨gc
, *c⁄° *
___¨gv
,

160 c⁄° *
__sh‹t›ts
),

161 
__posix_gë›t
);

163 
__posix_gë›t
 (
___¨gc
, *c⁄° *
___¨gv
,

164 c⁄° *
__sh‹t›ts
Ë
__THROW
;

165 
	#gë›t
 
__posix_gë›t


	)

169 
gë›t
 ();

172 #i‚de‡
__√ed_gë›t


173 
gë›t_l⁄g
 (
___¨gc
, *c⁄° *
___¨gv
,

174 c⁄° *
__sh‹t›ts
,

175 c⁄° 
›ti⁄
 *
__l⁄g›ts
, *
__l⁄göd
)

176 
__THROW
;

177 
gë›t_l⁄g_⁄ly
 (
___¨gc
, *c⁄° *
___¨gv
,

178 c⁄° *
__sh‹t›ts
,

179 c⁄° 
›ti⁄
 *
__l⁄g›ts
, *
__l⁄göd
)

180 
__THROW
;

184 #ifdef 
__˝lu•lus


189 #unde‡
__√ed_gë›t


	@/usr/include/libio.h

28 #i‚de‡
_IO_STDIO_H


29 
	#_IO_STDIO_H


	)

31 
	~<_G_c⁄fig.h
>

33 
	#_IO_Âos_t
 
_G_Âos_t


	)

34 
	#_IO_Âos64_t
 
_G_Âos64_t


	)

35 
	#_IO_size_t
 
size_t


	)

36 
	#_IO_ssize_t
 
__ssize_t


	)

37 
	#_IO_off_t
 
__off_t


	)

38 
	#_IO_off64_t
 
__off64_t


	)

39 
	#_IO_pid_t
 
__pid_t


	)

40 
	#_IO_uid_t
 
__uid_t


	)

41 
	#_IO_ic⁄v_t
 
_G_ic⁄v_t


	)

42 
	#_IO_HAVE_ST_BLKSIZE
 
_G_HAVE_ST_BLKSIZE


	)

43 
	#_IO_BUFSIZ
 
_G_BUFSIZ


	)

44 
	#_IO_va_li°
 
_G_va_li°


	)

45 
	#_IO_wöt_t
 
wöt_t


	)

48 
	#__√ed___va_li°


	)

49 
	~<°d¨g.h
>

50 #ifde‡
__GNUC_VA_LIST


51 #unde‡
_IO_va_li°


52 
	#_IO_va_li°
 
__gnuc_va_li°


	)

55 #i‚de‡
__P


56 
	~<sys/cdefs.h
>

59 
	#_IO_UNIFIED_JUMPTABLES
 1

	)

61 #i‚de‡
EOF


62 
	#EOF
 (-1)

	)

64 #i‚de‡
NULL


65 #i‡
deföed
 
__GNUG__
 && \

66 (
	g__GNUC__
 > 2 || (__GNUC__ =2 && 
__GNUC_MINOR__
 >= 8))

67 
	#NULL
 (
__nuŒ
)

	)

69 #i‡!
deföed
(
__˝lu•lus
)

70 
	#NULL
 ((*)0)

	)

72 
	#NULL
 (0)

	)

77 
	#_IOS_INPUT
 1

	)

78 
	#_IOS_OUTPUT
 2

	)

79 
	#_IOS_ATEND
 4

	)

80 
	#_IOS_APPEND
 8

	)

81 
	#_IOS_TRUNC
 16

	)

82 
	#_IOS_NOCREATE
 32

	)

83 
	#_IOS_NOREPLACE
 64

	)

84 
	#_IOS_BIN
 128

	)

92 
	#_IO_MAGIC
 0xFBAD0000

	)

93 
	#_OLD_STDIO_MAGIC
 0xFABC0000

	)

94 
	#_IO_MAGIC_MASK
 0xFFFF0000

	)

95 
	#_IO_USER_BUF
 1

	)

96 
	#_IO_UNBUFFERED
 2

	)

97 
	#_IO_NO_READS
 4

	)

98 
	#_IO_NO_WRITES
 8

	)

99 
	#_IO_EOF_SEEN
 0x10

	)

100 
	#_IO_ERR_SEEN
 0x20

	)

101 
	#_IO_DELETE_DONT_CLOSE
 0x40

	)

102 
	#_IO_LINKED
 0x80

	)

103 
	#_IO_IN_BACKUP
 0x100

	)

104 
	#_IO_LINE_BUF
 0x200

	)

105 
	#_IO_TIED_PUT_GET
 0x400

	)

106 
	#_IO_CURRENTLY_PUTTING
 0x800

	)

107 
	#_IO_IS_APPENDING
 0x1000

	)

108 
	#_IO_IS_FILEBUF
 0x2000

	)

109 
	#_IO_BAD_SEEN
 0x4000

	)

110 
	#_IO_USER_LOCK
 0x8000

	)

112 
	#_IO_FLAGS2_MMAP
 1

	)

113 
	#_IO_FLAGS2_NOTCANCEL
 2

	)

114 #ifde‡
_LIBC


115 
	#_IO_FLAGS2_FORTIFY
 4

	)

117 
	#_IO_FLAGS2_USER_WBUF
 8

	)

118 #ifde‡
_LIBC


119 
	#_IO_FLAGS2_SCANF_STD
 16

	)

120 
	#_IO_FLAGS2_NOCLOSE
 32

	)

121 
	#_IO_FLAGS2_CLOEXEC
 64

	)

125 
	#_IO_SKIPWS
 01

	)

126 
	#_IO_LEFT
 02

	)

127 
	#_IO_RIGHT
 04

	)

128 
	#_IO_INTERNAL
 010

	)

129 
	#_IO_DEC
 020

	)

130 
	#_IO_OCT
 040

	)

131 
	#_IO_HEX
 0100

	)

132 
	#_IO_SHOWBASE
 0200

	)

133 
	#_IO_SHOWPOINT
 0400

	)

134 
	#_IO_UPPERCASE
 01000

	)

135 
	#_IO_SHOWPOS
 02000

	)

136 
	#_IO_SCIENTIFIC
 04000

	)

137 
	#_IO_FIXED
 010000

	)

138 
	#_IO_UNITBUF
 020000

	)

139 
	#_IO_STDIO
 040000

	)

140 
	#_IO_DONT_CLOSE
 0100000

	)

141 
	#_IO_BOOLALPHA
 0200000

	)

144 
_IO_jump_t
; 
	g_IO_FILE
;

147 #ifde‡
_IO_MTSAFE_IO


148 #i‡
deföed
 
__GLIBC__
 && __GLIBC__ >= 2

149 
	~<bôs/°dio-lock.h
>

154 
	t_IO_lock_t
;

160 
	s_IO_m¨kî
 {

161 
_IO_m¨kî
 *
	m_√xt
;

162 
_IO_FILE
 *
	m_sbuf
;

166 
	m_pos
;

168 
£t_°ªampos
(
°ªampos
 
•
Ë{ 
	m_•os
 = sp; }

169 
£t_off£t
(
off£t
Ë{ 
	m_pos
 = off£t; 
	m_•os
 = (
°ªampos
)(-2); }

170 
	mpublic
:

171 
°ªamm¨kî
(
°ªambuf
 *
sb
);

172 ~
°ªamm¨kî
();

173 
ßvög
(Ë{  
	m_•os
 == -2; }

174 
dñè
(
°ªamm¨kî
&);

175 
dñè
();

180 
	e__codecvt_ªsu…


182 
	m__codecvt_ok
,

183 
	m__codecvt_∑πül
,

184 
	m__codecvt_îr‹
,

185 
	m__codecvt_noc⁄v


188 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


191 
	s_IO_codecvt


193 (*
	m__codecvt_de°r
Ë(
	m_IO_codecvt
 *);

194 
__codecvt_ªsu…
 (*
__codecvt_do_out
Ë(
	m_IO_codecvt
 *,

195 
	m__mb°©e_t
 *,

196 c⁄° 
	mwch¨_t
 *,

197 c⁄° 
	mwch¨_t
 *,

198 c⁄° 
	mwch¨_t
 **, *,

200 
__codecvt_ªsu…
 (*
__codecvt_do_unshi·
Ë(
	m_IO_codecvt
 *,

201 
	m__mb°©e_t
 *, *,

203 
__codecvt_ªsu…
 (*
__codecvt_do_ö
Ë(
	m_IO_codecvt
 *,

204 
	m__mb°©e_t
 *,

206 c⁄° **, 
	mwch¨_t
 *,

207 
	mwch¨_t
 *, wchar_t **);

208 (*
	m__codecvt_do_ícodög
Ë(
	m_IO_codecvt
 *);

209 (*
	m__codecvt_do_Æways_noc⁄v
Ë(
	m_IO_codecvt
 *);

210 (*
	m__codecvt_do_Àngth
Ë(
	m_IO_codecvt
 *, 
	m__mb°©e_t
 *,

211 c⁄° *, c⁄° *, 
	m_IO_size_t
);

212 (*
	m__codecvt_do_max_Àngth
Ë(
	m_IO_codecvt
 *);

214 
_IO_ic⁄v_t
 
	m__cd_ö
;

215 
_IO_ic⁄v_t
 
	m__cd_out
;

219 
	s_IO_wide_d©a


221 
wch¨_t
 *
	m_IO_ªad_±r
;

222 
wch¨_t
 *
	m_IO_ªad_íd
;

223 
wch¨_t
 *
	m_IO_ªad_ba£
;

224 
wch¨_t
 *
	m_IO_wrôe_ba£
;

225 
wch¨_t
 *
	m_IO_wrôe_±r
;

226 
wch¨_t
 *
	m_IO_wrôe_íd
;

227 
wch¨_t
 *
	m_IO_buf_ba£
;

228 
wch¨_t
 *
	m_IO_buf_íd
;

230 
wch¨_t
 *
	m_IO_ßve_ba£
;

231 
wch¨_t
 *
	m_IO_backup_ba£
;

233 
wch¨_t
 *
	m_IO_ßve_íd
;

235 
__mb°©e_t
 
	m_IO_°©e
;

236 
__mb°©e_t
 
	m_IO_œ°_°©e
;

237 
_IO_codecvt
 
	m_codecvt
;

239 
wch¨_t
 
	m_sh‹tbuf
[1];

241 c⁄° 
_IO_jump_t
 *
	m_wide_vèbÀ
;

245 
	s_IO_FILE
 {

246 
	m_Êags
;

247 
	#_IO_fûe_Êags
 
_Êags


	)

251 * 
	m_IO_ªad_±r
;

252 * 
	m_IO_ªad_íd
;

253 * 
	m_IO_ªad_ba£
;

254 * 
	m_IO_wrôe_ba£
;

255 * 
	m_IO_wrôe_±r
;

256 * 
	m_IO_wrôe_íd
;

257 * 
	m_IO_buf_ba£
;

258 * 
	m_IO_buf_íd
;

260 *
	m_IO_ßve_ba£
;

261 *
	m_IO_backup_ba£
;

262 *
	m_IO_ßve_íd
;

264 
_IO_m¨kî
 *
	m_m¨kîs
;

266 
_IO_FILE
 *
	m_chaö
;

268 
	m_fûío
;

270 
	m_blksize
;

272 
	m_Êags2
;

274 
_IO_off_t
 
	m_ﬁd_off£t
;

276 
	#__HAVE_COLUMN


	)

278 
	m_cur_cﬁumn
;

279 sig√d 
	m_vèbÀ_off£t
;

280 
	m_sh‹tbuf
[1];

284 
_IO_lock_t
 *
	m_lock
;

285 #ifde‡
_IO_USE_OLD_IO_FILE


288 
	s_IO_FILE_com∂ëe


290 
_IO_FILE
 
	m_fûe
;

292 #i‡
deföed
 
_G_IO_IO_FILE_VERSION
 && _G_IO_IO_FILE_VERSION == 0x20001

293 
_IO_off64_t
 
	m_off£t
;

294 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


296 
_IO_codecvt
 *
	m_codecvt
;

297 
_IO_wide_d©a
 *
	m_wide_d©a
;

298 
_IO_FILE
 *
	m_‰ìªs_li°
;

299 *
	m_‰ìªs_buf
;

300 
size_t
 
	m_‰ìªs_size
;

302 *
	m__∑d1
;

303 *
	m__∑d2
;

304 *
	m__∑d3
;

305 *
	m__∑d4
;

306 
size_t
 
	m__∑d5
;

308 
	m_mode
;

310 
	m_unu£d2
[15 *  (Ë- 4 *  (*Ë-  (
size_t
)];

314 #i‚de‡
__˝lu•lus


315 
_IO_FILE
 
	t_IO_FILE
;

318 
	g_IO_FILE_∂us
;

320 
_IO_FILE_∂us
 
_IO_2_1_°dö_
;

321 
_IO_FILE_∂us
 
_IO_2_1_°dout_
;

322 
_IO_FILE_∂us
 
_IO_2_1_°dîr_
;

323 #i‚de‡
_LIBC


324 
	#_IO_°dö
 ((
_IO_FILE
*)(&
_IO_2_1_°dö_
))

	)

325 
	#_IO_°dout
 ((
_IO_FILE
*)(&
_IO_2_1_°dout_
))

	)

326 
	#_IO_°dîr
 ((
_IO_FILE
*)(&
_IO_2_1_°dîr_
))

	)

328 
_IO_FILE
 *
_IO_°dö
 
©åibuã_hiddí
;

329 
_IO_FILE
 *
_IO_°dout
 
©åibuã_hiddí
;

330 
_IO_FILE
 *
_IO_°dîr
 
©åibuã_hiddí
;

338 
__ssize_t
 
	t__io_ªad_‚
 (*
	t__cookõ
, *
	t__buf
, 
	tsize_t
 
	t__nbyãs
);

346 
__ssize_t
 
	t__io_wrôe_‚
 (*
	t__cookõ
, c⁄° *
	t__buf
,

347 
	tsize_t
 
	t__n
);

355 
	t__io_£ek_‚
 (*
	t__cookõ
, 
	t_IO_off64_t
 *
	t__pos
, 
	t__w
);

358 
	t__io_˛o£_‚
 (*
	t__cookõ
);

361 #ifde‡
_GNU_SOURCE


363 
__io_ªad_‚
 
	tcookõ_ªad_fun˘i⁄_t
;

364 
__io_wrôe_‚
 
	tcookõ_wrôe_fun˘i⁄_t
;

365 
__io_£ek_‚
 
	tcookõ_£ek_fun˘i⁄_t
;

366 
__io_˛o£_‚
 
	tcookõ_˛o£_fun˘i⁄_t
;

371 
__io_ªad_‚
 *
	mªad
;

372 
__io_wrôe_‚
 *
	mwrôe
;

373 
__io_£ek_‚
 *
	m£ek
;

374 
__io_˛o£_‚
 *
	m˛o£
;

375 } 
	t_IO_cookõ_io_fun˘i⁄s_t
;

376 
_IO_cookõ_io_fun˘i⁄s_t
 
	tcookõ_io_fun˘i⁄s_t
;

378 
	g_IO_cookõ_fûe
;

381 
_IO_cookõ_öô
 (
_IO_cookõ_fûe
 *
__cfûe
, 
__ªad_wrôe
,

382 *
__cookõ
, 
_IO_cookõ_io_fun˘i⁄s_t
 
__‚s
);

386 #ifde‡
__˝lu•lus


390 
__undîÊow
 (
_IO_FILE
 *);

391 
__uÊow
 (
_IO_FILE
 *);

392 
__ovîÊow
 (
_IO_FILE
 *, );

393 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


394 
_IO_wöt_t
 
__wundîÊow
 (
_IO_FILE
 *);

395 
_IO_wöt_t
 
__wuÊow
 (
_IO_FILE
 *);

396 
_IO_wöt_t
 
__wovîÊow
 (
_IO_FILE
 *, _IO_wint_t);

399 #i‡ 
__GNUC__
 >= 3

400 
	#_IO_BE
(
ex¥
, 
ªs
Ë
	`__buûtö_ex≥˘
 (”x¥),Ñes)

	)

402 
	#_IO_BE
(
ex¥
, 
ªs
Ë”x¥)

	)

405 
	#_IO_gëc_u∆ocked
(
_Â
) \

406 (
	`_IO_BE
 ((
_Â
)->
_IO_ªad_±r
 >(_Â)->
_IO_ªad_íd
, 0) \

407 ? 
	`__uÊow
 (
_Â
Ë: *(*Ë(_Â)->
_IO_ªad_±r
++)

	)

408 
	#_IO_≥ekc_u∆ocked
(
_Â
) \

409 (
	`_IO_BE
 ((
_Â
)->
_IO_ªad_±r
 >(_Â)->
_IO_ªad_íd
, 0) \

410 && 
	`__undîÊow
 (
_Â
Ë=
EOF
 ? EOF \

411 : *(*Ë(
_Â
)->
_IO_ªad_±r
)

	)

412 
	#_IO_putc_u∆ocked
(
_ch
, 
_Â
) \

413 (
	`_IO_BE
 ((
_Â
)->
_IO_wrôe_±r
 >(_Â)->
_IO_wrôe_íd
, 0) \

414 ? 
	`__ovîÊow
 (
_Â
, (Ë(
_ch
)) \

415 : (Ë(*(
_Â
)->
_IO_wrôe_±r
++ = (
_ch
)))

	)

417 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


418 
	#_IO_gëwc_u∆ocked
(
_Â
) \

419 (
	`_IO_BE
 ((
_Â
)->
_wide_d©a
 =
NULL
 \

420 || ((
_Â
)->
_wide_d©a
->
_IO_ªad_±r
 \

421 >(
_Â
)->
_wide_d©a
->
_IO_ªad_íd
), 0) \

422 ? 
	`__wuÊow
 (
_Â
Ë: (
_IO_wöt_t
Ë*(_Â)->
_wide_d©a
->
_IO_ªad_±r
++)

	)

423 
	#_IO_putwc_u∆ocked
(
_wch
, 
_Â
) \

424 (
	`_IO_BE
 ((
_Â
)->
_wide_d©a
 =
NULL
 \

425 || ((
_Â
)->
_wide_d©a
->
_IO_wrôe_±r
 \

426 >(
_Â
)->
_wide_d©a
->
_IO_wrôe_íd
), 0) \

427 ? 
	`__wovîÊow
 (
_Â
, 
_wch
) \

428 : (
_IO_wöt_t
Ë(*(
_Â
)->
_wide_d©a
->
_IO_wrôe_±r
++ = (
_wch
)))

	)

431 
	#_IO_„of_u∆ocked
(
__Â
Ë(((__Â)->
_Êags
 & 
_IO_EOF_SEEN
Ë!0)

	)

432 
	#_IO_„º‹_u∆ocked
(
__Â
Ë(((__Â)->
_Êags
 & 
_IO_ERR_SEEN
Ë!0)

	)

434 
_IO_gëc
 (
_IO_FILE
 *
__Â
);

435 
_IO_putc
 (
__c
, 
_IO_FILE
 *
__Â
);

436 
_IO_„of
 (
_IO_FILE
 *
__Â
Ë
__THROW
;

437 
_IO_„º‹
 (
_IO_FILE
 *
__Â
Ë
__THROW
;

439 
_IO_≥ekc_locked
 (
_IO_FILE
 *
__Â
);

442 
	#_IO_PENDING_OUTPUT_COUNT
(
_Â
) \

443 ((
_Â
)->
_IO_wrôe_±r
 - (_Â)->
_IO_wrôe_ba£
)

	)

445 
_IO_Êockfûe
 (
_IO_FILE
 *Ë
__THROW
;

446 
_IO_fu∆ockfûe
 (
_IO_FILE
 *Ë
__THROW
;

447 
_IO_·rylockfûe
 (
_IO_FILE
 *Ë
__THROW
;

449 #ifde‡
_IO_MTSAFE_IO


450 
	#_IO_≥ekc
(
_Â
Ë
	`_IO_≥ekc_locked
 (_Â)

	)

451 
	#_IO_Êockfûe
(
_Â
) \

452 i‡(((
_Â
)->
_Êags
 & 
_IO_USER_LOCK
Ë=0Ë
	`_IO_Êockfûe
 (_Â)

	)

453 
	#_IO_fu∆ockfûe
(
_Â
) \

454 i‡(((
_Â
)->
_Êags
 & 
_IO_USER_LOCK
Ë=0Ë
	`_IO_fu∆ockfûe
 (_Â)

	)

456 
	#_IO_≥ekc
(
_Â
Ë
	`_IO_≥ekc_u∆ocked
 (_Â)

	)

457 
	#_IO_Êockfûe
(
_Â
Ë

	)

458 
	#_IO_fu∆ockfûe
(
_Â
Ë

	)

459 
	#_IO_·rylockfûe
(
_Â
Ë

	)

460 
	#_IO_˛ónup_ªgi⁄_°¨t
(
_f˘
, 
_Â
Ë

	)

461 
	#_IO_˛ónup_ªgi⁄_íd
(
_Doô
Ë

	)

464 
_IO_vfsˇnf
 (
_IO_FILE
 * 
__ª°ri˘
, const * __restrict,

465 
_IO_va_li°
, *
__ª°ri˘
);

466 
_IO_vÂrötf
 (
_IO_FILE
 *
__ª°ri˘
, const *__restrict,

467 
_IO_va_li°
);

468 
_IO_ssize_t
 
_IO_∑dn
 (
_IO_FILE
 *, , _IO_ssize_t);

469 
_IO_size_t
 
_IO_sgën
 (
_IO_FILE
 *, *, _IO_size_t);

471 
_IO_off64_t
 
_IO_£ekoff
 (
_IO_FILE
 *, _IO_off64_t, , );

472 
_IO_off64_t
 
_IO_£ekpos
 (
_IO_FILE
 *, _IO_off64_t, );

474 
_IO_‰ì_backup_¨ó
 (
_IO_FILE
 *Ë
__THROW
;

476 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


477 
_IO_wöt_t
 
_IO_gëwc
 (
_IO_FILE
 *
__Â
);

478 
_IO_wöt_t
 
_IO_putwc
 (
wch¨_t
 
__wc
, 
_IO_FILE
 *
__Â
);

479 
_IO_fwide
 (
_IO_FILE
 *
__Â
, 
__mode
Ë
__THROW
;

480 #i‡
__GNUC__
 >= 2

483 #i‡
deföed
 
_LIBC
 && deföed 
SHARED


484 
	~<shlib-com∑t.h
>

485 #i‡
SHLIB_COMPAT
 (
libc
, 
GLIBC_2_0
, 
GLIBC_2_1
)

486 
	#_IO_fwide_maybe_öcom∑tibÀ
 \

487 (
	`__buûtö_ex≥˘
 (&
_IO_°dö_u£d
 =
NULL
, 0))

	)

488 c⁄° 
_IO_°dö_u£d
;

489 
wók_exã∫
 (
_IO_°dö_u£d
);

492 #i‚de‡
_IO_fwide_maybe_öcom∑tibÀ


493 
	#_IO_fwide_maybe_öcom∑tibÀ
 (0)

	)

497 
	#_IO_fwide
(
__Â
, 
__mode
) \

498 ({ 
__ªsu…
 = (
__mode
); \

499 i‡(
__ªsu…
 < 0 && ! 
_IO_fwide_maybe_öcom∑tibÀ
) \

501 i‡((
__Â
)->
_mode
 == 0) \

503 (
__Â
)->
_mode
 = -1; \

504 
__ªsu…
 = (
__Â
)->
_mode
; \

506 i‡(
	`__buûtö_c⁄°™t_p
 (
__mode
) && (__mode) == 0) \

507 
__ªsu…
 = 
_IO_fwide_maybe_öcom∑tibÀ
 ? -1 : (
__Â
)->
_mode
; \

509 
__ªsu…
 = 
	`_IO_fwide
 (
__Â
, __result); \

510 
__ªsu…
; })

	)

513 
_IO_vfwsˇnf
 (
_IO_FILE
 * 
__ª°ri˘
, c⁄° 
wch¨_t
 * __restrict,

514 
_IO_va_li°
, *
__ª°ri˘
);

515 
_IO_vfw¥ötf
 (
_IO_FILE
 *
__ª°ri˘
, c⁄° 
wch¨_t
 *__restrict,

516 
_IO_va_li°
);

517 
_IO_ssize_t
 
_IO_w∑dn
 (
_IO_FILE
 *, 
wöt_t
, _IO_ssize_t);

518 
_IO_‰ì_wbackup_¨ó
 (
_IO_FILE
 *Ë
__THROW
;

521 #ifde‡
__LDBL_COMPAT


522 
	~<bôs/libio-ldbl.h
>

525 #ifde‡
__˝lu•lus


	@/usr/include/xlocale.h

20 #i‚de‡
_XLOCALE_H


21 
	#_XLOCALE_H
 1

	)

27 
	s__loˇÀ_°ru˘


30 
__loˇÀ_d©a
 *
	m__loˇÀs
[13];

33 c⁄° *
	m__˘y≥_b
;

34 c⁄° *
	m__˘y≥_tﬁowî
;

35 c⁄° *
	m__˘y≥_touµî
;

38 c⁄° *
	m__«mes
[13];

39 } *
	t__loˇÀ_t
;

42 
__loˇÀ_t
 
	tloˇÀ_t
;

	@/usr/include/_G_config.h

4 #i‚de‡
_G_c⁄fig_h


5 
	#_G_c⁄fig_h
 1

	)

9 
	~<bôs/ty≥s.h
>

10 
	#__√ed_size_t


	)

11 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


12 
	#__√ed_wch¨_t


	)

14 
	#__√ed_NULL


	)

15 
	~<°ddef.h
>

16 
	#__√ed_mb°©e_t


	)

17 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


18 
	#__√ed_wöt_t


	)

20 
	~<wch¨.h
>

23 
__off_t
 
	m__pos
;

24 
__mb°©e_t
 
	m__°©e
;

25 } 
	t_G_Âos_t
;

28 
__off64_t
 
	m__pos
;

29 
__mb°©e_t
 
	m__°©e
;

30 } 
	t_G_Âos64_t
;

31 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


32 
	~<gc⁄v.h
>

35 
__gc⁄v_öfo
 
	m__cd
;

38 
__gc⁄v_öfo
 
	m__cd
;

39 
__gc⁄v_°ï_d©a
 
	m__d©a
;

40 } 
	m__comböed
;

41 } 
	t_G_ic⁄v_t
;

46 
	#_G_va_li°
 
__gnuc_va_li°


	)

48 
	#_G_HAVE_MMAP
 1

	)

49 
	#_G_HAVE_MREMAP
 1

	)

51 
	#_G_IO_IO_FILE_VERSION
 0x20001

	)

54 
	#_G_HAVE_ST_BLKSIZE
 
	`deföed
 (
_STATBUF_ST_BLKSIZE
)

	)

56 
	#_G_BUFSIZ
 8192

	)

	@/usr/include/stdc-predef.h

18 #i‚def 
_STDC_PREDEF_H


19 
	#_STDC_PREDEF_H
 1

	)

36 #ifde‡
__GCC_IEC_559


37 #i‡
__GCC_IEC_559
 > 0

38 
	#__STDC_IEC_559__
 1

	)

41 
	#__STDC_IEC_559__
 1

	)

44 #ifde‡
__GCC_IEC_559_COMPLEX


45 #i‡
__GCC_IEC_559_COMPLEX
 > 0

46 
	#__STDC_IEC_559_COMPLEX__
 1

	)

49 
	#__STDC_IEC_559_COMPLEX__
 1

	)

54 
	#__STDC_ISO_10646__
 201103L

	)

57 
	#__STDC_NO_THREADS__
 1

	)

	@/usr/include/gconv.h

22 #i‚de‡
_GCONV_H


23 
	#_GCONV_H
 1

	)

25 
	~<„©uªs.h
>

26 
	#__√ed_mb°©e_t


	)

27 
	#__√ed_wöt_t


	)

28 
	~<wch¨.h
>

29 
	#__√ed_size_t


	)

30 
	#__√ed_wch¨_t


	)

31 
	~<°ddef.h
>

34 
	#__UNKNOWN_10646_CHAR
 ((
wch¨_t
Ë0xfffd)

	)

39 
	m__GCONV_OK
 = 0,

40 
	m__GCONV_NOCONV
,

41 
	m__GCONV_NODB
,

42 
	m__GCONV_NOMEM
,

44 
	m__GCONV_EMPTY_INPUT
,

45 
	m__GCONV_FULL_OUTPUT
,

46 
	m__GCONV_ILLEGAL_INPUT
,

47 
	m__GCONV_INCOMPLETE_INPUT
,

49 
	m__GCONV_ILLEGAL_DESCRIPTOR
,

50 
	m__GCONV_INTERNAL_ERROR


57 
	m__GCONV_IS_LAST
 = 0x0001,

58 
	m__GCONV_IGNORE_ERRORS
 = 0x0002,

59 
	m__GCONV_SWAP
 = 0x0004,

60 
	m__GCONV_TRANSLIT
 = 0x0008

65 
	g__gc⁄v_°ï
;

66 
	g__gc⁄v_°ï_d©a
;

67 
	g__gc⁄v_lﬂded_obje˘
;

71 (*
	t__gc⁄v_f˘
Ë(
	t__gc⁄v_°ï
 *, 
	t__gc⁄v_°ï_d©a
 *,

73 **, 
	tsize_t
 *, , );

76 
	$wöt_t
 (*
	t__gc⁄v_btowc_f˘
Ë(
	t__gc⁄v_°ï
 *, );

79 (*
	t__gc⁄v_öô_f˘
Ë(
	t__gc⁄v_°ï
 *);

80 (*
	t__gc⁄v_íd_f˘
Ë(
	t__gc⁄v_°ï
 *);

84 
	s__gc⁄v_°ï


86 
__gc⁄v_lﬂded_obje˘
 *
__shlib_h™dÀ
;

87 c⁄° *
__mod«me
;

89 
__cou¡î
;

91 *
__‰om_«me
;

92 *
__to_«me
;

94 
__gc⁄v_f˘
 
__f˘
;

95 
__gc⁄v_btowc_f˘
 
__btowc_f˘
;

96 
__gc⁄v_öô_f˘
 
__öô_f˘
;

97 
__gc⁄v_íd_f˘
 
__íd_f˘
;

101 
__mö_√eded_‰om
;

102 
__max_√eded_‰om
;

103 
__mö_√eded_to
;

104 
__max_√eded_to
;

107 
__°©eful
;

109 *
__d©a
;

114 
	s__gc⁄v_°ï_d©a


116 *
__outbuf
;

117 *
__outbu„nd
;

121 
__Êags
;

125 
__övoˇti⁄_cou¡î
;

129 
__öã∫Æ_u£
;

131 
__mb°©e_t
 *
__°©ï
;

132 
__mb°©e_t
 
__°©e
;

138 
	s__gc⁄v_öfo


140 
size_t
 
__n°ïs
;

141 
__gc⁄v_°ï
 *
__°ïs
;

142 
__exãnsi⁄__
 
__gc⁄v_°ï_d©a
 
__d©a
 
__Êex¨r
;

143 } *
	t__gc⁄v_t
;

146 
	`__gc⁄v_å™¶ôî©e
 (
__gc⁄v_°ï
 *
°ï
,

147 
__gc⁄v_°ï_d©a
 *
°ï_d©a
,

148 c⁄° *
öbuf°¨t
,

149 c⁄° **
öbuÂ
,

150 c⁄° *
öbu„nd
,

151 **
outbuf°¨t
,

152 
size_t
 *
úªvîsibÀ
);

	@/usr/include/wchar.h

23 #i‚de‡
_WCHAR_H


25 #i‡!
deföed
 
__√ed_mb°©e_t
 && !deföed 
__√ed_wöt_t


26 
	#_WCHAR_H
 1

	)

27 
	~<„©uªs.h
>

30 #ifde‡
_WCHAR_H


32 
	#__√ed___FILE


	)

33 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


34 
	#__√ed_FILE


	)

36 
	~<°dio.h
>

38 
	#__√ed___va_li°


	)

39 
	~<°d¨g.h
>

41 
	~<bôs/wch¨.h
>

44 
	#__√ed_size_t


	)

45 
	#__√ed_wch¨_t


	)

46 
	#__√ed_NULL


	)

48 #i‡
deföed
 
_WCHAR_H
 || deföed 
__√ed_wöt_t
 || !deföed 
__WINT_TYPE__


49 #unde‡
__√ed_wöt_t


50 
	#__√ed_wöt_t


	)

51 
	~<°ddef.h
>

55 #i‚de‡
_WINT_T


60 
	#_WINT_T


	)

61 
	twöt_t
;

65 #i‡
deföed
 
__˝lu•lus
 && deföed 
_GLIBCPP_USE_NAMESPACES
 \

66 && 
deföed
 
__WINT_TYPE__


67 
__BEGIN_NAMESPACE_STD


68 
__WINT_TYPE__
 
	twöt_t
;

69 
	g__END_NAMESPACE_STD


74 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (4, 4)

75 
	#__CORRECT_ISO_CPP_WCHAR_H_PROTO


	)

79 #i‡(
deföed
 
_WCHAR_H
 || deföed 
__√ed_mb°©e_t
Ë&& !deföed 
____mb°©e_t_deföed


80 
	#____mb°©e_t_deföed
 1

	)

84 
	m__cou¡
;

87 #ifde‡
__WINT_TYPE__


88 
__WINT_TYPE__
 
	m__wch
;

90 
wöt_t
 
	m__wch
;

92 
	m__wchb
[4];

93 } 
	m__vÆue
;

94 } 
	t__mb°©e_t
;

96 #unde‡
__√ed_mb°©e_t


101 #ifde‡
_WCHAR_H


103 #i‚de‡
__mb°©e_t_deföed


104 
__BEGIN_NAMESPACE_C99


106 
__mb°©e_t
 
	tmb°©e_t
;

107 
	g__END_NAMESPACE_C99


108 
	#__mb°©e_t_deföed
 1

	)

111 #ifde‡
__USE_GNU


112 
	$__USING_NAMESPACE_C99
(
mb°©e_t
)

115 #i‚de‡
WCHAR_MIN


117 
	#WCHAR_MIN
 
__WCHAR_MIN


	)

118 
	#WCHAR_MAX
 
__WCHAR_MAX


	)

121 #i‚de‡
WEOF


122 
	#WEOF
 (0xffffffffu)

	)

127 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_UNIX98


128 
	~<w˘y≥.h
>

132 
__BEGIN_DECLS


134 
__BEGIN_NAMESPACE_STD


137 
tm
;

138 
__END_NAMESPACE_STD


142 
	$__USING_NAMESPACE_STD
(
tm
)

145 
__BEGIN_NAMESPACE_STD


147 
wch¨_t
 *
	$wcs˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

148 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
Ë
__THROW
;

150 
wch¨_t
 *
	$wc¢˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

151 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

152 
__THROW
;

155 
wch¨_t
 *
	$wcsˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

156 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
Ë
__THROW
;

158 
wch¨_t
 *
	$wc¢ˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

159 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

160 
__THROW
;

163 
	$wcscmp
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
)

164 
__THROW
 
__©åibuã_puª__
;

166 
	$wc¢cmp
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
, 
size_t
 
__n
)

167 
__THROW
 
__©åibuã_puª__
;

168 
__END_NAMESPACE_STD


170 #ifde‡
__USE_XOPEN2K8


172 
	$wcsˇ£cmp
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
Ë
__THROW
;

175 
	$wc¢ˇ£cmp
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

176 
size_t
 
__n
Ë
__THROW
;

180 
	~<xloˇÀ.h
>

182 
	$wcsˇ£cmp_l
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

183 
__loˇÀ_t
 
__loc
Ë
__THROW
;

185 
	$wc¢ˇ£cmp_l
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

186 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

189 
__BEGIN_NAMESPACE_STD


192 
	$wcscﬁl
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
Ë
__THROW
;

196 
size_t
 
	$wcsx‰m
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

197 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
Ë
__THROW
;

198 
__END_NAMESPACE_STD


200 #ifde‡
__USE_XOPEN2K8


206 
	$wcscﬁl_l
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

207 
__loˇÀ_t
 
__loc
Ë
__THROW
;

212 
size_t
 
	$wcsx‰m_l
 (
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

213 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

216 
wch¨_t
 *
	$wcsdup
 (c⁄° 
wch¨_t
 *
__s
Ë
__THROW
 
__©åibuã_mÆloc__
;

219 
__BEGIN_NAMESPACE_STD


221 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


222 "C++" 
wch¨_t
 *
	$wcschr
 (
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

223 
__THROW
 
	`__asm
 ("wcschr"Ë
__©åibuã_puª__
;

224 "C++" c⁄° 
wch¨_t
 *
	$wcschr
 (c⁄° 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

225 
__THROW
 
	`__asm
 ("wcschr"Ë
__©åibuã_puª__
;

227 
wch¨_t
 *
	$wcschr
 (c⁄° 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

228 
__THROW
 
__©åibuã_puª__
;

231 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


232 "C++" 
wch¨_t
 *
	$wc§chr
 (
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

233 
__THROW
 
	`__asm
 ("wc§chr"Ë
__©åibuã_puª__
;

234 "C++" c⁄° 
wch¨_t
 *
	$wc§chr
 (c⁄° 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

235 
__THROW
 
	`__asm
 ("wc§chr"Ë
__©åibuã_puª__
;

237 
wch¨_t
 *
	$wc§chr
 (c⁄° 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

238 
__THROW
 
__©åibuã_puª__
;

240 
__END_NAMESPACE_STD


242 #ifde‡
__USE_GNU


245 
wch¨_t
 *
	$wcsch∫ul
 (c⁄° 
wch¨_t
 *
__s
, wch¨_à
__wc
)

246 
__THROW
 
__©åibuã_puª__
;

249 
__BEGIN_NAMESPACE_STD


252 
size_t
 
	$wcsc•n
 (c⁄° 
wch¨_t
 *
__wcs
, c⁄° wch¨_à*
__ªje˘
)

253 
__THROW
 
__©åibuã_puª__
;

256 
size_t
 
	$wcs•n
 (c⁄° 
wch¨_t
 *
__wcs
, c⁄° wch¨_à*
__ac˚±
)

257 
__THROW
 
__©åibuã_puª__
;

259 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


260 "C++" 
wch¨_t
 *
	$wc•brk
 (
wch¨_t
 *
__wcs
, c⁄° wch¨_à*
__ac˚±
)

261 
__THROW
 
	`__asm
 ("wc•brk"Ë
__©åibuã_puª__
;

262 "C++" c⁄° 
wch¨_t
 *
	$wc•brk
 (c⁄° 
wch¨_t
 *
__wcs
,

263 c⁄° 
wch¨_t
 *
__ac˚±
)

264 
__THROW
 
	`__asm
 ("wc•brk"Ë
__©åibuã_puª__
;

266 
wch¨_t
 *
	$wc•brk
 (c⁄° 
wch¨_t
 *
__wcs
, c⁄° wch¨_à*
__ac˚±
)

267 
__THROW
 
__©åibuã_puª__
;

270 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


271 "C++" 
wch¨_t
 *
	$wcs°r
 (
wch¨_t
 *
__hay°ack
, c⁄° wch¨_à*
__√edÀ
)

272 
__THROW
 
	`__asm
 ("wcs°r"Ë
__©åibuã_puª__
;

273 "C++" c⁄° 
wch¨_t
 *
	$wcs°r
 (c⁄° 
wch¨_t
 *
__hay°ack
,

274 c⁄° 
wch¨_t
 *
__√edÀ
)

275 
__THROW
 
	`__asm
 ("wcs°r"Ë
__©åibuã_puª__
;

277 
wch¨_t
 *
	$wcs°r
 (c⁄° 
wch¨_t
 *
__hay°ack
, c⁄° wch¨_à*
__√edÀ
)

278 
__THROW
 
__©åibuã_puª__
;

282 
wch¨_t
 *
	$wc°ok
 (
wch¨_t
 *
__ª°ri˘
 
__s
,

283 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__dñim
,

284 
wch¨_t
 **
__ª°ri˘
 
__±r
Ë
__THROW
;

287 
size_t
 
	$wc¶í
 (c⁄° 
wch¨_t
 *
__s
Ë
__THROW
 
__©åibuã_puª__
;

288 
__END_NAMESPACE_STD


290 #ifde‡
__USE_XOPEN


292 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


293 "C++" 
wch¨_t
 *
	$wcswcs
 (
wch¨_t
 *
__hay°ack
, c⁄° wch¨_à*
__√edÀ
)

294 
__THROW
 
	`__asm
 ("wcswcs"Ë
__©åibuã_puª__
;

295 "C++" c⁄° 
wch¨_t
 *
	$wcswcs
 (c⁄° 
wch¨_t
 *
__hay°ack
,

296 c⁄° 
wch¨_t
 *
__√edÀ
)

297 
__THROW
 
	`__asm
 ("wcswcs"Ë
__©åibuã_puª__
;

299 
wch¨_t
 *
	$wcswcs
 (c⁄° 
wch¨_t
 *
__hay°ack
, c⁄° wch¨_à*
__√edÀ
)

300 
__THROW
 
__©åibuã_puª__
;

304 #ifde‡
__USE_XOPEN2K8


306 
size_t
 
	$wc¢Àn
 (c⁄° 
wch¨_t
 *
__s
, 
size_t
 
__maxÀn
)

307 
__THROW
 
__©åibuã_puª__
;

311 
__BEGIN_NAMESPACE_STD


313 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


314 "C++" 
wch¨_t
 *
	$wmemchr
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
)

315 
__THROW
 
	`__asm
 ("wmemchr"Ë
__©åibuã_puª__
;

316 "C++" c⁄° 
wch¨_t
 *
	$wmemchr
 (c⁄° 
wch¨_t
 *
__s
, wch¨_à
__c
,

317 
size_t
 
__n
)

318 
__THROW
 
	`__asm
 ("wmemchr"Ë
__©åibuã_puª__
;

320 
wch¨_t
 *
	$wmemchr
 (c⁄° 
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
)

321 
__THROW
 
__©åibuã_puª__
;

325 
	$wmemcmp
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
, 
size_t
 
__n
)

326 
__THROW
 
__©åibuã_puª__
;

329 
wch¨_t
 *
	$wmem˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

330 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
Ë
__THROW
;

334 
wch¨_t
 *
	$wmemmove
 (
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
, 
size_t
 
__n
)

335 
__THROW
;

338 
wch¨_t
 *
	$wmem£t
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
Ë
__THROW
;

339 
__END_NAMESPACE_STD


341 #ifde‡
__USE_GNU


344 
wch¨_t
 *
	$wmemp˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

345 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
)

346 
__THROW
;

350 
__BEGIN_NAMESPACE_STD


353 
wöt_t
 
	$btowc
 (
__c
Ë
__THROW
;

357 
	$w˘ob
 (
wöt_t
 
__c
Ë
__THROW
;

361 
	$mbsöô
 (c⁄° 
mb°©e_t
 *
__ps
Ë
__THROW
 
__©åibuã_puª__
;

365 
size_t
 
	$mbπowc
 (
wch¨_t
 *
__ª°ri˘
 
__pwc
,

366 c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

367 
mb°©e_t
 *
__ª°ri˘
 
__p
Ë
__THROW
;

370 
size_t
 
	$w¸tomb
 (*
__ª°ri˘
 
__s
, 
wch¨_t
 
__wc
,

371 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

374 
size_t
 
	$__mbæí
 (c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

375 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

376 
size_t
 
	$mbæí
 (c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

377 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

378 
__END_NAMESPACE_STD


380 #ifde‡
__USE_EXTERN_INLINES


386 
wöt_t
 
	$__btowc_Æüs
 (
__c
Ë
	`__asm
 ("btowc");

387 
__exã∫_ölöe
 
wöt_t


388 
	`__NTH
 (
	$btowc
 (
__c
))

389 {  (
	`__buûtö_c⁄°™t_p
 (
__c
) && __c >= '\0' && __c <= '\x7f'

390 ? (
wöt_t
Ë
__c
 : 
	`__btowc_Æüs
 (__c)); 
	}
}

392 
	$__w˘ob_Æüs
 (
wöt_t
 
__c
Ë
	`__asm
 ("wctob");

393 
__exã∫_ölöe
 

394 
	`__NTH
 (
	$w˘ob
 (
wöt_t
 
__wc
))

395 {  (
	`__buûtö_c⁄°™t_p
 (
__wc
Ë&& __w¯>
L
'\0' && __wc <= L'\x7f'

396 ? (Ë
__wc
 : 
	`__w˘ob_Æüs
 (__wc)); 
	}
}

398 
__exã∫_ölöe
 
size_t


399 
__NTH
 (
	$mbæí
 (c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

400 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

401 {  (
__ps
 !
NULL


402 ? 
	`mbπowc
 (
NULL
, 
__s
, 
__n
, 
__ps
Ë: 
	`__mbæí
 (__s, __n, NULL)); 
	}
}

405 
__BEGIN_NAMESPACE_STD


408 
size_t
 
	$mb§towcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

409 c⁄° **
__ª°ri˘
 
__§c
, 
size_t
 
__Àn
,

410 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

414 
size_t
 
	$wc§tombs
 (*
__ª°ri˘
 
__d°
,

415 c⁄° 
wch¨_t
 **
__ª°ri˘
 
__§c
, 
size_t
 
__Àn
,

416 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

417 
__END_NAMESPACE_STD


420 #ifdef 
__USE_XOPEN2K8


423 
size_t
 
	$mb¢πowcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

424 c⁄° **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

425 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

429 
size_t
 
	$wc¢πombs
 (*
__ª°ri˘
 
__d°
,

430 c⁄° 
wch¨_t
 **
__ª°ri˘
 
__§c
,

431 
size_t
 
__nwc
, size_à
__Àn
,

432 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

437 #ifde‡
__USE_XOPEN


439 
	$wcwidth
 (
wch¨_t
 
__c
Ë
__THROW
;

443 
	$wcswidth
 (c⁄° 
wch¨_t
 *
__s
, 
size_t
 
__n
Ë
__THROW
;

447 
__BEGIN_NAMESPACE_STD


450 
	$wc°od
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

451 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

452 
__END_NAMESPACE_STD


454 #ifde‡
__USE_ISOC99


455 
__BEGIN_NAMESPACE_C99


457 
	$wc°of
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

458 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

459 
	$wc°ﬁd
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

460 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

461 
__END_NAMESPACE_C99


465 
__BEGIN_NAMESPACE_STD


468 
	$wc°ﬁ
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

469 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
Ë
__THROW
;

473 
	$wc°oul
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

474 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

475 
__THROW
;

476 
__END_NAMESPACE_STD


478 #ifde‡
__USE_ISOC99


479 
__BEGIN_NAMESPACE_C99


482 
__exãnsi⁄__


483 
	$wc°ﬁl
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

484 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

485 
__THROW
;

489 
__exãnsi⁄__


490 
	$wc°ouŒ
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

491 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

492 
__ba£
Ë
__THROW
;

493 
__END_NAMESPACE_C99


496 #ifde‡
__USE_GNU


499 
__exãnsi⁄__


500 
	$wc°oq
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

501 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

502 
__THROW
;

506 
__exãnsi⁄__


507 
	$wc°ouq
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

508 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

509 
__ba£
Ë
__THROW
;

512 #ifde‡
__USE_GNU


526 
	~<xloˇÀ.h
>

530 
	$wc°ﬁ_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

531 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

532 
__loˇÀ_t
 
__loc
Ë
__THROW
;

534 
	$wc°oul_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

535 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

536 
__ba£
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

538 
__exãnsi⁄__


539 
	$wc°ﬁl_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

540 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

541 
__ba£
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

543 
__exãnsi⁄__


544 
	$wc°ouŒ_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

545 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

546 
__ba£
, 
__loˇÀ_t
 
__loc
)

547 
__THROW
;

549 
	$wc°od_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

550 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

551 
__THROW
;

553 
	$wc°of_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

554 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

555 
__THROW
;

557 
	$wc°ﬁd_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

558 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

559 
__loˇÀ_t
 
__loc
Ë
__THROW
;

563 #ifde‡
__USE_XOPEN2K8


566 
wch¨_t
 *
	$w˝˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

567 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
Ë
__THROW
;

571 
wch¨_t
 *
	$w˝n˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

572 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

573 
__THROW
;

580 
__FILE
 *
	$›í_wmem°ªam
 (
wch¨_t
 **
__buÊoc
, 
size_t
 *
__sizñoc
Ë
__THROW
;

583 #i‡
deföed
 
__USE_ISOC95
 || deföed 
__USE_UNIX98


584 
__BEGIN_NAMESPACE_STD


587 
	$fwide
 (
__FILE
 *
__Â
, 
__mode
Ë
__THROW
;

594 
	`fw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

595 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

601 
	`w¥ötf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

604 
	$sw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

605 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

606 
__THROW
 ;

612 
	`vfw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__s
,

613 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

614 
__gnuc_va_li°
 
__¨g
)

620 
	`vw¥ötf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

621 
__gnuc_va_li°
 
__¨g
)

625 
	$vsw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

626 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

627 
__gnuc_va_li°
 
__¨g
)

628 
__THROW
 ;

635 
	`fwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

636 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

642 
	`wsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

645 
	$swsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

646 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

647 
__THROW
 ;

649 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

650 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

651 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

652 #ifde‡
__REDIRECT


656 
	`__REDIRECT
 (
fwsˇnf
, (
__FILE
 *
__ª°ri˘
 
__°ªam
,

657 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...),

658 
__isoc99_fwsˇnf
)

660 
	`__REDIRECT
 (
wsˇnf
, (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...),

661 
__isoc99_wsˇnf
)

663 
	`__REDIRECT_NTH
 (
swsˇnf
, (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

664 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

665 ...), 
__isoc99_swsˇnf
)

668 
	`__isoc99_fwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

669 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...);

670 
	`__isoc99_wsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...);

671 
	$__isoc99_swsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

672 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

673 
__THROW
;

674 
	#fwsˇnf
 
__isoc99_fwsˇnf


	)

675 
	#wsˇnf
 
__isoc99_wsˇnf


	)

676 
	#swsˇnf
 
__isoc99_swsˇnf


	)

680 
__END_NAMESPACE_STD


683 #ifde‡
__USE_ISOC99


684 
__BEGIN_NAMESPACE_C99


689 
	`vfwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__s
,

690 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

691 
__gnuc_va_li°
 
__¨g
)

697 
	`vwsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

698 
__gnuc_va_li°
 
__¨g
)

701 
	$vswsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

702 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

703 
__gnuc_va_li°
 
__¨g
)

704 
__THROW
 ;

706 #i‡!
deföed
 
__USE_GNU
 \

707 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

708 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

709 #ifde‡
__REDIRECT


710 
	`__REDIRECT
 (
vfwsˇnf
, (
__FILE
 *
__ª°ri˘
 
__s
,

711 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

712 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vfwsˇnf
)

714 
	`__REDIRECT
 (
vwsˇnf
, (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

715 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vwsˇnf
)

717 
	`__REDIRECT_NTH
 (
vswsˇnf
, (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

718 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

719 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vswsˇnf
)

722 
	`__isoc99_vfwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__s
,

723 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

724 
__gnuc_va_li°
 
__¨g
);

725 
	`__isoc99_vwsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

726 
__gnuc_va_li°
 
__¨g
);

727 
	$__isoc99_vswsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

728 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

729 
__gnuc_va_li°
 
__¨g
Ë
__THROW
;

730 
	#vfwsˇnf
 
__isoc99_vfwsˇnf


	)

731 
	#vwsˇnf
 
__isoc99_vwsˇnf


	)

732 
	#vswsˇnf
 
__isoc99_vswsˇnf


	)

736 
__END_NAMESPACE_C99


740 
__BEGIN_NAMESPACE_STD


745 
wöt_t
 
	`fgëwc
 (
__FILE
 *
__°ªam
);

746 
wöt_t
 
	`gëwc
 (
__FILE
 *
__°ªam
);

752 
wöt_t
 
	`gëwch¨
 ();

759 
wöt_t
 
	`Âutwc
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

760 
wöt_t
 
	`putwc
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

766 
wöt_t
 
	`putwch¨
 (
wch¨_t
 
__wc
);

774 
wch¨_t
 *
	`fgëws
 (wch¨_à*
__ª°ri˘
 
__ws
, 
__n
,

775 
__FILE
 *
__ª°ri˘
 
__°ªam
);

781 
	`Âutws
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__ws
,

782 
__FILE
 *
__ª°ri˘
 
__°ªam
);

789 
wöt_t
 
	`ungëwc
 (wöt_à
__wc
, 
__FILE
 *
__°ªam
);

790 
__END_NAMESPACE_STD


793 #ifde‡
__USE_GNU


801 
wöt_t
 
	`gëwc_u∆ocked
 (
__FILE
 *
__°ªam
);

802 
wöt_t
 
	`gëwch¨_u∆ocked
 ();

810 
wöt_t
 
	`fgëwc_u∆ocked
 (
__FILE
 *
__°ªam
);

818 
wöt_t
 
	`Âutwc_u∆ocked
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

827 
wöt_t
 
	`putwc_u∆ocked
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

828 
wöt_t
 
	`putwch¨_u∆ocked
 (
wch¨_t
 
__wc
);

837 
wch¨_t
 *
	`fgëws_u∆ocked
 (wch¨_à*
__ª°ri˘
 
__ws
, 
__n
,

838 
__FILE
 *
__ª°ri˘
 
__°ªam
);

846 
	`Âutws_u∆ocked
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__ws
,

847 
__FILE
 *
__ª°ri˘
 
__°ªam
);

851 
__BEGIN_NAMESPACE_C99


855 
size_t
 
	$wcs·ime
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

856 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

857 c⁄° 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

858 
__END_NAMESPACE_C99


860 #ifde‡
__USE_GNU


861 
	~<xloˇÀ.h
>

865 
size_t
 
	$wcs·ime_l
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

866 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

867 c⁄° 
tm
 *
__ª°ri˘
 
__ç
,

868 
__loˇÀ_t
 
__loc
Ë
__THROW
;

877 #i‡
deföed
 
__USE_UNIX98
 && !deföed 
__USE_GNU


878 
	#__√ed_iswxxx


	)

879 
	~<w˘y≥.h
>

883 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


884 
	~<bôs/wch¨2.h
>

887 #ifde‡
__LDBL_COMPAT


888 
	~<bôs/wch¨-ldbl.h
>

891 
__END_DECLS


899 #unde‡
__√ed_mb°©e_t


900 #unde‡
__√ed_wöt_t


	@/usr/include/wctype.h

23 #i‚de‡
_WCTYPE_H


25 
	~<„©uªs.h
>

26 
	~<bôs/ty≥s.h
>

28 #i‚de‡
__√ed_iswxxx


29 
	#_WCTYPE_H
 1

	)

32 
	#__√ed_wöt_t


	)

33 
	~<wch¨.h
>

37 #i‚de‡
WEOF


38 
	#WEOF
 (0xffffffffu)

	)

41 #unde‡
__√ed_iswxxx


46 #i‚de‡
__iswxxx_deföed


47 
	#__iswxxx_deföed
 1

	)

49 
__BEGIN_NAMESPACE_C99


52 
	tw˘y≥_t
;

53 
	g__END_NAMESPACE_C99


55 #i‚de‡
_ISwbô


60 
	~<ídün.h
>

61 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


62 
	#_ISwbô
(
bô
Ë(1 << (bô))

	)

64 
	#_ISwbô
(
bô
) \

65 ((
bô
) < 8 ? () ((1UL << (bit)) << 24) \

66 : ((
bô
) < 16 ? () ((1UL << (bit)) << 8) \

67 : ((
bô
) < 24 ? () ((1UL << (bit)) >> 8) \

68 : (Ë((1UL << (
bô
)Ë>> 24))))

	)

73 
	m__ISwuµî
 = 0,

74 
	m__ISwlowî
 = 1,

75 
	m__ISwÆpha
 = 2,

76 
	m__ISwdigô
 = 3,

77 
	m__ISwxdigô
 = 4,

78 
	m__ISw•a˚
 = 5,

79 
	m__ISw¥öt
 = 6,

80 
	m__ISwgøph
 = 7,

81 
	m__ISwbœnk
 = 8,

82 
	m__ISw˙ål
 = 9,

83 
	m__ISwpun˘
 = 10,

84 
	m__ISwÆnum
 = 11,

86 
	m_ISwuµî
 = 
_ISwbô
 (
__ISwuµî
),

87 
	m_ISwlowî
 = 
_ISwbô
 (
__ISwlowî
),

88 
	m_ISwÆpha
 = 
_ISwbô
 (
__ISwÆpha
),

89 
	m_ISwdigô
 = 
_ISwbô
 (
__ISwdigô
),

90 
	m_ISwxdigô
 = 
_ISwbô
 (
__ISwxdigô
),

91 
	m_ISw•a˚
 = 
_ISwbô
 (
__ISw•a˚
),

92 
	m_ISw¥öt
 = 
_ISwbô
 (
__ISw¥öt
),

93 
	m_ISwgøph
 = 
_ISwbô
 (
__ISwgøph
),

94 
	m_ISwbœnk
 = 
_ISwbô
 (
__ISwbœnk
),

95 
	m_ISw˙ål
 = 
_ISwbô
 (
__ISw˙ål
),

96 
	m_ISwpun˘
 = 
_ISwbô
 (
__ISwpun˘
),

97 
	m_ISwÆnum
 = 
_ISwbô
 (
__ISwÆnum
)

102 
__BEGIN_DECLS


104 
__BEGIN_NAMESPACE_C99


111 
	$iswÆnum
 (
wöt_t
 
__wc
Ë
__THROW
;

117 
	$iswÆpha
 (
wöt_t
 
__wc
Ë
__THROW
;

120 
	$isw˙ål
 (
wöt_t
 
__wc
Ë
__THROW
;

124 
	$iswdigô
 (
wöt_t
 
__wc
Ë
__THROW
;

128 
	$iswgøph
 (
wöt_t
 
__wc
Ë
__THROW
;

133 
	$iswlowî
 (
wöt_t
 
__wc
Ë
__THROW
;

136 
	$isw¥öt
 (
wöt_t
 
__wc
Ë
__THROW
;

141 
	$iswpun˘
 (
wöt_t
 
__wc
Ë
__THROW
;

146 
	$isw•a˚
 (
wöt_t
 
__wc
Ë
__THROW
;

151 
	$iswuµî
 (
wöt_t
 
__wc
Ë
__THROW
;

156 
	$iswxdigô
 (
wöt_t
 
__wc
Ë
__THROW
;

161 #ifde‡
__USE_ISOC99


162 
	$iswbœnk
 (
wöt_t
 
__wc
Ë
__THROW
;

171 
w˘y≥_t
 
	$w˘y≥
 (c⁄° *
__¥›îty
Ë
__THROW
;

175 
	$isw˘y≥
 (
wöt_t
 
__wc
, 
w˘y≥_t
 
__desc
Ë
__THROW
;

176 
__END_NAMESPACE_C99


183 
__BEGIN_NAMESPACE_C99


186 c⁄° 
	t__öt32_t
 *
	tw˘øns_t
;

187 
__END_NAMESPACE_C99


188 #ifde‡
__USE_GNU


189 
	$__USING_NAMESPACE_C99
(
w˘øns_t
)

192 
__BEGIN_NAMESPACE_C99


194 
wöt_t
 
	$towlowî
 (
wöt_t
 
__wc
Ë
__THROW
;

197 
wöt_t
 
	$towuµî
 (
wöt_t
 
__wc
Ë
__THROW
;

198 
__END_NAMESPACE_C99


200 
__END_DECLS


207 #ifde‡
_WCTYPE_H


213 
__BEGIN_DECLS


215 
__BEGIN_NAMESPACE_C99


218 
w˘øns_t
 
	$w˘øns
 (c⁄° *
__¥›îty
Ë
__THROW
;

221 
wöt_t
 
	$tow˘øns
 (
wöt_t
 
__wc
, 
w˘øns_t
 
__desc
Ë
__THROW
;

222 
__END_NAMESPACE_C99


224 #ifde‡
__USE_XOPEN2K8


226 
	~<xloˇÀ.h
>

230 
	$iswÆnum_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

236 
	$iswÆpha_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

239 
	$isw˙ål_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

243 
	$iswdigô_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

247 
	$iswgøph_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

252 
	$iswlowî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

255 
	$isw¥öt_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

260 
	$iswpun˘_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

265 
	$isw•a˚_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

270 
	$iswuµî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

275 
	$iswxdigô_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

280 
	$iswbœnk_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

284 
w˘y≥_t
 
	$w˘y≥_l
 (c⁄° *
__¥›îty
, 
__loˇÀ_t
 
__loˇÀ
)

285 
__THROW
;

289 
	$isw˘y≥_l
 (
wöt_t
 
__wc
, 
w˘y≥_t
 
__desc
, 
__loˇÀ_t
 
__loˇÀ
)

290 
__THROW
;

298 
wöt_t
 
	$towlowî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

301 
wöt_t
 
	$towuµî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

305 
w˘øns_t
 
	$w˘øns_l
 (c⁄° *
__¥›îty
, 
__loˇÀ_t
 
__loˇÀ
)

306 
__THROW
;

309 
wöt_t
 
	$tow˘øns_l
 (
wöt_t
 
__wc
, 
w˘øns_t
 
__desc
,

310 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

314 
__END_DECLS


	@
1
.
1
/usr/include
114
3828
NaN/src/covm_mex.cpp
NaN/src/histo_mex.cpp
NaN/src/kth_element.cpp
NaN/src/linear.cpp
NaN/src/linear.h
NaN/src/linear_model_matlab.c
NaN/src/linear_model_matlab.h
NaN/src/predict.c
NaN/src/str2array.cpp
NaN/src/sumskipnan_mex.cpp
NaN/src/svm.cpp
NaN/src/svm.h
NaN/src/svm_model_matlab.c
NaN/src/svm_model_matlab.h
NaN/src/svmpredict_mex.cpp
NaN/src/svmtrain_mex.cpp
NaN/src/train.c
NaN/src/tron.cpp
NaN/src/tron.h
NaN/src/xptopen.cpp
Using-OpenMP-Examples-Distr/chapter3/fig3.10-mxv-omp.c
Using-OpenMP-Examples-Distr/chapter3/fig3.12-conditional-comp.c
Using-OpenMP-Examples-Distr/chapter3/fig3.5-mxv-serial.c
Using-OpenMP-Examples-Distr/chapter4/fig4.10-for-loop.c
Using-OpenMP-Examples-Distr/chapter4/fig4.12-two-for-loops.c
Using-OpenMP-Examples-Distr/chapter4/fig4.16-sections.c
Using-OpenMP-Examples-Distr/chapter4/fig4.22-single.c
Using-OpenMP-Examples-Distr/chapter4/fig4.3-parallel-region.c
Using-OpenMP-Examples-Distr/chapter4/fig4.31-shared-clause.c
Using-OpenMP-Examples-Distr/chapter4/fig4.32-private-clause.c
Using-OpenMP-Examples-Distr/chapter4/fig4.34-lastprivate-clause.c
Using-OpenMP-Examples-Distr/chapter4/fig4.36-lastprivate-alternative.c
Using-OpenMP-Examples-Distr/chapter4/fig4.37-firstprivate-clause.c
Using-OpenMP-Examples-Distr/chapter4/fig4.39-firstprivate-alternative.c
Using-OpenMP-Examples-Distr/chapter4/fig4.43-schedule-clause.c
Using-OpenMP-Examples-Distr/chapter4/fig4.47-barrier.c
Using-OpenMP-Examples-Distr/chapter4/fig4.55-critical-region.c
Using-OpenMP-Examples-Distr/chapter4/fig4.57-critical-region-print.c
Using-OpenMP-Examples-Distr/chapter4/fig4.58-critical-region-minval.c
Using-OpenMP-Examples-Distr/chapter4/fig4.61-atomic.c
Using-OpenMP-Examples-Distr/chapter4/fig4.62-atomic-func.c
Using-OpenMP-Examples-Distr/chapter4/fig4.68-master.c
Using-OpenMP-Examples-Distr/chapter4/fig4.70-if-clause.c
Using-OpenMP-Examples-Distr/chapter4/fig4.72-num-threads-clause.c
Using-OpenMP-Examples-Distr/chapter4/fig4.74-ordered.c
Using-OpenMP-Examples-Distr/chapter4/fig4.77-reduction.c
Using-OpenMP-Examples-Distr/chapter4/fig4.85-nested-parallel.c
Using-OpenMP-Examples-Distr/chapter4/fig4.87-nested-parallel-mod.c
Using-OpenMP-Examples-Distr/chapter4/fig4.96-global-data.c
Using-OpenMP-Examples-Distr/chapter4/fig4.98-threadprivate.c
Using-OpenMP-Examples-Distr/chapter6/fig6.22-overlap-comp-io.c
Using-OpenMP-Examples-Distr/chapter7/fig7.11-nested-parallel.c
Using-OpenMP-Examples-Distr/chapter7/fig7.7-first-lastprivate.c
Using-OpenMP-Examples-Distr/include/gnu-compilers.h
Using-OpenMP-Examples-Distr/include/ibm-compilers.h
Using-OpenMP-Examples-Distr/include/intel-compilers-linux.h
Using-OpenMP-Examples-Distr/include/intel-compilers-macos.h
Using-OpenMP-Examples-Distr/include/pgi-compilers.h
Using-OpenMP-Examples-Distr/include/sun-studio-compilers.h
aff.c
example.c
exercises/bug1.c
exercises/bug1fix.c
exercises/bug2.c
exercises/bug3.c
exercises/bug4.c
exercises/bug5.c
exercises/bug5fix.c
exercises/bug6.c
exercises/hello.c
exercises/mm.c
exercises/omp_getEnvInfo.c
exercises/omp_workshare1.c
exercises/omp_workshare2.c
exercises/orphan.c
exercises/reduction.c
for-test.c
helloMP.c
mytimer.c
mytimer.h
omp-for.c
reg.c
serial-test.c
task-test.c
tasks.c
threads.c
/usr/include/assert.h
/usr/include/byteswap.h
/usr/include/ctype.h
/usr/include/endian.h
/usr/include/limits.h
/usr/include/locale.h
/usr/include/malloc.h
/usr/include/math.h
/usr/include/pthread.h
/usr/include/sched.h
/usr/include/stdint.h
/usr/include/stdio.h
/usr/include/stdlib.h
/usr/include/string.h
/usr/include/strings.h
/usr/include/time.h
/usr/include/unistd.h
/usr/include/zlib.h
/usr/include/alloca.h
/usr/include/features.h
/usr/include/getopt.h
/usr/include/libio.h
/usr/include/xlocale.h
/usr/include/_G_config.h
/usr/include/stdc-predef.h
/usr/include/gconv.h
/usr/include/wchar.h
/usr/include/wctype.h
